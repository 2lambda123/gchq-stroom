/*
 * This file is generated by jOOQ.
 */
package stroom.proxy.repo.db.jooq.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.proxy.repo.db.jooq.tables.ZipEntry;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipEntryRecord extends UpdatableRecordImpl<ZipEntryRecord> implements Record5<Long, String, Long, Long, Long> {

    private static final long serialVersionUID = 222002177;

    /**
     * Setter for <code>PUBLIC.ZIP_ENTRY.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ZIP_ENTRY.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ZIP_ENTRY.EXTENSION</code>.
     */
    public void setExtension(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ZIP_ENTRY.EXTENSION</code>.
     */
    public String getExtension() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ZIP_ENTRY.BYTE_SIZE</code>.
     */
    public void setByteSize(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ZIP_ENTRY.BYTE_SIZE</code>.
     */
    public Long getByteSize() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ZIP_ENTRY.FK_ZIP_SOURCE_ID</code>.
     */
    public void setFkZipSourceId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ZIP_ENTRY.FK_ZIP_SOURCE_ID</code>.
     */
    public Long getFkZipSourceId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ZIP_ENTRY.FK_ZIP_DATA_ID</code>.
     */
    public void setFkZipDataId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ZIP_ENTRY.FK_ZIP_DATA_ID</code>.
     */
    public Long getFkZipDataId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, Long, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ZipEntry.ZIP_ENTRY.ID;
    }

    @Override
    public Field<String> field2() {
        return ZipEntry.ZIP_ENTRY.EXTENSION;
    }

    @Override
    public Field<Long> field3() {
        return ZipEntry.ZIP_ENTRY.BYTE_SIZE;
    }

    @Override
    public Field<Long> field4() {
        return ZipEntry.ZIP_ENTRY.FK_ZIP_SOURCE_ID;
    }

    @Override
    public Field<Long> field5() {
        return ZipEntry.ZIP_ENTRY.FK_ZIP_DATA_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getExtension();
    }

    @Override
    public Long component3() {
        return getByteSize();
    }

    @Override
    public Long component4() {
        return getFkZipSourceId();
    }

    @Override
    public Long component5() {
        return getFkZipDataId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getExtension();
    }

    @Override
    public Long value3() {
        return getByteSize();
    }

    @Override
    public Long value4() {
        return getFkZipSourceId();
    }

    @Override
    public Long value5() {
        return getFkZipDataId();
    }

    @Override
    public ZipEntryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ZipEntryRecord value2(String value) {
        setExtension(value);
        return this;
    }

    @Override
    public ZipEntryRecord value3(Long value) {
        setByteSize(value);
        return this;
    }

    @Override
    public ZipEntryRecord value4(Long value) {
        setFkZipSourceId(value);
        return this;
    }

    @Override
    public ZipEntryRecord value5(Long value) {
        setFkZipDataId(value);
        return this;
    }

    @Override
    public ZipEntryRecord values(Long value1, String value2, Long value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ZipEntryRecord
     */
    public ZipEntryRecord() {
        super(ZipEntry.ZIP_ENTRY);
    }

    /**
     * Create a detached, initialised ZipEntryRecord
     */
    public ZipEntryRecord(Long id, String extension, Long byteSize, Long fkZipSourceId, Long fkZipDataId) {
        super(ZipEntry.ZIP_ENTRY);

        set(0, id);
        set(1, extension);
        set(2, byteSize);
        set(3, fkZipSourceId);
        set(4, fkZipDataId);
    }
}

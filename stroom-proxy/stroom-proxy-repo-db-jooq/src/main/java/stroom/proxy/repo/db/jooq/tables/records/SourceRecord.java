/*
 * This file is generated by jOOQ.
 */
package stroom.proxy.repo.db.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.proxy.repo.db.jooq.tables.Source;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SourceRecord extends UpdatableRecordImpl<SourceRecord> implements Record4<Integer, String, Long, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>source.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>source.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>source.path</code>.
     */
    public void setPath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>source.path</code>.
     */
    public String getPath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>source.last_modified_time_ms</code>.
     */
    public void setLastModifiedTimeMs(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>source.last_modified_time_ms</code>.
     */
    public Long getLastModifiedTimeMs() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>source.examined</code>.
     */
    public void setExamined(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>source.examined</code>.
     */
    public Boolean getExamined() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Long, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Long, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Source.SOURCE.ID;
    }

    @Override
    public Field<String> field2() {
        return Source.SOURCE.PATH;
    }

    @Override
    public Field<Long> field3() {
        return Source.SOURCE.LAST_MODIFIED_TIME_MS;
    }

    @Override
    public Field<Boolean> field4() {
        return Source.SOURCE.EXAMINED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPath();
    }

    @Override
    public Long component3() {
        return getLastModifiedTimeMs();
    }

    @Override
    public Boolean component4() {
        return getExamined();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPath();
    }

    @Override
    public Long value3() {
        return getLastModifiedTimeMs();
    }

    @Override
    public Boolean value4() {
        return getExamined();
    }

    @Override
    public SourceRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SourceRecord value2(String value) {
        setPath(value);
        return this;
    }

    @Override
    public SourceRecord value3(Long value) {
        setLastModifiedTimeMs(value);
        return this;
    }

    @Override
    public SourceRecord value4(Boolean value) {
        setExamined(value);
        return this;
    }

    @Override
    public SourceRecord values(Integer value1, String value2, Long value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SourceRecord
     */
    public SourceRecord() {
        super(Source.SOURCE);
    }

    /**
     * Create a detached, initialised SourceRecord
     */
    public SourceRecord(Integer id, String path, Long lastModifiedTimeMs, Boolean examined) {
        super(Source.SOURCE);

        setId(id);
        setPath(path);
        setLastModifiedTimeMs(lastModifiedTimeMs);
        setExamined(examined);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.proxy.repo.db.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.proxy.repo.db.jooq.tables.Source;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SourceRecord extends UpdatableRecordImpl<SourceRecord> implements Record7<Long, Long, String, String, Boolean, Boolean, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>source.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>source.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>source.file_store_id</code>.
     */
    public void setFileStoreId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>source.file_store_id</code>.
     */
    public Long getFileStoreId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>source.feed_name</code>.
     */
    public void setFeedName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>source.feed_name</code>.
     */
    public String getFeedName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>source.type_name</code>.
     */
    public void setTypeName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>source.type_name</code>.
     */
    public String getTypeName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>source.examined</code>.
     */
    public void setExamined(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>source.examined</code>.
     */
    public Boolean getExamined() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>source.forwarded</code>.
     */
    public void setForwarded(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>source.forwarded</code>.
     */
    public Boolean getForwarded() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>source.new_position</code>.
     */
    public void setNewPosition(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>source.new_position</code>.
     */
    public Long getNewPosition() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, String, String, Boolean, Boolean, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, String, String, Boolean, Boolean, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Source.SOURCE.ID;
    }

    @Override
    public Field<Long> field2() {
        return Source.SOURCE.FILE_STORE_ID;
    }

    @Override
    public Field<String> field3() {
        return Source.SOURCE.FEED_NAME;
    }

    @Override
    public Field<String> field4() {
        return Source.SOURCE.TYPE_NAME;
    }

    @Override
    public Field<Boolean> field5() {
        return Source.SOURCE.EXAMINED;
    }

    @Override
    public Field<Boolean> field6() {
        return Source.SOURCE.FORWARDED;
    }

    @Override
    public Field<Long> field7() {
        return Source.SOURCE.NEW_POSITION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getFileStoreId();
    }

    @Override
    public String component3() {
        return getFeedName();
    }

    @Override
    public String component4() {
        return getTypeName();
    }

    @Override
    public Boolean component5() {
        return getExamined();
    }

    @Override
    public Boolean component6() {
        return getForwarded();
    }

    @Override
    public Long component7() {
        return getNewPosition();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getFileStoreId();
    }

    @Override
    public String value3() {
        return getFeedName();
    }

    @Override
    public String value4() {
        return getTypeName();
    }

    @Override
    public Boolean value5() {
        return getExamined();
    }

    @Override
    public Boolean value6() {
        return getForwarded();
    }

    @Override
    public Long value7() {
        return getNewPosition();
    }

    @Override
    public SourceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SourceRecord value2(Long value) {
        setFileStoreId(value);
        return this;
    }

    @Override
    public SourceRecord value3(String value) {
        setFeedName(value);
        return this;
    }

    @Override
    public SourceRecord value4(String value) {
        setTypeName(value);
        return this;
    }

    @Override
    public SourceRecord value5(Boolean value) {
        setExamined(value);
        return this;
    }

    @Override
    public SourceRecord value6(Boolean value) {
        setForwarded(value);
        return this;
    }

    @Override
    public SourceRecord value7(Long value) {
        setNewPosition(value);
        return this;
    }

    @Override
    public SourceRecord values(Long value1, Long value2, String value3, String value4, Boolean value5, Boolean value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SourceRecord
     */
    public SourceRecord() {
        super(Source.SOURCE);
    }

    /**
     * Create a detached, initialised SourceRecord
     */
    public SourceRecord(Long id, Long fileStoreId, String feedName, String typeName, Boolean examined, Boolean forwarded, Long newPosition) {
        super(Source.SOURCE);

        setId(id);
        setFileStoreId(fileStoreId);
        setFeedName(feedName);
        setTypeName(typeName);
        setExamined(examined);
        setForwarded(forwarded);
        setNewPosition(newPosition);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.proxy.repo.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import stroom.proxy.repo.db.jooq.DefaultSchema;
import stroom.proxy.repo.db.jooq.Keys;
import stroom.proxy.repo.db.jooq.tables.records.ZipDestDataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipDestData extends TableImpl<ZipDestDataRecord> {

    private static final long serialVersionUID = 1703164708;

    /**
     * The reference instance of <code>zip_dest_data</code>
     */
    public static final ZipDestData ZIP_DEST_DATA = new ZipDestData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ZipDestDataRecord> getRecordType() {
        return ZipDestDataRecord.class;
    }

    /**
     * The column <code>zip_dest_data.id</code>.
     */
    public final TableField<ZipDestDataRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>zip_dest_data.fk_zip_dest_id</code>.
     */
    public final TableField<ZipDestDataRecord, Integer> FK_ZIP_DEST_ID = createField(DSL.name("fk_zip_dest_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>zip_dest_data.fk_zip_data_id</code>.
     */
    public final TableField<ZipDestDataRecord, Integer> FK_ZIP_DATA_ID = createField(DSL.name("fk_zip_data_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>zip_dest_data</code> table reference
     */
    public ZipDestData() {
        this(DSL.name("zip_dest_data"), null);
    }

    /**
     * Create an aliased <code>zip_dest_data</code> table reference
     */
    public ZipDestData(String alias) {
        this(DSL.name(alias), ZIP_DEST_DATA);
    }

    /**
     * Create an aliased <code>zip_dest_data</code> table reference
     */
    public ZipDestData(Name alias) {
        this(alias, ZIP_DEST_DATA);
    }

    private ZipDestData(Name alias, Table<ZipDestDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private ZipDestData(Name alias, Table<ZipDestDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ZipDestData(Table<O> child, ForeignKey<O, ZipDestDataRecord> key) {
        super(child, key, ZIP_DEST_DATA);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<ZipDestDataRecord> getPrimaryKey() {
        return Keys.PK_ZIP_DEST_DATA;
    }

    @Override
    public List<UniqueKey<ZipDestDataRecord>> getKeys() {
        return Arrays.<UniqueKey<ZipDestDataRecord>>asList(Keys.PK_ZIP_DEST_DATA);
    }

    @Override
    public List<ForeignKey<ZipDestDataRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ZipDestDataRecord, ?>>asList(Keys.FK_ZIP_DEST_DATA_ZIP_DEST_1, Keys.FK_ZIP_DEST_DATA_ZIP_DATA_1);
    }

    public ZipDest zipDest() {
        return new ZipDest(this, Keys.FK_ZIP_DEST_DATA_ZIP_DEST_1);
    }

    public ZipData zipData() {
        return new ZipData(this, Keys.FK_ZIP_DEST_DATA_ZIP_DATA_1);
    }

    @Override
    public ZipDestData as(String alias) {
        return new ZipDestData(DSL.name(alias), this);
    }

    @Override
    public ZipDestData as(Name alias) {
        return new ZipDestData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ZipDestData rename(String name) {
        return new ZipDestData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ZipDestData rename(Name name) {
        return new ZipDestData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.proxy.repo.db.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.proxy.repo.db.jooq.tables.ForwardSource;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForwardSourceRecord extends UpdatableRecordImpl<ForwardSourceRecord> implements Record5<Long, Integer, Long, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>forward_source.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>forward_source.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>forward_source.fk_forward_url_id</code>.
     */
    public void setFkForwardUrlId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>forward_source.fk_forward_url_id</code>.
     */
    public Integer getFkForwardUrlId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>forward_source.fk_source_id</code>.
     */
    public void setFkSourceId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>forward_source.fk_source_id</code>.
     */
    public Long getFkSourceId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>forward_source.success</code>.
     */
    public void setSuccess(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>forward_source.success</code>.
     */
    public Boolean getSuccess() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>forward_source.error</code>.
     */
    public void setError(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>forward_source.error</code>.
     */
    public String getError() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Long, Boolean, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Integer, Long, Boolean, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ForwardSource.FORWARD_SOURCE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ForwardSource.FORWARD_SOURCE.FK_FORWARD_URL_ID;
    }

    @Override
    public Field<Long> field3() {
        return ForwardSource.FORWARD_SOURCE.FK_SOURCE_ID;
    }

    @Override
    public Field<Boolean> field4() {
        return ForwardSource.FORWARD_SOURCE.SUCCESS;
    }

    @Override
    public Field<String> field5() {
        return ForwardSource.FORWARD_SOURCE.ERROR;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getFkForwardUrlId();
    }

    @Override
    public Long component3() {
        return getFkSourceId();
    }

    @Override
    public Boolean component4() {
        return getSuccess();
    }

    @Override
    public String component5() {
        return getError();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getFkForwardUrlId();
    }

    @Override
    public Long value3() {
        return getFkSourceId();
    }

    @Override
    public Boolean value4() {
        return getSuccess();
    }

    @Override
    public String value5() {
        return getError();
    }

    @Override
    public ForwardSourceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ForwardSourceRecord value2(Integer value) {
        setFkForwardUrlId(value);
        return this;
    }

    @Override
    public ForwardSourceRecord value3(Long value) {
        setFkSourceId(value);
        return this;
    }

    @Override
    public ForwardSourceRecord value4(Boolean value) {
        setSuccess(value);
        return this;
    }

    @Override
    public ForwardSourceRecord value5(String value) {
        setError(value);
        return this;
    }

    @Override
    public ForwardSourceRecord values(Long value1, Integer value2, Long value3, Boolean value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForwardSourceRecord
     */
    public ForwardSourceRecord() {
        super(ForwardSource.FORWARD_SOURCE);
    }

    /**
     * Create a detached, initialised ForwardSourceRecord
     */
    public ForwardSourceRecord(Long id, Integer fkForwardUrlId, Long fkSourceId, Boolean success, String error) {
        super(ForwardSource.FORWARD_SOURCE);

        setId(id);
        setFkForwardUrlId(fkForwardUrlId);
        setFkSourceId(fkSourceId);
        setSuccess(success);
        setError(error);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.proxy.repo.db.jooq.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.proxy.repo.db.jooq.tables.ZipData;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ZipDataRecord extends UpdatableRecordImpl<ZipDataRecord> implements Record6<Integer, String, String, String, Integer, Boolean> {

    private static final long serialVersionUID = 1261508941;

    /**
     * Setter for <code>zip_data.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>zip_data.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>zip_data.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zip_data.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zip_data.feed_name</code>.
     */
    public void setFeedName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>zip_data.feed_name</code>.
     */
    public String getFeedName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>zip_data.type_name</code>.
     */
    public void setTypeName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>zip_data.type_name</code>.
     */
    public String getTypeName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>zip_data.fk_zip_source_id</code>.
     */
    public void setFkZipSourceId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>zip_data.fk_zip_source_id</code>.
     */
    public Integer getFkZipSourceId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>zip_data.has_dest</code>.
     */
    public void setHasDest(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>zip_data.has_dest</code>.
     */
    public Boolean getHasDest() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, Integer, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, Integer, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ZipData.ZIP_DATA.ID;
    }

    @Override
    public Field<String> field2() {
        return ZipData.ZIP_DATA.NAME;
    }

    @Override
    public Field<String> field3() {
        return ZipData.ZIP_DATA.FEED_NAME;
    }

    @Override
    public Field<String> field4() {
        return ZipData.ZIP_DATA.TYPE_NAME;
    }

    @Override
    public Field<Integer> field5() {
        return ZipData.ZIP_DATA.FK_ZIP_SOURCE_ID;
    }

    @Override
    public Field<Boolean> field6() {
        return ZipData.ZIP_DATA.HAS_DEST;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getFeedName();
    }

    @Override
    public String component4() {
        return getTypeName();
    }

    @Override
    public Integer component5() {
        return getFkZipSourceId();
    }

    @Override
    public Boolean component6() {
        return getHasDest();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getFeedName();
    }

    @Override
    public String value4() {
        return getTypeName();
    }

    @Override
    public Integer value5() {
        return getFkZipSourceId();
    }

    @Override
    public Boolean value6() {
        return getHasDest();
    }

    @Override
    public ZipDataRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ZipDataRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ZipDataRecord value3(String value) {
        setFeedName(value);
        return this;
    }

    @Override
    public ZipDataRecord value4(String value) {
        setTypeName(value);
        return this;
    }

    @Override
    public ZipDataRecord value5(Integer value) {
        setFkZipSourceId(value);
        return this;
    }

    @Override
    public ZipDataRecord value6(Boolean value) {
        setHasDest(value);
        return this;
    }

    @Override
    public ZipDataRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ZipDataRecord
     */
    public ZipDataRecord() {
        super(ZipData.ZIP_DATA);
    }

    /**
     * Create a detached, initialised ZipDataRecord
     */
    public ZipDataRecord(Integer id, String name, String feedName, String typeName, Integer fkZipSourceId, Boolean hasDest) {
        super(ZipData.ZIP_DATA);

        set(0, id);
        set(1, name);
        set(2, feedName);
        set(3, typeName);
        set(4, fkZipSourceId);
        set(5, hasDest);
    }
}

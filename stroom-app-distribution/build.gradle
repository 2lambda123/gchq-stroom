apply plugin: 'distribution'

configurations.all {
    transitive = false
}

dependencies {
//    runtime project(path: ':stroom-app', configuration: 'war')
    runtime project(path: ':stroom-util')
    runtime 'mysql:mysql-connector-java:5.1.40'
}

//task copyLibs(type:Copy) {
//    def libDir = "src/main/dist/template/lib"
//
//    delete libDir
//    file(libDir).mkdirs()
//
//    copy {
//        from fileTree(new File(project(':stroom-app').buildDir, 'libs')).include('*.war')
////        from fileTree(new File(project(':stroom-util').buildDir, 'libs')).include('*.jar').exclude('*source*', '*test*')
//        from configurations.runtime
//        into libDir
//    }
//}

distributions {
    main {
        contents {
            from (fileTree(new File(project(':stroom-app').buildDir, 'libs')).include('*.war')) {
                into 'lib'
            }
//        from fileTree(new File(project(':stroom-util').buildDir, 'libs')).include('*.jar').exclude('*source*', '*test*')
            from (configurations.runtime) {
                into 'lib'
            }

            from('src/main/dist') {
                into ''
            }
        }
    }
}

//task createDistribution(type: Zip, dependsOn: build) {
////    classifier = 'pants'
//
//    from (fileTree(new File(project(':stroom-app').buildDir, 'libs')).include('*.war')) {
//        into 'template/lib'
//    }
////        from fileTree(new File(project(':stroom-util').buildDir, 'libs')).include('*.jar').exclude('*source*', '*test*')
//    from (configurations.runtime) {
//        into 'template/lib'
//    }
//
//    from('src/main/dist') {
//        into ''
//    }
//}

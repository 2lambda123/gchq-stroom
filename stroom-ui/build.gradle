//plugins {
//    id "com.moowork.node" version "1.3.1"
//}

ext.moduleName = 'stroom.ui'

def resourcesDir = project(':stroom-app').file('src/main/resources')
def outputDir = "${resourcesDir}/new-ui"

//node {
////    // Version of node to use.
////    version = '13.12.0'
//
////    // Version of npm to use.
////    npmVersion = '6.13.4'
//
////    // Version of Yarn to use.
////    yarnVersion = '1.21.4'
//
//    // Base URL for fetching node distributions (change if you have a mirror).
//    distBaseUrl = 'https://nodejs.org/dist'
//
//    // If true, it will download node using above parameters.
//    // If false, it will try to use globally installed node.
//    download = true
//
//    // Set the work directory for unpacking node
//    workDir = file("${project.buildDir}/nodejs")
//
////    // Set the work directory for NPM
////    npmWorkDir = file("${project.buildDir}/npm")
//
//    // Set the work directory for Yarn
//    yarnWorkDir = file("${project.buildDir}/yarn")
//
//    // Set the work directory where node_modules should be located
//    nodeModulesDir = file("${project.projectDir}")
//}

task generateApi {
    // Ensure swagger output is created first as we use it to create the typescript API for the UI.
    dependsOn ":stroom-app:resolve"

    doLast {
        exec {
            executable "./generateApi.sh"
        }
    }
}

task removeYarnBuild {
    doLast {
        println 'Deleting compiled output: ' + outputDir.toString()
        delete outputDir
    }
}

task yarnBuild {
    dependsOn removeYarnBuild
    dependsOn generateApi

    doLast {
        exec {
            executable "./yarnBuild.sh"
        }
    }
}

task copyYarnBuild(dependsOn: yarnBuild, type: Copy) {
    from "${project.buildDir}"
    into "${outputDir}"
}

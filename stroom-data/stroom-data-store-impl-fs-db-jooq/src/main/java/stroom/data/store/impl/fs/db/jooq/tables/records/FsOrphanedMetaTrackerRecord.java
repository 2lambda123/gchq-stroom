/*
 * This file is generated by jOOQ.
 */
package stroom.data.store.impl.fs.db.jooq.tables.records;


import stroom.data.store.impl.fs.db.jooq.tables.FsOrphanedMetaTracker;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FsOrphanedMetaTrackerRecord extends UpdatableRecordImpl<FsOrphanedMetaTrackerRecord> implements Record2<Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stroom.fs_orphaned_meta_tracker.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.fs_orphaned_meta_tracker.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.fs_orphaned_meta_tracker.min_meta_id</code>.
     */
    public void setMinMetaId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.fs_orphaned_meta_tracker.min_meta_id</code>.
     */
    public Long getMinMetaId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return FsOrphanedMetaTracker.FS_ORPHANED_META_TRACKER.ID;
    }

    @Override
    public Field<Long> field2() {
        return FsOrphanedMetaTracker.FS_ORPHANED_META_TRACKER.MIN_META_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getMinMetaId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getMinMetaId();
    }

    @Override
    public FsOrphanedMetaTrackerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public FsOrphanedMetaTrackerRecord value2(Long value) {
        setMinMetaId(value);
        return this;
    }

    @Override
    public FsOrphanedMetaTrackerRecord values(Integer value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FsOrphanedMetaTrackerRecord
     */
    public FsOrphanedMetaTrackerRecord() {
        super(FsOrphanedMetaTracker.FS_ORPHANED_META_TRACKER);
    }

    /**
     * Create a detached, initialised FsOrphanedMetaTrackerRecord
     */
    public FsOrphanedMetaTrackerRecord(Integer id, Long minMetaId) {
        super(FsOrphanedMetaTracker.FS_ORPHANED_META_TRACKER);

        setId(id);
        setMinMetaId(minMetaId);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.data.store.impl.fs.db.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.data.store.impl.fs.db.jooq.tables.FileMetaVolume;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileMetaVolumeRecord extends UpdatableRecordImpl<FileMetaVolumeRecord> implements Record2<Long, Integer> {

    private static final long serialVersionUID = -1225438589;

    /**
     * Setter for <code>stroom.file_meta_volume.meta_id</code>.
     */
    public void setMetaId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.file_meta_volume.meta_id</code>.
     */
    public Long getMetaId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>stroom.file_meta_volume.file_volume_id</code>.
     */
    public void setFileVolumeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.file_meta_volume.file_volume_id</code>.
     */
    public Integer getFileVolumeId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return FileMetaVolume.FILE_META_VOLUME.META_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return FileMetaVolume.FILE_META_VOLUME.FILE_VOLUME_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getMetaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getFileVolumeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getMetaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getFileVolumeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileMetaVolumeRecord value1(Long value) {
        setMetaId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileMetaVolumeRecord value2(Integer value) {
        setFileVolumeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileMetaVolumeRecord values(Long value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileMetaVolumeRecord
     */
    public FileMetaVolumeRecord() {
        super(FileMetaVolume.FILE_META_VOLUME);
    }

    /**
     * Create a detached, initialised FileMetaVolumeRecord
     */
    public FileMetaVolumeRecord(Long metaId, Integer fileVolumeId) {
        super(FileMetaVolume.FILE_META_VOLUME);

        set(0, metaId);
        set(1, fileVolumeId);
    }
}

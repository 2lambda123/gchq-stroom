/*
 * This file is generated by jOOQ.
 */
package stroom.data.store.impl.fs.db.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.data.store.impl.fs.db.jooq.tables.FileVolume;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FileVolumeRecord extends UpdatableRecordImpl<FileVolumeRecord> implements Record10<Integer, Integer, Long, String, Long, String, String, Byte, Long, Integer> {

    private static final long serialVersionUID = 230871241;

    /**
     * Setter for <code>stroom.file_volume.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.file_volume.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.file_volume.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.file_volume.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stroom.file_volume.create_time_ms</code>.
     */
    public void setCreateTimeMs(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.file_volume.create_time_ms</code>.
     */
    public Long getCreateTimeMs() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>stroom.file_volume.create_user</code>.
     */
    public void setCreateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.file_volume.create_user</code>.
     */
    public String getCreateUser() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stroom.file_volume.update_time_ms</code>.
     */
    public void setUpdateTimeMs(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.file_volume.update_time_ms</code>.
     */
    public Long getUpdateTimeMs() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>stroom.file_volume.update_user</code>.
     */
    public void setUpdateUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.file_volume.update_user</code>.
     */
    public String getUpdateUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>stroom.file_volume.path</code>.
     */
    public void setPath(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.file_volume.path</code>.
     */
    public String getPath() {
        return (String) get(6);
    }

    /**
     * Setter for <code>stroom.file_volume.status</code>.
     */
    public void setStatus(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.file_volume.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>stroom.file_volume.byte_limit</code>.
     */
    public void setByteLimit(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.file_volume.byte_limit</code>.
     */
    public Long getByteLimit() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>stroom.file_volume.fk_file_volume_state_id</code>.
     */
    public void setFkFileVolumeStateId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.file_volume.fk_file_volume_state_id</code>.
     */
    public Integer getFkFileVolumeStateId() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Long, String, Long, String, String, Byte, Long, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Long, String, Long, String, String, Byte, Long, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return FileVolume.FILE_VOLUME.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return FileVolume.FILE_VOLUME.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return FileVolume.FILE_VOLUME.CREATE_TIME_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return FileVolume.FILE_VOLUME.CREATE_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return FileVolume.FILE_VOLUME.UPDATE_TIME_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return FileVolume.FILE_VOLUME.UPDATE_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return FileVolume.FILE_VOLUME.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return FileVolume.FILE_VOLUME.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return FileVolume.FILE_VOLUME.BYTE_LIMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return FileVolume.FILE_VOLUME.FK_FILE_VOLUME_STATE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getCreateTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCreateUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component5() {
        return getUpdateTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getUpdateUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getByteLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getFkFileVolumeStateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getCreateTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCreateUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getUpdateTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUpdateUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getByteLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getFkFileVolumeStateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value3(Long value) {
        setCreateTimeMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value4(String value) {
        setCreateUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value5(Long value) {
        setUpdateTimeMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value6(String value) {
        setUpdateUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value7(String value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value8(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value9(Long value) {
        setByteLimit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord value10(Integer value) {
        setFkFileVolumeStateId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FileVolumeRecord values(Integer value1, Integer value2, Long value3, String value4, Long value5, String value6, String value7, Byte value8, Long value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FileVolumeRecord
     */
    public FileVolumeRecord() {
        super(FileVolume.FILE_VOLUME);
    }

    /**
     * Create a detached, initialised FileVolumeRecord
     */
    public FileVolumeRecord(Integer id, Integer version, Long createTimeMs, String createUser, Long updateTimeMs, String updateUser, String path, Byte status, Long byteLimit, Integer fkFileVolumeStateId) {
        super(FileVolume.FILE_VOLUME);

        set(0, id);
        set(1, version);
        set(2, createTimeMs);
        set(3, createUser);
        set(4, updateTimeMs);
        set(5, updateUser);
        set(6, path);
        set(7, status);
        set(8, byteLimit);
        set(9, fkFileVolumeStateId);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.authentication.impl.db.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.authentication.impl.db.jooq.tables.Token;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenRecord extends UpdatableRecordImpl<TokenRecord> implements Record11<Integer, Integer, Integer, String, Timestamp, String, Timestamp, Integer, Boolean, Timestamp, Integer> {

    private static final long serialVersionUID = 1860610508;

    /**
     * Setter for <code>stroom.token.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.token.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.token.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.token.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stroom.token.token_type_id</code>.
     */
    public void setTokenTypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.token.token_type_id</code>.
     */
    public Integer getTokenTypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>stroom.token.data</code>.
     */
    public void setData(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.token.data</code>.
     */
    public String getData() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stroom.token.expires_on</code>.
     */
    public void setExpiresOn(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.token.expires_on</code>.
     */
    public Timestamp getExpiresOn() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>stroom.token.comments</code>.
     */
    public void setComments(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.token.comments</code>.
     */
    public String getComments() {
        return (String) get(5);
    }

    /**
     * Setter for <code>stroom.token.issued_on</code>.
     */
    public void setIssuedOn(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.token.issued_on</code>.
     */
    public Timestamp getIssuedOn() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>stroom.token.issued_by_user</code>.
     */
    public void setIssuedByUser(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.token.issued_by_user</code>.
     */
    public Integer getIssuedByUser() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>stroom.token.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.token.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>stroom.token.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.token.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>stroom.token.updated_by_user</code>.
     */
    public void setUpdatedByUser(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.token.updated_by_user</code>.
     */
    public Integer getUpdatedByUser() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, Integer, String, Timestamp, String, Timestamp, Integer, Boolean, Timestamp, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Integer, Integer, String, Timestamp, String, Timestamp, Integer, Boolean, Timestamp, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Token.TOKEN.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Token.TOKEN.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Token.TOKEN.TOKEN_TYPE_ID;
    }

    @Override
    public Field<String> field4() {
        return Token.TOKEN.DATA;
    }

    @Override
    public Field<Timestamp> field5() {
        return Token.TOKEN.EXPIRES_ON;
    }

    @Override
    public Field<String> field6() {
        return Token.TOKEN.COMMENTS;
    }

    @Override
    public Field<Timestamp> field7() {
        return Token.TOKEN.ISSUED_ON;
    }

    @Override
    public Field<Integer> field8() {
        return Token.TOKEN.ISSUED_BY_USER;
    }

    @Override
    public Field<Boolean> field9() {
        return Token.TOKEN.ENABLED;
    }

    @Override
    public Field<Timestamp> field10() {
        return Token.TOKEN.UPDATED_ON;
    }

    @Override
    public Field<Integer> field11() {
        return Token.TOKEN.UPDATED_BY_USER;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getTokenTypeId();
    }

    @Override
    public String component4() {
        return getData();
    }

    @Override
    public Timestamp component5() {
        return getExpiresOn();
    }

    @Override
    public String component6() {
        return getComments();
    }

    @Override
    public Timestamp component7() {
        return getIssuedOn();
    }

    @Override
    public Integer component8() {
        return getIssuedByUser();
    }

    @Override
    public Boolean component9() {
        return getEnabled();
    }

    @Override
    public Timestamp component10() {
        return getUpdatedOn();
    }

    @Override
    public Integer component11() {
        return getUpdatedByUser();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getTokenTypeId();
    }

    @Override
    public String value4() {
        return getData();
    }

    @Override
    public Timestamp value5() {
        return getExpiresOn();
    }

    @Override
    public String value6() {
        return getComments();
    }

    @Override
    public Timestamp value7() {
        return getIssuedOn();
    }

    @Override
    public Integer value8() {
        return getIssuedByUser();
    }

    @Override
    public Boolean value9() {
        return getEnabled();
    }

    @Override
    public Timestamp value10() {
        return getUpdatedOn();
    }

    @Override
    public Integer value11() {
        return getUpdatedByUser();
    }

    @Override
    public TokenRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TokenRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public TokenRecord value3(Integer value) {
        setTokenTypeId(value);
        return this;
    }

    @Override
    public TokenRecord value4(String value) {
        setData(value);
        return this;
    }

    @Override
    public TokenRecord value5(Timestamp value) {
        setExpiresOn(value);
        return this;
    }

    @Override
    public TokenRecord value6(String value) {
        setComments(value);
        return this;
    }

    @Override
    public TokenRecord value7(Timestamp value) {
        setIssuedOn(value);
        return this;
    }

    @Override
    public TokenRecord value8(Integer value) {
        setIssuedByUser(value);
        return this;
    }

    @Override
    public TokenRecord value9(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public TokenRecord value10(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public TokenRecord value11(Integer value) {
        setUpdatedByUser(value);
        return this;
    }

    @Override
    public TokenRecord values(Integer value1, Integer value2, Integer value3, String value4, Timestamp value5, String value6, Timestamp value7, Integer value8, Boolean value9, Timestamp value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TokenRecord
     */
    public TokenRecord() {
        super(Token.TOKEN);
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(Integer id, Integer userId, Integer tokenTypeId, String data, Timestamp expiresOn, String comments, Timestamp issuedOn, Integer issuedByUser, Boolean enabled, Timestamp updatedOn, Integer updatedByUser) {
        super(Token.TOKEN);

        set(0, id);
        set(1, userId);
        set(2, tokenTypeId);
        set(3, data);
        set(4, expiresOn);
        set(5, comments);
        set(6, issuedOn);
        set(7, issuedByUser);
        set(8, enabled);
        set(9, updatedOn);
        set(10, updatedByUser);
    }
}

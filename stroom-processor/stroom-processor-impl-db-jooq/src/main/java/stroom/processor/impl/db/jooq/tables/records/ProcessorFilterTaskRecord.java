/*
 * This file is generated by jOOQ.
 */
package stroom.processor.impl.db.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.processor.impl.db.jooq.tables.ProcessorFilterTask;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessorFilterTaskRecord extends UpdatableRecordImpl<ProcessorFilterTaskRecord> implements Record11<Long, Integer, Integer, Integer, Long, Long, Long, Byte, Long, Long, String> {

    private static final long serialVersionUID = 746067907;

    /**
     * Setter for <code>stroom.processor_filter_task.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.fk_processor_filter_id</code>.
     */
    public void setFkProcessorFilterId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.fk_processor_filter_id</code>.
     */
    public Integer getFkProcessorFilterId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.fk_processor_node_id</code>.
     */
    public void setFkProcessorNodeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.fk_processor_node_id</code>.
     */
    public Integer getFkProcessorNodeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.create_time_ms</code>.
     */
    public void setCreateTimeMs(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.create_time_ms</code>.
     */
    public Long getCreateTimeMs() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.start_time_ms</code>.
     */
    public void setStartTimeMs(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.start_time_ms</code>.
     */
    public Long getStartTimeMs() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.end_time_ms</code>.
     */
    public void setEndTimeMs(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.end_time_ms</code>.
     */
    public Long getEndTimeMs() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.status</code>.
     */
    public void setStatus(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.status_time_ms</code>.
     */
    public void setStatusTimeMs(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.status_time_ms</code>.
     */
    public Long getStatusTimeMs() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.meta_id</code>.
     */
    public void setMetaId(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.meta_id</code>.
     */
    public Long getMetaId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>stroom.processor_filter_task.data</code>.
     */
    public void setData(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.processor_filter_task.data</code>.
     */
    public String getData() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Integer, Integer, Integer, Long, Long, Long, Byte, Long, Long, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Integer, Integer, Integer, Long, Long, Long, Byte, Long, Long, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.FK_PROCESSOR_FILTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.FK_PROCESSOR_NODE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.CREATE_TIME_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.START_TIME_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.END_TIME_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.STATUS_TIME_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.META_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return ProcessorFilterTask.PROCESSOR_FILTER_TASK.DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getFkProcessorFilterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getFkProcessorNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component5() {
        return getCreateTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getStartTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getEndTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getStatusTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getMetaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getFkProcessorFilterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getFkProcessorNodeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getCreateTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getStartTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getEndTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getStatusTimeMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getMetaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value3(Integer value) {
        setFkProcessorFilterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value4(Integer value) {
        setFkProcessorNodeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value5(Long value) {
        setCreateTimeMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value6(Long value) {
        setStartTimeMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value7(Long value) {
        setEndTimeMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value8(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value9(Long value) {
        setStatusTimeMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value10(Long value) {
        setMetaId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord value11(String value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorFilterTaskRecord values(Long value1, Integer value2, Integer value3, Integer value4, Long value5, Long value6, Long value7, Byte value8, Long value9, Long value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProcessorFilterTaskRecord
     */
    public ProcessorFilterTaskRecord() {
        super(ProcessorFilterTask.PROCESSOR_FILTER_TASK);
    }

    /**
     * Create a detached, initialised ProcessorFilterTaskRecord
     */
    public ProcessorFilterTaskRecord(Long id, Integer version, Integer fkProcessorFilterId, Integer fkProcessorNodeId, Long createTimeMs, Long startTimeMs, Long endTimeMs, Byte status, Long statusTimeMs, Long metaId, String data) {
        super(ProcessorFilterTask.PROCESSOR_FILTER_TASK);

        set(0, id);
        set(1, version);
        set(2, fkProcessorFilterId);
        set(3, fkProcessorNodeId);
        set(4, createTimeMs);
        set(5, startTimeMs);
        set(6, endTimeMs);
        set(7, status);
        set(8, statusTimeMs);
        set(9, metaId);
        set(10, data);
    }
}

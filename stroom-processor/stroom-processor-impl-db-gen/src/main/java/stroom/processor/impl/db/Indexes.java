/*
 * This file is generated by jOOQ.
 */
package stroom.processor.impl.db;


import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import stroom.processor.impl.db.tables.Processor;
import stroom.processor.impl.db.tables.ProcessorFilter;
import stroom.processor.impl.db.tables.ProcessorFilterTask;
import stroom.processor.impl.db.tables.ProcessorFilterTracker;


/**
 * A class modelling indexes of tables of the <code>stroom</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index PROCESSOR_PRIMARY = Indexes0.PROCESSOR_PRIMARY;
    public static final Index PROCESSOR_STRM_PROC_FK_PIPE_ID = Indexes0.PROCESSOR_STRM_PROC_FK_PIPE_ID;
    public static final Index PROCESSOR_FILTER_PRIMARY = Indexes0.PROCESSOR_FILTER_PRIMARY;
    public static final Index PROCESSOR_FILTER_PROCESSOR_FILTER_FK_PROCESSOR_FILTER_TRACKER_ID = Indexes0.PROCESSOR_FILTER_PROCESSOR_FILTER_FK_PROCESSOR_FILTER_TRACKER_ID;
    public static final Index PROCESSOR_FILTER_PROCESSOR_FILTER_FK_PROCESSOR_ID = Indexes0.PROCESSOR_FILTER_PROCESSOR_FILTER_FK_PROCESSOR_ID;
    public static final Index PROCESSOR_FILTER_TASK_PRIMARY = Indexes0.PROCESSOR_FILTER_TASK_PRIMARY;
    public static final Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_FK_PROCESSOR_FILTER_ID = Indexes0.PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_FK_PROCESSOR_FILTER_ID;
    public static final Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_NODE_NAME_IDX = Indexes0.PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_NODE_NAME_IDX;
    public static final Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_STATUS_IDX = Indexes0.PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_STATUS_IDX;
    public static final Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_STREAM_ID_IDX = Indexes0.PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_STREAM_ID_IDX;
    public static final Index PROCESSOR_FILTER_TRACKER_PRIMARY = Indexes0.PROCESSOR_FILTER_TRACKER_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index PROCESSOR_PRIMARY = Internal.createIndex("PRIMARY", Processor.PROCESSOR, new OrderField[] { Processor.PROCESSOR.ID }, true);
        public static Index PROCESSOR_STRM_PROC_FK_PIPE_ID = Internal.createIndex("strm_proc_fk_pipe_id", Processor.PROCESSOR, new OrderField[] { Processor.PROCESSOR.PIPELINE_UUID }, false);
        public static Index PROCESSOR_FILTER_PRIMARY = Internal.createIndex("PRIMARY", ProcessorFilter.PROCESSOR_FILTER, new OrderField[] { ProcessorFilter.PROCESSOR_FILTER.ID }, true);
        public static Index PROCESSOR_FILTER_PROCESSOR_FILTER_FK_PROCESSOR_FILTER_TRACKER_ID = Internal.createIndex("processor_filter_fk_processor_filter_tracker_id", ProcessorFilter.PROCESSOR_FILTER, new OrderField[] { ProcessorFilter.PROCESSOR_FILTER.FK_PROCESSOR_FILTER_TRACKER_ID }, false);
        public static Index PROCESSOR_FILTER_PROCESSOR_FILTER_FK_PROCESSOR_ID = Internal.createIndex("processor_filter_fk_processor_id", ProcessorFilter.PROCESSOR_FILTER, new OrderField[] { ProcessorFilter.PROCESSOR_FILTER.FK_PROCESSOR_ID }, false);
        public static Index PROCESSOR_FILTER_TASK_PRIMARY = Internal.createIndex("PRIMARY", ProcessorFilterTask.PROCESSOR_FILTER_TASK, new OrderField[] { ProcessorFilterTask.PROCESSOR_FILTER_TASK.ID }, true);
        public static Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_FK_PROCESSOR_FILTER_ID = Internal.createIndex("processor_filter_task_fk_processor_filter_id", ProcessorFilterTask.PROCESSOR_FILTER_TASK, new OrderField[] { ProcessorFilterTask.PROCESSOR_FILTER_TASK.FK_PROCESSOR_FILTER_ID }, false);
        public static Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_NODE_NAME_IDX = Internal.createIndex("processor_filter_task_node_name_idx", ProcessorFilterTask.PROCESSOR_FILTER_TASK, new OrderField[] { ProcessorFilterTask.PROCESSOR_FILTER_TASK.NODE_NAME }, false);
        public static Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_STATUS_IDX = Internal.createIndex("processor_filter_task_status_idx", ProcessorFilterTask.PROCESSOR_FILTER_TASK, new OrderField[] { ProcessorFilterTask.PROCESSOR_FILTER_TASK.STATUS }, false);
        public static Index PROCESSOR_FILTER_TASK_PROCESSOR_FILTER_TASK_STREAM_ID_IDX = Internal.createIndex("processor_filter_task_stream_id_idx", ProcessorFilterTask.PROCESSOR_FILTER_TASK, new OrderField[] { ProcessorFilterTask.PROCESSOR_FILTER_TASK.STREAM_ID }, false);
        public static Index PROCESSOR_FILTER_TRACKER_PRIMARY = Internal.createIndex("PRIMARY", ProcessorFilterTracker.PROCESSOR_FILTER_TRACKER, new OrderField[] { ProcessorFilterTracker.PROCESSOR_FILTER_TRACKER.ID }, true);
    }
}

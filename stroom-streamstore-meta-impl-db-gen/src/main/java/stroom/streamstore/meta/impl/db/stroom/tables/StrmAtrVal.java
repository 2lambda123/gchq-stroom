/*
 * This file is generated by jOOQ.
*/
package stroom.streamstore.meta.impl.db.stroom.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import stroom.streamstore.meta.impl.db.stroom.Indexes;
import stroom.streamstore.meta.impl.db.stroom.Keys;
import stroom.streamstore.meta.impl.db.stroom.Stroom;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmAtrValRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StrmAtrVal extends TableImpl<StrmAtrValRecord> {

    private static final long serialVersionUID = -1383234455;

    /**
     * The reference instance of <code>stroom.STRM_ATR_VAL</code>
     */
    public static final StrmAtrVal STRM_ATR_VAL = new StrmAtrVal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StrmAtrValRecord> getRecordType() {
        return StrmAtrValRecord.class;
    }

    /**
     * The column <code>stroom.STRM_ATR_VAL.ID</code>.
     */
    public final TableField<StrmAtrValRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>stroom.STRM_ATR_VAL.VER</code>.
     */
    public final TableField<StrmAtrValRecord, Byte> VER = createField("VER", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>stroom.STRM_ATR_VAL.CRT_MS</code>.
     */
    public final TableField<StrmAtrValRecord, Long> CRT_MS = createField("CRT_MS", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>stroom.STRM_ATR_VAL.VAL_STR</code>.
     */
    public final TableField<StrmAtrValRecord, String> VAL_STR = createField("VAL_STR", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>stroom.STRM_ATR_VAL.VAL_NUM</code>.
     */
    public final TableField<StrmAtrValRecord, Long> VAL_NUM = createField("VAL_NUM", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stroom.STRM_ATR_VAL.STRM_ID</code>.
     */
    public final TableField<StrmAtrValRecord, Long> STRM_ID = createField("STRM_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>stroom.STRM_ATR_VAL.STRM_ATR_KEY_ID</code>.
     */
    public final TableField<StrmAtrValRecord, Integer> STRM_ATR_KEY_ID = createField("STRM_ATR_KEY_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>stroom.STRM_ATR_VAL</code> table reference
     */
    public StrmAtrVal() {
        this(DSL.name("STRM_ATR_VAL"), null);
    }

    /**
     * Create an aliased <code>stroom.STRM_ATR_VAL</code> table reference
     */
    public StrmAtrVal(String alias) {
        this(DSL.name(alias), STRM_ATR_VAL);
    }

    /**
     * Create an aliased <code>stroom.STRM_ATR_VAL</code> table reference
     */
    public StrmAtrVal(Name alias) {
        this(alias, STRM_ATR_VAL);
    }

    private StrmAtrVal(Name alias, Table<StrmAtrValRecord> aliased) {
        this(alias, aliased, null);
    }

    private StrmAtrVal(Name alias, Table<StrmAtrValRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Stroom.STROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STRM_ATR_VAL_PRIMARY, Indexes.STRM_ATR_VAL_STRM_ATR_VAL_CRT_MS_IDX, Indexes.STRM_ATR_VAL_STRM_ATR_VAL_STRM_ID_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StrmAtrValRecord, Long> getIdentity() {
        return Keys.IDENTITY_STRM_ATR_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StrmAtrValRecord> getPrimaryKey() {
        return Keys.KEY_STRM_ATR_VAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StrmAtrValRecord>> getKeys() {
        return Arrays.<UniqueKey<StrmAtrValRecord>>asList(Keys.KEY_STRM_ATR_VAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmAtrVal as(String alias) {
        return new StrmAtrVal(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmAtrVal as(Name alias) {
        return new StrmAtrVal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StrmAtrVal rename(String name) {
        return new StrmAtrVal(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StrmAtrVal rename(Name name) {
        return new StrmAtrVal(name, null);
    }
}

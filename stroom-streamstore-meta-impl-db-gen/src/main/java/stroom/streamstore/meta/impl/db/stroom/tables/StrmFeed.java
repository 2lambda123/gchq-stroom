/*
 * This file is generated by jOOQ.
*/
package stroom.streamstore.meta.impl.db.stroom.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import stroom.streamstore.meta.impl.db.stroom.Indexes;
import stroom.streamstore.meta.impl.db.stroom.Keys;
import stroom.streamstore.meta.impl.db.stroom.Stroom;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmFeedRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StrmFeed extends TableImpl<StrmFeedRecord> {

    private static final long serialVersionUID = 179309303;

    /**
     * The reference instance of <code>stroom.STRM_FEED</code>
     */
    public static final StrmFeed STRM_FEED = new StrmFeed();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StrmFeedRecord> getRecordType() {
        return StrmFeedRecord.class;
    }

    /**
     * The column <code>stroom.STRM_FEED.ID</code>.
     */
    public final TableField<StrmFeedRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>stroom.STRM_FEED.NAME</code>.
     */
    public final TableField<StrmFeedRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>stroom.STRM_FEED</code> table reference
     */
    public StrmFeed() {
        this(DSL.name("STRM_FEED"), null);
    }

    /**
     * Create an aliased <code>stroom.STRM_FEED</code> table reference
     */
    public StrmFeed(String alias) {
        this(DSL.name(alias), STRM_FEED);
    }

    /**
     * Create an aliased <code>stroom.STRM_FEED</code> table reference
     */
    public StrmFeed(Name alias) {
        this(alias, STRM_FEED);
    }

    private StrmFeed(Name alias, Table<StrmFeedRecord> aliased) {
        this(alias, aliased, null);
    }

    private StrmFeed(Name alias, Table<StrmFeedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Stroom.STROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STRM_FEED_NAME, Indexes.STRM_FEED_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StrmFeedRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STRM_FEED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StrmFeedRecord> getPrimaryKey() {
        return Keys.KEY_STRM_FEED_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StrmFeedRecord>> getKeys() {
        return Arrays.<UniqueKey<StrmFeedRecord>>asList(Keys.KEY_STRM_FEED_PRIMARY, Keys.KEY_STRM_FEED_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmFeed as(String alias) {
        return new StrmFeed(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmFeed as(Name alias) {
        return new StrmFeed(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StrmFeed rename(String name) {
        return new StrmFeed(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StrmFeed rename(Name name) {
        return new StrmFeed(name, null);
    }
}

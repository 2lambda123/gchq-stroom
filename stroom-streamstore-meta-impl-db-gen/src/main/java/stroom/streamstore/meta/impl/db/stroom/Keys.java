/*
 * This file is generated by jOOQ.
*/
package stroom.streamstore.meta.impl.db.stroom;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import stroom.streamstore.meta.impl.db.stroom.tables.Strm;
import stroom.streamstore.meta.impl.db.stroom.tables.StrmAtrKey;
import stroom.streamstore.meta.impl.db.stroom.tables.StrmAtrVal;
import stroom.streamstore.meta.impl.db.stroom.tables.StrmFeed;
import stroom.streamstore.meta.impl.db.stroom.tables.StrmProcessor;
import stroom.streamstore.meta.impl.db.stroom.tables.StrmType;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmAtrKeyRecord;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmAtrValRecord;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmFeedRecord;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmProcessorRecord;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmRecord;
import stroom.streamstore.meta.impl.db.stroom.tables.records.StrmTypeRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>stroom</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<StrmRecord, Long> IDENTITY_STRM = Identities0.IDENTITY_STRM;
    public static final Identity<StrmAtrKeyRecord, Integer> IDENTITY_STRM_ATR_KEY = Identities0.IDENTITY_STRM_ATR_KEY;
    public static final Identity<StrmAtrValRecord, Long> IDENTITY_STRM_ATR_VAL = Identities0.IDENTITY_STRM_ATR_VAL;
    public static final Identity<StrmFeedRecord, Integer> IDENTITY_STRM_FEED = Identities0.IDENTITY_STRM_FEED;
    public static final Identity<StrmProcessorRecord, Integer> IDENTITY_STRM_PROCESSOR = Identities0.IDENTITY_STRM_PROCESSOR;
    public static final Identity<StrmTypeRecord, Integer> IDENTITY_STRM_TYPE = Identities0.IDENTITY_STRM_TYPE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<StrmRecord> KEY_STRM_PRIMARY = UniqueKeys0.KEY_STRM_PRIMARY;
    public static final UniqueKey<StrmAtrKeyRecord> KEY_STRM_ATR_KEY_PRIMARY = UniqueKeys0.KEY_STRM_ATR_KEY_PRIMARY;
    public static final UniqueKey<StrmAtrKeyRecord> KEY_STRM_ATR_KEY_NAME = UniqueKeys0.KEY_STRM_ATR_KEY_NAME;
    public static final UniqueKey<StrmAtrValRecord> KEY_STRM_ATR_VAL_PRIMARY = UniqueKeys0.KEY_STRM_ATR_VAL_PRIMARY;
    public static final UniqueKey<StrmFeedRecord> KEY_STRM_FEED_PRIMARY = UniqueKeys0.KEY_STRM_FEED_PRIMARY;
    public static final UniqueKey<StrmFeedRecord> KEY_STRM_FEED_NAME = UniqueKeys0.KEY_STRM_FEED_NAME;
    public static final UniqueKey<StrmProcessorRecord> KEY_STRM_PROCESSOR_PRIMARY = UniqueKeys0.KEY_STRM_PROCESSOR_PRIMARY;
    public static final UniqueKey<StrmTypeRecord> KEY_STRM_TYPE_PRIMARY = UniqueKeys0.KEY_STRM_TYPE_PRIMARY;
    public static final UniqueKey<StrmTypeRecord> KEY_STRM_TYPE_NAME = UniqueKeys0.KEY_STRM_TYPE_NAME;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<StrmRecord, StrmFeedRecord> STRM_FK_FD_ID = ForeignKeys0.STRM_FK_FD_ID;
    public static final ForeignKey<StrmRecord, StrmProcessorRecord> STRM_FK_STRM_PROC_ID = ForeignKeys0.STRM_FK_STRM_PROC_ID;
    public static final ForeignKey<StrmRecord, StrmTypeRecord> STRM_FK_STRM_TP_ID = ForeignKeys0.STRM_FK_STRM_TP_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<StrmRecord, Long> IDENTITY_STRM = createIdentity(Strm.STRM, Strm.STRM.ID);
        public static Identity<StrmAtrKeyRecord, Integer> IDENTITY_STRM_ATR_KEY = createIdentity(StrmAtrKey.STRM_ATR_KEY, StrmAtrKey.STRM_ATR_KEY.ID);
        public static Identity<StrmAtrValRecord, Long> IDENTITY_STRM_ATR_VAL = createIdentity(StrmAtrVal.STRM_ATR_VAL, StrmAtrVal.STRM_ATR_VAL.ID);
        public static Identity<StrmFeedRecord, Integer> IDENTITY_STRM_FEED = createIdentity(StrmFeed.STRM_FEED, StrmFeed.STRM_FEED.ID);
        public static Identity<StrmProcessorRecord, Integer> IDENTITY_STRM_PROCESSOR = createIdentity(StrmProcessor.STRM_PROCESSOR, StrmProcessor.STRM_PROCESSOR.ID);
        public static Identity<StrmTypeRecord, Integer> IDENTITY_STRM_TYPE = createIdentity(StrmType.STRM_TYPE, StrmType.STRM_TYPE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<StrmRecord> KEY_STRM_PRIMARY = createUniqueKey(Strm.STRM, "KEY_STRM_PRIMARY", Strm.STRM.ID);
        public static final UniqueKey<StrmAtrKeyRecord> KEY_STRM_ATR_KEY_PRIMARY = createUniqueKey(StrmAtrKey.STRM_ATR_KEY, "KEY_STRM_ATR_KEY_PRIMARY", StrmAtrKey.STRM_ATR_KEY.ID);
        public static final UniqueKey<StrmAtrKeyRecord> KEY_STRM_ATR_KEY_NAME = createUniqueKey(StrmAtrKey.STRM_ATR_KEY, "KEY_STRM_ATR_KEY_NAME", StrmAtrKey.STRM_ATR_KEY.NAME);
        public static final UniqueKey<StrmAtrValRecord> KEY_STRM_ATR_VAL_PRIMARY = createUniqueKey(StrmAtrVal.STRM_ATR_VAL, "KEY_STRM_ATR_VAL_PRIMARY", StrmAtrVal.STRM_ATR_VAL.ID);
        public static final UniqueKey<StrmFeedRecord> KEY_STRM_FEED_PRIMARY = createUniqueKey(StrmFeed.STRM_FEED, "KEY_STRM_FEED_PRIMARY", StrmFeed.STRM_FEED.ID);
        public static final UniqueKey<StrmFeedRecord> KEY_STRM_FEED_NAME = createUniqueKey(StrmFeed.STRM_FEED, "KEY_STRM_FEED_NAME", StrmFeed.STRM_FEED.NAME);
        public static final UniqueKey<StrmProcessorRecord> KEY_STRM_PROCESSOR_PRIMARY = createUniqueKey(StrmProcessor.STRM_PROCESSOR, "KEY_STRM_PROCESSOR_PRIMARY", StrmProcessor.STRM_PROCESSOR.ID);
        public static final UniqueKey<StrmTypeRecord> KEY_STRM_TYPE_PRIMARY = createUniqueKey(StrmType.STRM_TYPE, "KEY_STRM_TYPE_PRIMARY", StrmType.STRM_TYPE.ID);
        public static final UniqueKey<StrmTypeRecord> KEY_STRM_TYPE_NAME = createUniqueKey(StrmType.STRM_TYPE, "KEY_STRM_TYPE_NAME", StrmType.STRM_TYPE.NAME);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<StrmRecord, StrmFeedRecord> STRM_FK_FD_ID = createForeignKey(stroom.streamstore.meta.impl.db.stroom.Keys.KEY_STRM_FEED_PRIMARY, Strm.STRM, "STRM_FK_FD_ID", Strm.STRM.FK_FD_ID);
        public static final ForeignKey<StrmRecord, StrmProcessorRecord> STRM_FK_STRM_PROC_ID = createForeignKey(stroom.streamstore.meta.impl.db.stroom.Keys.KEY_STRM_PROCESSOR_PRIMARY, Strm.STRM, "STRM_FK_STRM_PROC_ID", Strm.STRM.FK_STRM_PROC_ID);
        public static final ForeignKey<StrmRecord, StrmTypeRecord> STRM_FK_STRM_TP_ID = createForeignKey(stroom.streamstore.meta.impl.db.stroom.Keys.KEY_STRM_TYPE_PRIMARY, Strm.STRM, "STRM_FK_STRM_TP_ID", Strm.STRM.FK_STRM_TP_ID);
    }
}

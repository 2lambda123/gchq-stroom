/*
 * This file is generated by jOOQ.
*/
package stroom.streamstore.meta.impl.db.stroom.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.streamstore.meta.impl.db.stroom.tables.StrmProcessor;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StrmProcessorRecord extends UpdatableRecordImpl<StrmProcessorRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = -1454585570;

    /**
     * Setter for <code>stroom.STRM_PROCESSOR.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROCESSOR.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.STRM_PROCESSOR.PIPE_UUID</code>.
     */
    public void setPipeUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROCESSOR.PIPE_UUID</code>.
     */
    public String getPipeUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>stroom.STRM_PROCESSOR.PROCESSOR_ID</code>.
     */
    public void setProcessorId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.STRM_PROCESSOR.PROCESSOR_ID</code>.
     */
    public Integer getProcessorId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StrmProcessor.STRM_PROCESSOR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return StrmProcessor.STRM_PROCESSOR.PIPE_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return StrmProcessor.STRM_PROCESSOR.PROCESSOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPipeUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getProcessorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPipeUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProcessorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcessorRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcessorRecord value2(String value) {
        setPipeUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcessorRecord value3(Integer value) {
        setProcessorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StrmProcessorRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StrmProcessorRecord
     */
    public StrmProcessorRecord() {
        super(StrmProcessor.STRM_PROCESSOR);
    }

    /**
     * Create a detached, initialised StrmProcessorRecord
     */
    public StrmProcessorRecord(Integer id, String pipeUuid, Integer processorId) {
        super(StrmProcessor.STRM_PROCESSOR);

        set(0, id);
        set(1, pipeUuid);
        set(2, processorId);
    }
}

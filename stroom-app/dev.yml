server:
  applicationContextPath: ${APPLICATION_CONTEXT_PATH:- /}
  adminContextPath: ${ADMIN_CONTEXT_PATH:- /admin}
  applicationConnectors:
    - type: http
      port: ${STROOM_APP_PORT:-8080}
  adminConnectors:
    - type: http
      port: ${STROOM_ADMIN_PORT:-8081}

  requestLog:
    appenders:
    - type: file
      currentLogFilename: ${HOME}/.stroom/logs/access.log
      threshold: ALL
      queueSize: 256
      discardingThreshold: 0
      archive: true
      archivedLogFilenamePattern: ${HOME}/.stroom/logs/access-%d{yyyy-MM-dd'T'HH:mm}.log
      archivedFileCount: 10
      timeZone: UTC

logging:
  level: ${STROOM_LOGGING_LEVEL:- ERROR}
  loggers:
    stroom: INFO
    io.dropwizard: INFO
    org.eclipse.jetty: INFO
    org.glassfish: INFO
    org.glassfish.jersey: INFO
    #    org.glassfish.jersey.logging.LoggingFeature: INFO
    #    org.glassfish.jersey.server.ServerRuntime.Responder: INFO
    #    org.glassfish.jersey.server.validation.internal.ValidationExceptionMapper: FINER
    org.flywaydb: INFO
#    Comment this out if you want logging of the REST request/responses
    org.glassfish.jersey.logging.LoggingFeature: "OFF"
    "event-logger":
      level: INFO
      additive: false
      appenders:
      - type: file
        currentLogFilename: ${HOME}/.stroom/logs/event.log
        threshold: ALL
        queueSize: 256
        discardingThreshold: 0
        archive: true
        archivedLogFilenamePattern: ${HOME}/.stroom/logs/event-%d{yyyy-MM-dd'T'HH:mm}.log
        archivedFileCount: 10
        timeZone: UTC
        logFormat: "%msg%n"

  appenders:
  - type: console
    logFormat: "%highlight(%-5level) %d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC} %yellow(%thread) %cyan(%-30logger{25}) %msg %n"
    timeZone: UTC
  - type: file
    currentLogFilename: ${HOME}/.stroom/logs/app.log
    threshold: ALL
    queueSize: 256
    discardingThreshold: 0
    archive: true
    archivedLogFilenamePattern: ${HOME}/.stroom/logs/app-%d{yyyy-MM-dd'T'HH:mm}.log
    archivedFileCount: 10
    timeZone: UTC
    logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"

appConfig:
  authentication:
    useDefaultOpenIdCredentials: ${USE_DEFAULT_OPEN_ID_CREDENTIALS:-true}
  commonDbDetails:
    connection:
      jdbcDriverClassName: ${STROOM_JDBC_DRIVER_CLASS_NAME:-com.mysql.cj.jdbc.Driver}
      jdbcDriverUrl: ${STROOM_JDBC_DRIVER_URL:-jdbc:mysql://localhost:3307/stroom?useUnicode=yes&characterEncoding=UTF-8}
      jdbcDriverUsername: ${STROOM_JDBC_DRIVER_USERNAME:-stroomuser}
      jdbcDriverPassword: ${STROOM_JDBC_DRIVER_PASSWORD:-stroompassword1}
  contentPackImport:
    enabled: true
  job:
    enabled: true
    executionInterval: "10s"
  node:
    name: node1a
  path:
    temp: "/tmp/stroom"
  # Comment out the publicUri block if you are not running with nginx
  publicUri:
    hostname: localhost
    port: 443
  serviceDiscovery:
    zookeeperUrl: ${STROOM_SERVICE_DISCOVERY_ZOOKEEPER_URL:-localhost:2181}
    servicesHostNameOrIpAddress: ${STROOM_ADVERTISED_URL:-localhost}
  statistics:
    hbase:
      # UUID of the Kafka Config Doc that is created by Setup Sample Data
      # Debatable if the doc should be added to a content pack or not
      kafkaConfigUuid: 7cbf9153-869c-43bb-a316-1c652673e680
    internal:
      enabledStoreTypes: ${STROOM_ENABLED_STAT_STORE_TYPES:-[ "StatisticStore" ]}
#      enabledStoreTypes: ${STROOM_ENABLED_STAT_STORE_TYPES:-[ "StatisticStore", "StroomStatsStore" ]}
  volumes:
    createDefaultOnStart: false


{
  "basePath" : "/api",
  "definitions" : {
    "AbstractFetchDataResult" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "availableChildStreamTypes" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "classification" : {
          "readOnly" : true,
          "type" : "string"
        },
        "feedName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "itemRange" : {
          "$ref" : "#/definitions/OffsetRangeLong",
          "originalRef" : "OffsetRangeLong",
          "readOnly" : true
        },
        "sourceLocation" : {
          "$ref" : "#/definitions/SourceLocation",
          "originalRef" : "SourceLocation",
          "readOnly" : true
        },
        "streamTypeName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "totalCharacterCount" : {
          "$ref" : "#/definitions/CountLong",
          "originalRef" : "CountLong",
          "readOnly" : true
        },
        "totalItemCount" : {
          "$ref" : "#/definitions/CountLong",
          "originalRef" : "CountLong",
          "readOnly" : true
        }
      }
    },
    "AbstractField" : {
      "type" : "object",
      "required" : [ "type" ],
      "discriminator" : "type",
      "properties" : {
        "conditions" : {
          "items" : {
            "enum" : [ "CONTAINS", "EQUALS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL_TO", "LESS_THAN", "LESS_THAN_OR_EQUAL_TO", "BETWEEN", "IN", "IN_DICTIONARY", "IN_FOLDER", "IS_DOC_REF", "IS_NULL", "IS_NOT_NULL" ],
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        },
        "queryable" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Account" : {
      "type" : "object",
      "properties" : {
        "comments" : {
          "type" : "string"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "firstName" : {
          "type" : "string"
        },
        "forcePasswordChange" : {
          "type" : "boolean"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "lastLoginMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "lastName" : {
          "type" : "string"
        },
        "locked" : {
          "type" : "boolean"
        },
        "loginCount" : {
          "format" : "int32",
          "type" : "integer"
        },
        "loginFailures" : {
          "format" : "int32",
          "type" : "integer"
        },
        "neverExpires" : {
          "type" : "boolean"
        },
        "processingAccount" : {
          "type" : "boolean"
        },
        "reactivatedMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "AccountResultPage" : {
      "type" : "object",
      "properties" : {
        "pageResponse" : {
          "$ref" : "#/definitions/PageResponse",
          "originalRef" : "PageResponse",
          "readOnly" : true
        },
        "values" : {
          "items" : {
            "$ref" : "#/definitions/Account",
            "originalRef" : "Account"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "AcknowledgeSplashRequest" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "readOnly" : true,
          "type" : "string"
        },
        "version" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "Activity" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "details" : {
          "$ref" : "#/definitions/ActivityDetails",
          "originalRef" : "ActivityDetails"
        },
        "id" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "json" : {
          "type" : "string"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "ActivityConfig" : {
      "type" : "object",
      "properties" : {
        "chooseOnStartup" : {
          "description" : "Set to true if users should be prompted to choose an activity on login.",
          "type" : "boolean"
        },
        "editorBody" : {
          "description" : "The HTML to display in the activity editor popup.",
          "type" : "string"
        },
        "editorTitle" : {
          "description" : "The title of the activity editor popup.",
          "type" : "string"
        },
        "enabled" : {
          "description" : "If you would like users to be able to record some info about the activity they are performing set this property to true.",
          "type" : "boolean"
        },
        "managerTitle" : {
          "description" : "The title of the activity manager popup.",
          "type" : "string"
        }
      }
    },
    "ActivityDetails" : {
      "type" : "object",
      "properties" : {
        "properties" : {
          "items" : {
            "$ref" : "#/definitions/Prop",
            "originalRef" : "Prop"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "ActivityValidationResult" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "readOnly" : true,
          "type" : "string"
        },
        "valid" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "AddPermissionEvent" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PermissionChangeEvent",
        "originalRef" : "PermissionChangeEvent"
      }, {
        "type" : "object",
        "properties" : {
          "documentUuid" : {
            "readOnly" : true,
            "type" : "string"
          },
          "permission" : {
            "readOnly" : true,
            "type" : "string"
          },
          "userUuid" : {
            "readOnly" : true,
            "type" : "string"
          }
        }
      } ]
    },
    "Annotation" : {
      "type" : "object",
      "properties" : {
        "assignedTo" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "history" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int64",
          "type" : "integer"
        },
        "status" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "AnnotationDetail" : {
      "type" : "object",
      "properties" : {
        "annotation" : {
          "$ref" : "#/definitions/Annotation",
          "originalRef" : "Annotation",
          "readOnly" : true
        },
        "entries" : {
          "items" : {
            "$ref" : "#/definitions/AnnotationEntry",
            "originalRef" : "AnnotationEntry"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "AnnotationEntry" : {
      "type" : "object",
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "entryType" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "AssignTasksRequest" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "nodeName" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "AuthenticationState" : {
      "type" : "object",
      "properties" : {
        "allowPasswordResets" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "userId" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "Automate" : {
      "type" : "object",
      "properties" : {
        "open" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "refresh" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "refreshInterval" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "Base64EncodedDocumentData" : {
      "type" : "object",
      "properties" : {
        "dataMap" : {
          "additionalProperties" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "object"
        },
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        }
      }
    },
    "BooleanField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "BuildInfo" : {
      "type" : "object",
      "properties" : {
        "buildDate" : {
          "readOnly" : true,
          "type" : "string"
        },
        "buildVersion" : {
          "readOnly" : true,
          "type" : "string"
        },
        "upDate" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "BulkActionResult" : {
      "type" : "object",
      "properties" : {
        "docRefs" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "message" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "CacheInfo" : {
      "type" : "object",
      "properties" : {
        "map" : {
          "additionalProperties" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "object"
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        },
        "nodeName" : {
          "type" : "string"
        }
      }
    },
    "ChangeDocumentPermissionsRequest" : {
      "type" : "object",
      "properties" : {
        "cascade" : {
          "enum" : [ "NO", "CHANGES_ONLY", "ALL" ],
          "readOnly" : true,
          "type" : "string"
        },
        "changes" : {
          "$ref" : "#/definitions/Changes",
          "originalRef" : "Changes",
          "readOnly" : true
        },
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        }
      }
    },
    "ChangePasswordRequest" : {
      "type" : "object",
      "properties" : {
        "confirmNewPassword" : {
          "readOnly" : true,
          "type" : "string"
        },
        "currentPassword" : {
          "readOnly" : true,
          "type" : "string"
        },
        "newPassword" : {
          "readOnly" : true,
          "type" : "string"
        },
        "userId" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ChangeSet" : {
      "type" : "object",
      "properties" : {
        "addSet" : {
          "items" : {
            "type" : "object"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "removeSet" : {
          "items" : {
            "type" : "object"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "ChangeSetString" : {
      "type" : "object",
      "properties" : {
        "addSet" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "removeSet" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "ChangeSetUser" : {
      "type" : "object",
      "properties" : {
        "addSet" : {
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "removeSet" : {
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "ChangeUserRequest" : {
      "type" : "object",
      "properties" : {
        "changedAppPermissions" : {
          "$ref" : "#/definitions/ChangeSetString",
          "originalRef" : "ChangeSetString",
          "readOnly" : true
        },
        "changedLinkedUsers" : {
          "$ref" : "#/definitions/ChangeSetUser",
          "originalRef" : "ChangeSetUser",
          "readOnly" : true
        },
        "user" : {
          "$ref" : "#/definitions/User",
          "originalRef" : "User",
          "readOnly" : true
        }
      }
    },
    "Changes" : {
      "type" : "object",
      "properties" : {
        "add" : {
          "additionalProperties" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "readOnly" : true,
          "type" : "object"
        },
        "remove" : {
          "additionalProperties" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "readOnly" : true,
          "type" : "object"
        }
      }
    },
    "CheckDocumentPermissionRequest" : {
      "type" : "object",
      "properties" : {
        "documentUuid" : {
          "readOnly" : true,
          "type" : "string"
        },
        "permission" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ClearDocumentPermissionsEvent" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PermissionChangeEvent",
        "originalRef" : "PermissionChangeEvent"
      }, {
        "type" : "object",
        "properties" : {
          "documentUuid" : {
            "readOnly" : true,
            "type" : "string"
          }
        }
      } ]
    },
    "ClusterLockKey" : {
      "type" : "object",
      "properties" : {
        "creationTime" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        },
        "nodeName" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ComponentConfig" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "readOnly" : true,
          "type" : "string"
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        },
        "settings" : {
          "$ref" : "#/definitions/ComponentSettings",
          "originalRef" : "ComponentSettings",
          "readOnly" : true
        },
        "type" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ComponentResultRequest" : {
      "type" : "object",
      "required" : [ "componentId" ],
      "discriminator" : "type",
      "properties" : {
        "componentId" : {
          "description" : "The ID of the component that will receive the results corresponding to this ResultRequest",
          "readOnly" : true,
          "type" : "string"
        },
        "fetch" : {
          "enum" : [ "NONE", "CHANGES", "ALL" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ComponentSettings" : {
      "type" : "object",
      "discriminator" : "type"
    },
    "ConditionalFormattingRule" : {
      "type" : "object",
      "properties" : {
        "backgroundColor" : {
          "readOnly" : true,
          "type" : "string"
        },
        "enabled" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator",
          "readOnly" : true
        },
        "hide" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "id" : {
          "readOnly" : true,
          "type" : "string"
        },
        "textColor" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ConfigProperty" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "dataTypeName" : {
          "type" : "string"
        },
        "databaseOverrideValue" : {
          "$ref" : "#/definitions/OverrideValueString",
          "originalRef" : "OverrideValueString"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "editable" : {
          "type" : "boolean"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "name" : {
          "$ref" : "#/definitions/PropertyPath",
          "originalRef" : "PropertyPath"
        },
        "password" : {
          "type" : "boolean"
        },
        "requireRestart" : {
          "type" : "boolean"
        },
        "requireUiRestart" : {
          "type" : "boolean"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        },
        "yamlOverrideValue" : {
          "$ref" : "#/definitions/OverrideValueString",
          "originalRef" : "OverrideValueString"
        }
      }
    },
    "ConfirmPasswordRequest" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "CopyOp" : {
      "type" : "object",
      "properties" : {
        "destinationFolderRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "docRefs" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "permissionInheritance" : {
          "enum" : [ "NONE", "SOURCE", "DESTINATION", "COMBINED" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "CopyPermissionsFromParentRequest" : {
      "type" : "object",
      "properties" : {
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        }
      }
    },
    "Count" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "$ref" : "#/definitions/Number",
          "originalRef" : "Number",
          "readOnly" : true
        },
        "exact" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "CountLong" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "exact" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "CreateAccountRequest" : {
      "type" : "object",
      "properties" : {
        "comments" : {
          "readOnly" : true,
          "type" : "string"
        },
        "confirmPassword" : {
          "readOnly" : true,
          "type" : "string"
        },
        "email" : {
          "readOnly" : true,
          "type" : "string"
        },
        "firstName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "forcePasswordChange" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "lastName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "neverExpires" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "password" : {
          "readOnly" : true,
          "type" : "string"
        },
        "userId" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "CreateEntryRequest" : {
      "type" : "object",
      "properties" : {
        "annotation" : {
          "$ref" : "#/definitions/Annotation",
          "originalRef" : "Annotation"
        },
        "data" : {
          "type" : "string"
        },
        "linkedEvents" : {
          "items" : {
            "$ref" : "#/definitions/EventId",
            "originalRef" : "EventId"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "CreateOp" : {
      "type" : "object",
      "properties" : {
        "destinationFolderRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "docRefName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "docRefType" : {
          "readOnly" : true,
          "type" : "string"
        },
        "permissionInheritance" : {
          "enum" : [ "NONE", "SOURCE", "DESTINATION", "COMBINED" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "CreateProcessFilterRequest" : {
      "type" : "object",
      "properties" : {
        "autoPriority" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "enabled" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "pipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "priority" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "queryData" : {
          "$ref" : "#/definitions/QueryData",
          "originalRef" : "QueryData",
          "readOnly" : true
        }
      }
    },
    "CreateReprocessFilterRequest" : {
      "type" : "object",
      "properties" : {
        "autoPriority" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "enabled" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "priority" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "queryData" : {
          "$ref" : "#/definitions/QueryData",
          "originalRef" : "QueryData",
          "readOnly" : true
        }
      }
    },
    "CreateTokenRequest" : {
      "type" : "object",
      "required" : [ "tokenType", "userId" ],
      "properties" : {
        "comments" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "expiresOnMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "tokenType" : {
          "pattern" : "^user$|^api$|^email_reset$",
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        }
      }
    },
    "CustomRollUpMask" : {
      "type" : "object",
      "properties" : {
        "rolledUpTagPosition" : {
          "items" : {
            "format" : "int32",
            "type" : "integer"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "DBTableStatus" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "format" : "int64",
          "type" : "integer"
        },
        "dataSize" : {
          "format" : "int64",
          "type" : "integer"
        },
        "db" : {
          "type" : "string"
        },
        "indexSize" : {
          "format" : "int64",
          "type" : "integer"
        },
        "table" : {
          "type" : "string"
        }
      }
    },
    "DashboardConfig" : {
      "type" : "object",
      "properties" : {
        "components" : {
          "items" : {
            "$ref" : "#/definitions/ComponentConfig",
            "originalRef" : "ComponentConfig"
          },
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "layout" : {
          "$ref" : "#/definitions/LayoutConfig",
          "originalRef" : "LayoutConfig"
        },
        "parameters" : {
          "type" : "string"
        },
        "tabVisibility" : {
          "enum" : [ "SHOW_ALL", "HIDE_SINGLE", "HIDE_ALL" ],
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "dashboard"
      }
    },
    "DashboardDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "dashboardConfig" : {
          "$ref" : "#/definitions/DashboardConfig",
          "originalRef" : "DashboardConfig"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "DashboardQueryKey" : {
      "type" : "object",
      "properties" : {
        "componentId" : {
          "readOnly" : true,
          "type" : "string"
        },
        "dashboardUuid" : {
          "readOnly" : true,
          "type" : "string"
        },
        "uuid" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "DataInfoSection" : {
      "type" : "object",
      "properties" : {
        "entries" : {
          "items" : {
            "$ref" : "#/definitions/Entry",
            "originalRef" : "Entry"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "title" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "DataRange" : {
      "type" : "object",
      "properties" : {
        "byteOffsetFrom" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "byteOffsetTo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "charOffsetFrom" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "charOffsetTo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "length" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "locationFrom" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location",
          "readOnly" : true
        },
        "locationTo" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location",
          "readOnly" : true
        }
      }
    },
    "DataRetentionDeleteSummary" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "feedName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "metaType" : {
          "readOnly" : true,
          "type" : "string"
        },
        "ruleName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "ruleNumber" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "DataRetentionDeleteSummaryRequest" : {
      "type" : "object",
      "properties" : {
        "criteria" : {
          "$ref" : "#/definitions/FindDataRetentionImpactCriteria",
          "originalRef" : "FindDataRetentionImpactCriteria",
          "readOnly" : true
        },
        "dataRetentionRules" : {
          "$ref" : "#/definitions/DataRetentionRules",
          "originalRef" : "DataRetentionRules",
          "readOnly" : true
        },
        "queryId" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "DataRetentionRule" : {
      "type" : "object",
      "properties" : {
        "age" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "creationTime" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "enabled" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator",
          "readOnly" : true
        },
        "forever" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        },
        "ruleNumber" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "timeUnit" : {
          "enum" : [ "MINUTES", "HOURS", "DAYS", "WEEKS", "MONTHS", "YEARS" ],
          "readOnly" : true,
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "dataRetentionRule"
      }
    },
    "DataRetentionRules" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "rules" : {
          "items" : {
            "$ref" : "#/definitions/DataRetentionRule",
            "originalRef" : "DataRetentionRule"
          },
          "type" : "array"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "dataRetentionPolicy"
      }
    },
    "DataSource" : {
      "type" : "object",
      "properties" : {
        "fields" : {
          "items" : {
            "$ref" : "#/definitions/AbstractField",
            "originalRef" : "AbstractField"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "DateField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "DateTimeFormatSettings" : {
      "allOf" : [ {
        "$ref" : "#/definitions/FormatSettings",
        "originalRef" : "FormatSettings"
      }, {
        "type" : "object",
        "required" : [ "pattern", "timeZone" ],
        "properties" : {
          "pattern" : {
            "description" : "A date time formatting pattern string conforming to the specification of java.time.format.DateTimeFormatter",
            "readOnly" : true,
            "type" : "string"
          },
          "timeZone" : {
            "$ref" : "#/definitions/TimeZone",
            "originalRef" : "TimeZone",
            "readOnly" : true
          }
        },
        "description" : "The string formatting to apply to a date value"
      } ]
    },
    "DefaultLocation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Location",
        "originalRef" : "Location"
      }, {
        "type" : "object",
        "properties" : {
          "colNo" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "lineNo" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        }
      } ]
    },
    "DependencyCriteria" : {
      "type" : "object",
      "properties" : {
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "partialName" : {
          "type" : "string"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "DictionaryDTO" : {
      "type" : "object",
      "required" : [ "name", "type", "uuid" ],
      "properties" : {
        "data" : {
          "readOnly" : true,
          "type" : "string"
        },
        "description" : {
          "readOnly" : true,
          "type" : "string"
        },
        "imports" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "name" : {
          "description" : "The name for the data source",
          "example" : "MyStatistic",
          "type" : "string"
        },
        "type" : {
          "description" : "The type of the 'document' that this DocRef refers to",
          "example" : "StroomStatsStore",
          "type" : "string"
        },
        "uuid" : {
          "description" : "The unique identifier for this 'document'",
          "example" : "9f6184b4-bd78-48bc-b0cd-6e51a357f6a6",
          "type" : "string"
        }
      },
      "description" : "A class for describing a unique reference to a 'document' in stroom.  A 'document' is an entity in stroom such as a data source dictionary or pipeline.",
      "xml" : {
        "name" : "doc"
      }
    },
    "DictionaryDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "imports" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "type" : "array"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "Doc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "DocRef" : {
      "type" : "object",
      "required" : [ "name", "type", "uuid" ],
      "properties" : {
        "name" : {
          "description" : "The name for the data source",
          "example" : "MyStatistic",
          "type" : "string"
        },
        "type" : {
          "description" : "The type of the 'document' that this DocRef refers to",
          "example" : "StroomStatsStore",
          "type" : "string"
        },
        "uuid" : {
          "description" : "The unique identifier for this 'document'",
          "example" : "9f6184b4-bd78-48bc-b0cd-6e51a357f6a6",
          "type" : "string"
        }
      },
      "description" : "A class for describing a unique reference to a 'document' in stroom.  A 'document' is an entity in stroom such as a data source dictionary or pipeline.",
      "xml" : {
        "name" : "doc"
      }
    },
    "DocRefField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object",
        "properties" : {
          "docRefType" : {
            "readOnly" : true,
            "type" : "string"
          }
        }
      } ]
    },
    "DocRefInfo" : {
      "type" : "object",
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "otherInfo" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        }
      }
    },
    "DocRefs" : {
      "type" : "object",
      "properties" : {
        "docRefs" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "DocumentPermissions" : {
      "type" : "object",
      "properties" : {
        "docUuid" : {
          "readOnly" : true,
          "type" : "string"
        },
        "groups" : {
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "permissions" : {
          "additionalProperties" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "readOnly" : true,
          "type" : "object"
        },
        "users" : {
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "DocumentType" : {
      "type" : "object",
      "properties" : {
        "displayType" : {
          "readOnly" : true,
          "type" : "string"
        },
        "iconUrl" : {
          "readOnly" : true,
          "type" : "string"
        },
        "priority" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "type" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "DocumentTypes" : {
      "type" : "object",
      "properties" : {
        "nonSystemTypes" : {
          "items" : {
            "$ref" : "#/definitions/DocumentType",
            "originalRef" : "DocumentType"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "visibleTypes" : {
          "items" : {
            "$ref" : "#/definitions/DocumentType",
            "originalRef" : "DocumentType"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "DoubleField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "DownloadQueryRequest" : {
      "type" : "object",
      "properties" : {
        "dashboardQueryKey" : {
          "$ref" : "#/definitions/DashboardQueryKey",
          "originalRef" : "DashboardQueryKey",
          "readOnly" : true
        },
        "searchRequest" : {
          "$ref" : "#/definitions/SearchRequest",
          "originalRef" : "SearchRequest",
          "readOnly" : true
        }
      }
    },
    "DownloadSearchResultsRequest" : {
      "type" : "object",
      "properties" : {
        "applicationInstanceId" : {
          "readOnly" : true,
          "type" : "string"
        },
        "componentId" : {
          "readOnly" : true,
          "type" : "string"
        },
        "dateTimeLocale" : {
          "readOnly" : true,
          "type" : "string"
        },
        "fileType" : {
          "enum" : [ "EXCEL", "CSV", "TSV" ],
          "readOnly" : true,
          "type" : "string"
        },
        "percent" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "sample" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "searchRequest" : {
          "$ref" : "#/definitions/SearchRequest",
          "originalRef" : "SearchRequest",
          "readOnly" : true
        }
      }
    },
    "EntityEvent" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "enum" : [ "CREATE", "UPDATE", "DELETE", "CLEAR_CACHE" ],
          "readOnly" : true,
          "type" : "string"
        },
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        }
      }
    },
    "Entry" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "readOnly" : true,
          "type" : "string"
        },
        "value" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "EventId" : {
      "type" : "object",
      "properties" : {
        "eventId" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "streamId" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "EventLink" : {
      "type" : "object",
      "properties" : {
        "annotationId" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "eventId" : {
          "$ref" : "#/definitions/EventId",
          "originalRef" : "EventId",
          "readOnly" : true
        }
      }
    },
    "Expander" : {
      "type" : "object",
      "properties" : {
        "depth" : {
          "format" : "int32",
          "type" : "integer"
        },
        "expanded" : {
          "type" : "boolean"
        },
        "leaf" : {
          "type" : "boolean"
        }
      }
    },
    "ExplorerNode" : {
      "type" : "object",
      "properties" : {
        "children" : {
          "items" : {
            "$ref" : "#/definitions/ExplorerNode",
            "originalRef" : "ExplorerNode"
          },
          "type" : "array"
        },
        "depth" : {
          "format" : "int32",
          "type" : "integer"
        },
        "iconUrl" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "nodeState" : {
          "enum" : [ "OPEN", "CLOSED", "LEAF" ],
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      }
    },
    "ExplorerServiceCopyRequest" : {
      "type" : "object",
      "properties" : {
        "destinationFolderRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "docRefs" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "permissionInheritance" : {
          "enum" : [ "NONE", "SOURCE", "DESTINATION", "COMBINED" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ExplorerServiceCreateRequest" : {
      "type" : "object",
      "properties" : {
        "destinationFolderRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "docName" : {
          "type" : "string"
        },
        "docType" : {
          "type" : "string"
        },
        "permissionInheritance" : {
          "enum" : [ "NONE", "SOURCE", "DESTINATION", "COMBINED" ],
          "type" : "string"
        }
      }
    },
    "ExplorerServiceDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "docRefs" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "ExplorerServiceMoveRequest" : {
      "type" : "object",
      "properties" : {
        "destinationFolderRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "docRefs" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "permissionInheritance" : {
          "enum" : [ "NONE", "SOURCE", "DESTINATION", "COMBINED" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ExplorerServiceRenameRequest" : {
      "type" : "object",
      "properties" : {
        "docName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        }
      }
    },
    "ExplorerTreeFilter" : {
      "type" : "object",
      "properties" : {
        "includedTypes" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "nameFilter" : {
          "readOnly" : true,
          "type" : "string"
        },
        "nameFilterChange" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "requiredPermissions" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "tags" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "ExpressionCriteria" : {
      "type" : "object",
      "properties" : {
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator"
        },
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "ExpressionItem" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "enabled" : {
          "description" : "Whether this item in the expression tree is enabled or not",
          "example" : true,
          "readOnly" : true,
          "type" : "boolean"
        }
      },
      "description" : "Base type for an item in an expression tree"
    },
    "ExpressionOperator" : {
      "type" : "object",
      "required" : [ "op" ],
      "properties" : {
        "children" : {
          "items" : {
            "$ref" : "#/definitions/ExpressionItem",
            "originalRef" : "ExpressionItem"
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "enabled" : {
          "description" : "Whether this item in the expression tree is enabled or not",
          "example" : true,
          "readOnly" : true,
          "type" : "boolean"
        },
        "op" : {
          "description" : "The logical addOperator type",
          "enum" : [ "AND", "OR", "NOT" ],
          "readOnly" : true,
          "type" : "string"
        }
      },
      "description" : "A logical addOperator term in a query expression tree"
    },
    "ExpressionTerm" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ExpressionItem",
        "originalRef" : "ExpressionItem"
      }, {
        "type" : "object",
        "required" : [ "condition", "field" ],
        "properties" : {
          "condition" : {
            "description" : "The condition of the predicate term",
            "enum" : [ "CONTAINS", "EQUALS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL_TO", "LESS_THAN", "LESS_THAN_OR_EQUAL_TO", "BETWEEN", "IN", "IN_DICTIONARY", "IN_FOLDER", "IS_DOC_REF", "IS_NULL", "IS_NOT_NULL" ],
            "readOnly" : true,
            "type" : "string"
          },
          "docRef" : {
            "$ref" : "#/definitions/DocRef",
            "description" : "The DocRef that the field value is being evaluated against if the condition is IN_DICTIONARY, IN_FOLDER or IS_DOC_REF",
            "originalRef" : "DocRef",
            "readOnly" : true
          },
          "field" : {
            "description" : "The name of the field that is being evaluated in this predicate term",
            "readOnly" : true,
            "type" : "string"
          },
          "value" : {
            "description" : "The value that the field value is being evaluated against. Not required if a dictionary is supplied",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "description" : "A predicate term in a query expression tree"
      } ]
    },
    "FeedDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "classification" : {
          "type" : "string"
        },
        "contextEncoding" : {
          "type" : "string"
        },
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "encoding" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "reference" : {
          "type" : "boolean"
        },
        "retentionDayAge" : {
          "format" : "int32",
          "type" : "integer"
        },
        "status" : {
          "enum" : [ "RECEIVE", "REJECT", "DROP" ],
          "type" : "string"
        },
        "streamType" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "FetchAllDocumentPermissionsRequest" : {
      "type" : "object",
      "properties" : {
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        }
      }
    },
    "FetchDataRequest" : {
      "type" : "object",
      "properties" : {
        "expandedSeverities" : {
          "items" : {
            "enum" : [ "INFO", "WARNING", "ERROR", "FATAL_ERROR" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "markerMode" : {
          "type" : "boolean"
        },
        "pipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "segmentCount" : {
          "format" : "int64",
          "type" : "integer"
        },
        "showAsHtml" : {
          "type" : "boolean"
        },
        "sourceLocation" : {
          "$ref" : "#/definitions/SourceLocation",
          "originalRef" : "SourceLocation"
        }
      }
    },
    "FetchDataResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractFetchDataResult",
        "originalRef" : "AbstractFetchDataResult"
      }, {
        "type" : "object",
        "properties" : {
          "data" : {
            "readOnly" : true,
            "type" : "string"
          },
          "dataType" : {
            "enum" : [ "SEGMENTED", "NON_SEGMENTED", "MARKER" ],
            "readOnly" : true,
            "type" : "string"
          },
          "html" : {
            "readOnly" : true,
            "type" : "boolean"
          },
          "totalBytes" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          }
        }
      } ]
    },
    "FetchExplorerNodeResult" : {
      "type" : "object",
      "properties" : {
        "openedItems" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "rootNodes" : {
          "items" : {
            "$ref" : "#/definitions/ExplorerNode",
            "originalRef" : "ExplorerNode"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "temporaryOpenedItems" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "FetchLinkedScriptRequest" : {
      "type" : "object",
      "properties" : {
        "loadedScripts" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "script" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        }
      }
    },
    "FetchMarkerResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractFetchDataResult",
        "originalRef" : "AbstractFetchDataResult"
      }, {
        "type" : "object",
        "properties" : {
          "markers" : {
            "items" : {
              "$ref" : "#/definitions/Marker",
              "originalRef" : "Marker"
            },
            "readOnly" : true,
            "type" : "array"
          }
        }
      } ]
    },
    "FetchNodeStatusResponse" : {
      "type" : "object",
      "properties" : {
        "pageResponse" : {
          "$ref" : "#/definitions/PageResponse",
          "originalRef" : "PageResponse",
          "readOnly" : true
        },
        "values" : {
          "items" : {
            "$ref" : "#/definitions/NodeStatusResult",
            "originalRef" : "NodeStatusResult"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "FetchPipelineXmlResponse" : {
      "type" : "object",
      "properties" : {
        "pipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "xml" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "FetchProcessorRequest" : {
      "type" : "object",
      "properties" : {
        "expandedRows" : {
          "items" : {
            "$ref" : "#/definitions/ProcessorListRow",
            "originalRef" : "ProcessorListRow"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator"
        }
      }
    },
    "FetchSuggestionsRequest" : {
      "type" : "object",
      "required" : [ "dataSource", "field" ],
      "properties" : {
        "dataSource" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "field" : {
          "$ref" : "#/definitions/AbstractField",
          "originalRef" : "AbstractField",
          "readOnly" : true
        },
        "text" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "Field" : {
      "type" : "object",
      "required" : [ "expression", "special", "visible", "width" ],
      "properties" : {
        "expression" : {
          "description" : "The expression to use to generate the value for this field",
          "example" : "SUM(${count})",
          "readOnly" : true,
          "type" : "string"
        },
        "filter" : {
          "$ref" : "#/definitions/Filter",
          "originalRef" : "Filter",
          "readOnly" : true
        },
        "format" : {
          "$ref" : "#/definitions/Format",
          "originalRef" : "Format",
          "readOnly" : true
        },
        "group" : {
          "description" : "If this field is to be grouped then this defines the level of grouping, with 0 being the top level of grouping, 1 being the next level down, etc.",
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "id" : {
          "description" : "The internal id of the field for equality purposes",
          "readOnly" : true,
          "type" : "string"
        },
        "name" : {
          "description" : "The name of the field for display purposes",
          "readOnly" : true,
          "type" : "string"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort",
          "originalRef" : "Sort",
          "readOnly" : true
        },
        "special" : {
          "type" : "boolean"
        },
        "visible" : {
          "type" : "boolean"
        },
        "width" : {
          "format" : "int32",
          "type" : "integer"
        }
      },
      "description" : "Describes a field in a result set. The field can have various expressions applied to it, e.g. SUM(), along with sorting, filtering, formatting and grouping"
    },
    "Filter" : {
      "type" : "object",
      "properties" : {
        "excludes" : {
          "description" : "Only results NOT matching this filter will be included",
          "example" : "^[0-9]{3}$",
          "readOnly" : true,
          "type" : "string"
        },
        "includes" : {
          "description" : "Only results matching this filter will be included",
          "example" : "^[0-9]{3}$",
          "readOnly" : true,
          "type" : "string"
        }
      },
      "description" : "A pair of regular expression filters (inclusion and exclusion) to apply to the field.  Either or both can be supplied"
    },
    "FindDBTableCriteria" : {
      "type" : "object",
      "properties" : {
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "FindDataRetentionImpactCriteria" : {
      "type" : "object",
      "properties" : {
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator"
        },
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "FindExplorerNodeCriteria" : {
      "type" : "object",
      "properties" : {
        "ensureVisible" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "filter" : {
          "$ref" : "#/definitions/ExplorerTreeFilter",
          "originalRef" : "ExplorerTreeFilter",
          "readOnly" : true
        },
        "minDepth" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "openItems" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "temporaryOpenedItems" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "FindFsVolumeCriteria" : {
      "type" : "object",
      "properties" : {
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "selection" : {
          "$ref" : "#/definitions/SelectionVolumeUseStatus",
          "originalRef" : "SelectionVolumeUseStatus",
          "readOnly" : true
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "FindIndexShardCriteria" : {
      "type" : "object",
      "properties" : {
        "documentCountRange" : {
          "$ref" : "#/definitions/RangeInteger",
          "originalRef" : "RangeInteger"
        },
        "indexShardIdSet" : {
          "$ref" : "#/definitions/SelectionLong",
          "originalRef" : "SelectionLong",
          "readOnly" : true
        },
        "indexShardStatusSet" : {
          "$ref" : "#/definitions/SelectionIndexShardStatus",
          "originalRef" : "SelectionIndexShardStatus",
          "readOnly" : true
        },
        "indexUuidSet" : {
          "$ref" : "#/definitions/SelectionString",
          "originalRef" : "SelectionString",
          "readOnly" : true
        },
        "nodeNameSet" : {
          "$ref" : "#/definitions/SelectionString",
          "originalRef" : "SelectionString",
          "readOnly" : true
        },
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "partition" : {
          "$ref" : "#/definitions/StringCriteria",
          "originalRef" : "StringCriteria",
          "readOnly" : true
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "volumeIdSet" : {
          "$ref" : "#/definitions/SelectionInteger",
          "originalRef" : "SelectionInteger",
          "readOnly" : true
        }
      }
    },
    "FindMetaCriteria" : {
      "type" : "object",
      "properties" : {
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator"
        },
        "fetchRelationships" : {
          "type" : "boolean"
        },
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "FindStoredQueryCriteria" : {
      "type" : "object",
      "properties" : {
        "componentId" : {
          "type" : "string"
        },
        "dashboardUuid" : {
          "type" : "string"
        },
        "favourite" : {
          "type" : "boolean"
        },
        "name" : {
          "$ref" : "#/definitions/StringCriteria",
          "originalRef" : "StringCriteria"
        },
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "requiredPermission" : {
          "type" : "string"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "userId" : {
          "type" : "string"
        }
      }
    },
    "FindTaskCriteria" : {
      "type" : "object",
      "properties" : {
        "ancestorIdSet" : {
          "items" : {
            "$ref" : "#/definitions/TaskId",
            "originalRef" : "TaskId"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "idSet" : {
          "items" : {
            "$ref" : "#/definitions/TaskId",
            "originalRef" : "TaskId"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "sessionId" : {
          "type" : "string"
        }
      }
    },
    "FindTaskProgressCriteria" : {
      "type" : "object",
      "properties" : {
        "expandedTasks" : {
          "items" : {
            "$ref" : "#/definitions/TaskProgress",
            "originalRef" : "TaskProgress"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "nameFilter" : {
          "type" : "string"
        },
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "sessionId" : {
          "type" : "string"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "FindTaskProgressRequest" : {
      "type" : "object",
      "properties" : {
        "criteria" : {
          "$ref" : "#/definitions/FindTaskProgressCriteria",
          "originalRef" : "FindTaskProgressCriteria",
          "readOnly" : true
        }
      }
    },
    "FindUserCriteria" : {
      "type" : "object",
      "properties" : {
        "group" : {
          "type" : "boolean"
        },
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "quickFilterInput" : {
          "type" : "string"
        },
        "relatedUser" : {
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "FlatResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Result",
        "originalRef" : "Result"
      }, {
        "type" : "object",
        "properties" : {
          "size" : {
            "description" : "The size of the result set being returned",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "structure" : {
            "items" : {
              "$ref" : "#/definitions/Field",
              "originalRef" : "Field"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "values" : {
            "description" : "The 2 dimensional array containing the result set. The positions in the inner array correspond to the positions in the 'structure' property",
            "items" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "description" : "A result structure used primarily for visualisation data"
      } ]
    },
    "FloatField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "Format" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "settings" : {
          "$ref" : "#/definitions/FormatSettings",
          "originalRef" : "FormatSettings",
          "readOnly" : true
        },
        "type" : {
          "description" : "The formatting type to apply",
          "enum" : [ "GENERAL", "NUMBER", "DATE_TIME", "TEXT" ],
          "example" : "NUMBER",
          "readOnly" : true,
          "type" : "string"
        },
        "wrap" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      },
      "description" : "Describes the formatting that will be applied to values in a field"
    },
    "FormatSettings" : {
      "type" : "object",
      "required" : [ "default" ],
      "discriminator" : "type",
      "properties" : {
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "FsVolume" : {
      "type" : "object",
      "properties" : {
        "byteLimit" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "path" : {
          "type" : "string"
        },
        "status" : {
          "enum" : [ "ACTIVE", "INACTIVE", "CLOSED" ],
          "type" : "string"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        },
        "volumeState" : {
          "$ref" : "#/definitions/FsVolumeState",
          "originalRef" : "FsVolumeState"
        }
      }
    },
    "FsVolumeState" : {
      "type" : "object",
      "properties" : {
        "bytesFree" : {
          "format" : "int64",
          "type" : "integer"
        },
        "bytesTotal" : {
          "format" : "int64",
          "type" : "integer"
        },
        "bytesUsed" : {
          "format" : "int64",
          "type" : "integer"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "GetFeedStatusRequest" : {
      "type" : "object",
      "properties" : {
        "feedName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "senderDn" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "GetFeedStatusResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "status" : {
          "enum" : [ "Receive", "Reject", "Drop" ],
          "type" : "string"
        },
        "stroomStatusCode" : {
          "enum" : [ "OK", "FEED_MUST_BE_SPECIFIED", "FEED_IS_NOT_DEFINED", "FEED_IS_NOT_SET_TO_RECEIVED_DATA", "UNEXPECTED_DATA_TYPE", "UNKNOWN_COMPRESSION", "CLIENT_CERTIFICATE_REQUIRED", "CLIENT_CERTIFICATE_NOT_AUTHORISED", "COMPRESSED_STREAM_INVALID", "UNKNOWN_ERROR" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "GetPipelineForMetaRequest" : {
      "type" : "object",
      "properties" : {
        "childMetaId" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "metaId" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "GetScheduledTimesRequest" : {
      "type" : "object",
      "properties" : {
        "jobType" : {
          "enum" : [ "UNKNOWN", "CRON", "FREQUENCY", "DISTRIBUTED" ],
          "readOnly" : true,
          "type" : "string"
        },
        "lastExecutedTime" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "schedule" : {
          "readOnly" : true,
          "type" : "string"
        },
        "scheduleReferenceTime" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "GlobalConfigCriteria" : {
      "type" : "object",
      "properties" : {
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "quickFilterInput" : {
          "type" : "string"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "IdField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "ImportConfigRequest" : {
      "type" : "object",
      "properties" : {
        "confirmList" : {
          "items" : {
            "$ref" : "#/definitions/ImportState",
            "originalRef" : "ImportState"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "resourceKey" : {
          "$ref" : "#/definitions/ResourceKey",
          "originalRef" : "ResourceKey",
          "readOnly" : true
        }
      }
    },
    "ImportState" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "boolean"
        },
        "destPath" : {
          "type" : "string"
        },
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "enable" : {
          "type" : "boolean"
        },
        "enableTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "messageList" : {
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "sourcePath" : {
          "readOnly" : true,
          "type" : "string"
        },
        "state" : {
          "enum" : [ "NEW", "UPDATE", "EQUAL" ],
          "type" : "string"
        },
        "updatedFieldList" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "IndexDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "fields" : {
          "items" : {
            "$ref" : "#/definitions/IndexField",
            "originalRef" : "IndexField"
          },
          "type" : "array"
        },
        "maxDocsPerShard" : {
          "format" : "int32",
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "partitionBy" : {
          "enum" : [ "DAY", "WEEK", "MONTH", "YEAR" ],
          "type" : "string"
        },
        "partitionSize" : {
          "format" : "int32",
          "type" : "integer"
        },
        "retentionDayAge" : {
          "format" : "int32",
          "type" : "integer"
        },
        "shardsPerPartition" : {
          "format" : "int32",
          "type" : "integer"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "volumeGroupName" : {
          "type" : "string"
        }
      }
    },
    "IndexField" : {
      "type" : "object",
      "properties" : {
        "analyzerType" : {
          "enum" : [ "KEYWORD", "ALPHA", "NUMERIC", "ALPHA_NUMERIC", "WHITESPACE", "STOP", "STANDARD" ],
          "readOnly" : true,
          "type" : "string"
        },
        "caseSensitive" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "fieldName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "fieldType" : {
          "enum" : [ "ID", "BOOLEAN_FIELD", "INTEGER_FIELD", "LONG_FIELD", "FLOAT_FIELD", "DOUBLE_FIELD", "DATE_FIELD", "FIELD", "NUMERIC_FIELD" ],
          "readOnly" : true,
          "type" : "string"
        },
        "indexed" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "stored" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "termPositions" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "IndexVolume" : {
      "type" : "object",
      "properties" : {
        "bytesFree" : {
          "format" : "int64",
          "type" : "integer"
        },
        "bytesLimit" : {
          "format" : "int64",
          "type" : "integer"
        },
        "bytesTotal" : {
          "format" : "int64",
          "type" : "integer"
        },
        "bytesUsed" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "indexVolumeGroupId" : {
          "format" : "int32",
          "type" : "integer"
        },
        "nodeName" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "state" : {
          "enum" : [ "ACTIVE", "INACTIVE", "CLOSED" ],
          "type" : "string"
        },
        "statusMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "IndexVolumeGroup" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "Indicators" : {
      "type" : "object",
      "properties" : {
        "errorCount" : {
          "additionalProperties" : {
            "format" : "int32",
            "type" : "integer"
          },
          "readOnly" : true,
          "type" : "object"
        },
        "errorList" : {
          "items" : {
            "$ref" : "#/definitions/StoredError",
            "originalRef" : "StoredError"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "uniqueErrorSet" : {
          "items" : {
            "$ref" : "#/definitions/StoredError",
            "originalRef" : "StoredError"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "InfoPopupConfig" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "description" : "If you would like users to provide some query info when performing a query set this property to true.",
          "type" : "boolean"
        },
        "title" : {
          "description" : "The title of the query info popup.",
          "type" : "string"
        },
        "validationRegex" : {
          "description" : "A regex used to validate query info.",
          "type" : "string"
        }
      }
    },
    "IntegerField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "JobNodeInfo" : {
      "type" : "object",
      "properties" : {
        "currentTaskCount" : {
          "format" : "int32",
          "type" : "integer"
        },
        "lastExecutedTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "scheduleReferenceTime" : {
          "format" : "int64",
          "type" : "integer"
        }
      }
    },
    "KafkaConfigDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "LayoutConfig" : {
      "type" : "object",
      "required" : [ "preferredSize" ],
      "discriminator" : "type",
      "properties" : {
        "preferredSize" : {
          "$ref" : "#/definitions/Size",
          "originalRef" : "Size"
        }
      }
    },
    "Limits" : {
      "type" : "object",
      "properties" : {
        "durationMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "eventCount" : {
          "format" : "int64",
          "type" : "integer"
        },
        "streamCount" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "xml" : {
        "name" : "limits"
      }
    },
    "ListConfigResponse" : {
      "type" : "object",
      "properties" : {
        "pageResponse" : {
          "$ref" : "#/definitions/PageResponse",
          "originalRef" : "PageResponse",
          "readOnly" : true
        },
        "values" : {
          "items" : {
            "$ref" : "#/definitions/ConfigProperty",
            "originalRef" : "ConfigProperty"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "Location" : {
      "type" : "object",
      "required" : [ "colNo", "lineNo" ],
      "discriminator" : "type",
      "properties" : {
        "colNo" : {
          "format" : "int32",
          "type" : "integer"
        },
        "lineNo" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "LoginRequest" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "readOnly" : true,
          "type" : "string"
        },
        "userId" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "LongField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "MapDefinition" : {
      "type" : "object",
      "properties" : {
        "mapName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "refStreamDefinition" : {
          "$ref" : "#/definitions/RefStreamDefinition",
          "originalRef" : "RefStreamDefinition",
          "readOnly" : true
        }
      }
    },
    "Marker" : {
      "type" : "object",
      "required" : [ "severity" ],
      "discriminator" : "type",
      "properties" : {
        "severity" : {
          "enum" : [ "INFO", "WARNING", "ERROR", "FATAL_ERROR" ],
          "type" : "string"
        }
      }
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "readOnly" : true,
          "type" : "string"
        },
        "severity" : {
          "enum" : [ "INFO", "WARNING", "ERROR", "FATAL_ERROR" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "Node" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "priority" : {
          "format" : "int32",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "NodeStatusResult" : {
      "type" : "object",
      "properties" : {
        "master" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "node" : {
          "$ref" : "#/definitions/Node",
          "originalRef" : "Node",
          "readOnly" : true
        }
      }
    },
    "Number" : {
      "type" : "object"
    },
    "NumberFormatSettings" : {
      "allOf" : [ {
        "$ref" : "#/definitions/FormatSettings",
        "originalRef" : "FormatSettings"
      }, {
        "type" : "object",
        "required" : [ "decimalPlaces" ],
        "properties" : {
          "decimalPlaces" : {
            "description" : "The number of decimal places",
            "example" : 2,
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "useSeparator" : {
            "description" : "Whether to use a thousands separator or not. Defaults to false",
            "example" : true,
            "readOnly" : true,
            "type" : "boolean"
          }
        },
        "description" : "The definition of a format to apply to numeric data"
      } ]
    },
    "OffsetRange" : {
      "type" : "object",
      "required" : [ "length", "offset" ],
      "properties" : {
        "length" : {
          "description" : "The length in records of the sub-set of results",
          "example" : 100,
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "offset" : {
          "description" : "The start offset for this sub-set of data, where zero is the offset of the first record in the full result set",
          "example" : 0,
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      },
      "description" : "The offset and length of a range of data in a sub-set of a query result set"
    },
    "OffsetRangeLong" : {
      "type" : "object",
      "properties" : {
        "length" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "offset" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "OverrideValue" : {
      "type" : "object",
      "properties" : {
        "hasOverride" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "value" : {
          "type" : "object"
        }
      }
    },
    "OverrideValueString" : {
      "type" : "object",
      "properties" : {
        "hasOverride" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "PageRequest" : {
      "type" : "object",
      "properties" : {
        "length" : {
          "format" : "int32",
          "type" : "integer"
        },
        "offset" : {
          "format" : "int64",
          "type" : "integer"
        }
      }
    },
    "PageResponse" : {
      "type" : "object",
      "properties" : {
        "exact" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "length" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "offset" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "total" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "Param" : {
      "type" : "object",
      "required" : [ "key", "value" ],
      "properties" : {
        "key" : {
          "description" : "The property key",
          "readOnly" : true,
          "type" : "string"
        },
        "value" : {
          "description" : "The property value",
          "readOnly" : true,
          "type" : "string"
        }
      },
      "description" : "A key value pair that describes a property of a query"
    },
    "PasswordPolicyConfig" : {
      "type" : "object",
      "required" : [ "mandatoryPasswordChangeDuration", "minimumPasswordLength", "minimumPasswordStrength", "neverUsedAccountDeactivationThreshold", "unusedAccountDeactivationThreshold" ],
      "properties" : {
        "allowPasswordResets" : {
          "description" : "Will the UI allow password resets",
          "type" : "boolean"
        },
        "forcePasswordChangeOnFirstLogin" : {
          "description" : "If true, on first login the user will be forced to change their password.",
          "type" : "boolean"
        },
        "mandatoryPasswordChangeDuration" : {
          "$ref" : "#/definitions/StroomDuration",
          "description" : "The age after which a password will have to be changed. The frequency of checks is controlled by the job 'Account Maintenance'.",
          "originalRef" : "StroomDuration"
        },
        "minimumPasswordLength" : {
          "description" : "The minimum number of characters that new passwords need to contain.",
          "format" : "int32",
          "minimum" : 0,
          "type" : "integer"
        },
        "minimumPasswordStrength" : {
          "description" : "The minimum strength password that is allowed.",
          "format" : "int32",
          "maximum" : 5,
          "minimum" : 0,
          "type" : "integer"
        },
        "neverUsedAccountDeactivationThreshold" : {
          "$ref" : "#/definitions/StroomDuration",
          "description" : "Unused user accounts with a duration since account creation greater than this value will be locked. The frequency of checks is controlled by the job 'Account Maintenance'.",
          "originalRef" : "StroomDuration"
        },
        "passwordComplexityRegex" : {
          "description" : "A regex pattern that new passwords must match",
          "type" : "string"
        },
        "passwordPolicyMessage" : {
          "description" : "A message informing users of the password policy",
          "type" : "string"
        },
        "unusedAccountDeactivationThreshold" : {
          "$ref" : "#/definitions/StroomDuration",
          "description" : "User accounts with a duration since last login greater than this value will be locked. The frequency of checks is controlled by the job 'Account Maintenance'.",
          "originalRef" : "StroomDuration"
        }
      }
    },
    "PermissionChangeEvent" : {
      "type" : "object",
      "discriminator" : "type"
    },
    "PermissionChangeRequest" : {
      "type" : "object",
      "properties" : {
        "event" : {
          "$ref" : "#/definitions/PermissionChangeEvent",
          "originalRef" : "PermissionChangeEvent",
          "readOnly" : true
        }
      }
    },
    "PipelineDTO" : {
      "type" : "object",
      "properties" : {
        "configStack" : {
          "items" : {
            "$ref" : "#/definitions/PipelineData",
            "originalRef" : "PipelineData"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "description" : {
          "readOnly" : true,
          "type" : "string"
        },
        "docRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "merged" : {
          "$ref" : "#/definitions/PipelineData",
          "originalRef" : "PipelineData",
          "readOnly" : true
        },
        "parentPipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        }
      }
    },
    "PipelineData" : {
      "type" : "object",
      "properties" : {
        "elements" : {
          "$ref" : "#/definitions/PipelineElements",
          "originalRef" : "PipelineElements"
        },
        "links" : {
          "$ref" : "#/definitions/PipelineLinks",
          "originalRef" : "PipelineLinks"
        },
        "pipelineReferences" : {
          "$ref" : "#/definitions/PipelineReferences",
          "originalRef" : "PipelineReferences"
        },
        "processors" : {
          "items" : {
            "$ref" : "#/definitions/Processor",
            "originalRef" : "Processor",
            "xml" : {
              "name" : "processors"
            }
          },
          "type" : "array"
        },
        "properties" : {
          "$ref" : "#/definitions/PipelineProperties",
          "originalRef" : "PipelineProperties"
        }
      },
      "xml" : {
        "name" : "pipeline"
      }
    },
    "PipelineDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "parentPipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "pipelineData" : {
          "$ref" : "#/definitions/PipelineData",
          "originalRef" : "PipelineData"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "PipelineElement" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "elementType" : {
          "$ref" : "#/definitions/PipelineElementType",
          "originalRef" : "PipelineElementType"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "PipelineElementType" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "enum" : [ "INTERNAL", "READER", "PARSER", "FILTER", "WRITER", "DESTINATION" ],
          "readOnly" : true,
          "type" : "string"
        },
        "icon" : {
          "readOnly" : true,
          "type" : "string"
        },
        "roles" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "type" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "PipelineElements" : {
      "type" : "object",
      "properties" : {
        "add" : {
          "items" : {
            "$ref" : "#/definitions/PipelineElement",
            "originalRef" : "PipelineElement",
            "xml" : {
              "name" : "element"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "remove" : {
          "items" : {
            "$ref" : "#/definitions/PipelineElement",
            "originalRef" : "PipelineElement",
            "xml" : {
              "name" : "element"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PipelineLink" : {
      "type" : "object",
      "required" : [ "from", "to" ],
      "properties" : {
        "from" : {
          "readOnly" : true,
          "type" : "string"
        },
        "sourcePipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "to" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "PipelineLinks" : {
      "type" : "object",
      "properties" : {
        "add" : {
          "items" : {
            "$ref" : "#/definitions/PipelineLink",
            "originalRef" : "PipelineLink",
            "xml" : {
              "name" : "link"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "remove" : {
          "items" : {
            "$ref" : "#/definitions/PipelineLink",
            "originalRef" : "PipelineLink",
            "xml" : {
              "name" : "link"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PipelineProperties" : {
      "type" : "object",
      "properties" : {
        "add" : {
          "items" : {
            "$ref" : "#/definitions/PipelineProperty",
            "originalRef" : "PipelineProperty",
            "xml" : {
              "name" : "property"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "remove" : {
          "items" : {
            "$ref" : "#/definitions/PipelineProperty",
            "originalRef" : "PipelineProperty",
            "xml" : {
              "name" : "property"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PipelineProperty" : {
      "type" : "object",
      "required" : [ "element", "name" ],
      "properties" : {
        "element" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "propertyType" : {
          "$ref" : "#/definitions/PipelinePropertyType",
          "originalRef" : "PipelinePropertyType"
        },
        "sourcePipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "value" : {
          "$ref" : "#/definitions/PipelinePropertyValue",
          "originalRef" : "PipelinePropertyValue"
        }
      }
    },
    "PipelinePropertyType" : {
      "type" : "object",
      "properties" : {
        "defaultValue" : {
          "readOnly" : true,
          "type" : "string"
        },
        "description" : {
          "readOnly" : true,
          "type" : "string"
        },
        "displayPriority" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "docRefTypes" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "elementType" : {
          "$ref" : "#/definitions/PipelineElementType",
          "originalRef" : "PipelineElementType",
          "readOnly" : true
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        },
        "pipelineReference" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "type" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "PipelinePropertyValue" : {
      "type" : "object",
      "properties" : {
        "boolean" : {
          "type" : "boolean"
        },
        "entity" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "integer" : {
          "format" : "int32",
          "type" : "integer"
        },
        "long" : {
          "format" : "int64",
          "type" : "integer"
        },
        "string" : {
          "type" : "string"
        }
      }
    },
    "PipelineReference" : {
      "type" : "object",
      "required" : [ "element", "feed", "name", "pipeline", "streamType" ],
      "properties" : {
        "element" : {
          "type" : "string"
        },
        "feed" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "name" : {
          "type" : "string"
        },
        "pipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "sourcePipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "streamType" : {
          "type" : "string"
        }
      }
    },
    "PipelineReferences" : {
      "type" : "object",
      "properties" : {
        "add" : {
          "items" : {
            "$ref" : "#/definitions/PipelineReference",
            "originalRef" : "PipelineReference",
            "xml" : {
              "name" : "reference"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "remove" : {
          "items" : {
            "$ref" : "#/definitions/PipelineReference",
            "originalRef" : "PipelineReference",
            "xml" : {
              "name" : "reference"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        }
      }
    },
    "PipelineStepRequest" : {
      "type" : "object",
      "properties" : {
        "childStreamType" : {
          "type" : "string"
        },
        "code" : {
          "additionalProperties" : {
            "type" : "string"
          },
          "type" : "object"
        },
        "criteria" : {
          "$ref" : "#/definitions/FindMetaCriteria",
          "originalRef" : "FindMetaCriteria"
        },
        "pipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "stepFilterMap" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/SteppingFilterSettings",
            "originalRef" : "SteppingFilterSettings"
          },
          "type" : "object"
        },
        "stepLocation" : {
          "$ref" : "#/definitions/StepLocation",
          "originalRef" : "StepLocation"
        },
        "stepSize" : {
          "format" : "int32",
          "type" : "integer"
        },
        "stepType" : {
          "enum" : [ "FIRST", "FORWARD", "BACKWARD", "LAST", "REFRESH" ],
          "type" : "string"
        }
      }
    },
    "ProcessConfig" : {
      "type" : "object",
      "properties" : {
        "defaultRecordLimit" : {
          "description" : "The default number of records that batch search processing will be limited by.",
          "format" : "int64",
          "type" : "integer"
        },
        "defaultTimeLimit" : {
          "description" : "The default number of minutes that batch search processing will be limited by.",
          "format" : "int64",
          "type" : "integer"
        }
      }
    },
    "Processor" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "pipelineName" : {
          "type" : "string"
        },
        "pipelineUuid" : {
          "type" : "string"
        },
        "taskType" : {
          "type" : "string"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      },
      "xml" : {
        "name" : "parameters"
      }
    },
    "ProcessorFilter" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "pipelineName" : {
          "type" : "string"
        },
        "pipelineUuid" : {
          "type" : "string"
        },
        "priority" : {
          "format" : "int32",
          "type" : "integer"
        },
        "processor" : {
          "$ref" : "#/definitions/Processor",
          "originalRef" : "Processor"
        },
        "processorFilterTracker" : {
          "$ref" : "#/definitions/ProcessorFilterTracker",
          "originalRef" : "ProcessorFilterTracker"
        },
        "processorUuid" : {
          "readOnly" : true,
          "type" : "string"
        },
        "queryData" : {
          "$ref" : "#/definitions/QueryData",
          "originalRef" : "QueryData"
        },
        "reprocess" : {
          "type" : "boolean"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "ProcessorFilterRow" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ProcessorListRow",
        "originalRef" : "ProcessorListRow"
      }, {
        "type" : "object",
        "properties" : {
          "processorFilter" : {
            "$ref" : "#/definitions/ProcessorFilter",
            "originalRef" : "ProcessorFilter",
            "readOnly" : true
          }
        }
      } ]
    },
    "ProcessorFilterTracker" : {
      "type" : "object",
      "properties" : {
        "eventCount" : {
          "format" : "int64",
          "type" : "integer"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "lastPollMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "lastPollTaskCount" : {
          "format" : "int32",
          "type" : "integer"
        },
        "maxMetaCreateMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "metaCount" : {
          "format" : "int64",
          "type" : "integer"
        },
        "metaCreateMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "minEventId" : {
          "format" : "int64",
          "type" : "integer"
        },
        "minMetaCreateMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "minMetaId" : {
          "format" : "int64",
          "type" : "integer"
        },
        "status" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "ProcessorListRow" : {
      "type" : "object",
      "required" : [ "expander" ],
      "discriminator" : "type",
      "properties" : {
        "expander" : {
          "$ref" : "#/definitions/Expander",
          "originalRef" : "Expander"
        }
      }
    },
    "ProcessorRow" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ProcessorListRow",
        "originalRef" : "ProcessorListRow"
      }, {
        "type" : "object",
        "properties" : {
          "expander" : {
            "$ref" : "#/definitions/Expander",
            "originalRef" : "Expander",
            "readOnly" : true
          },
          "processor" : {
            "$ref" : "#/definitions/Processor",
            "originalRef" : "Processor",
            "readOnly" : true
          }
        }
      } ]
    },
    "ProcessorTask" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "data" : {
          "type" : "string"
        },
        "endTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "feedName" : {
          "type" : "string"
        },
        "id" : {
          "format" : "int64",
          "type" : "integer"
        },
        "metaId" : {
          "format" : "int64",
          "type" : "integer"
        },
        "nodeName" : {
          "type" : "string"
        },
        "processorFilter" : {
          "$ref" : "#/definitions/ProcessorFilter",
          "originalRef" : "ProcessorFilter"
        },
        "startTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "status" : {
          "enum" : [ "UNPROCESSED", "ASSIGNED", "PROCESSING", "COMPLETE", "FAILED", "DELETED" ],
          "type" : "string"
        },
        "statusTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "ProcessorTaskList" : {
      "type" : "object",
      "properties" : {
        "list" : {
          "items" : {
            "$ref" : "#/definitions/ProcessorTask",
            "originalRef" : "ProcessorTask"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "nodeName" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "Prop" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "showInList" : {
          "type" : "boolean"
        },
        "showInSelection" : {
          "type" : "boolean"
        },
        "validation" : {
          "type" : "string"
        },
        "validationMessage" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "PropertyPath" : {
      "type" : "object",
      "properties" : {
        "parts" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        }
      }
    },
    "Query" : {
      "type" : "object",
      "required" : [ "dataSource", "expression" ],
      "properties" : {
        "dataSource" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "description" : "The root logical operator in the query expression tree",
          "originalRef" : "ExpressionOperator",
          "readOnly" : true
        },
        "params" : {
          "description" : "A list of key/value pairs that provide additional information about the query",
          "items" : {
            "$ref" : "#/definitions/Param",
            "originalRef" : "Param"
          },
          "readOnly" : true,
          "type" : "array"
        }
      },
      "description" : "The query terms for the search"
    },
    "QueryComponentSettings" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComponentSettings",
        "originalRef" : "ComponentSettings"
      }, {
        "type" : "object",
        "properties" : {
          "automate" : {
            "$ref" : "#/definitions/Automate",
            "originalRef" : "Automate",
            "readOnly" : true
          },
          "dataSource" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef",
            "readOnly" : true
          },
          "expression" : {
            "$ref" : "#/definitions/ExpressionOperator",
            "originalRef" : "ExpressionOperator",
            "readOnly" : true
          }
        }
      } ]
    },
    "QueryConfig" : {
      "type" : "object",
      "properties" : {
        "infoPopup" : {
          "$ref" : "#/definitions/InfoPopupConfig",
          "originalRef" : "InfoPopupConfig"
        }
      }
    },
    "QueryData" : {
      "type" : "object",
      "properties" : {
        "dataSource" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator"
        },
        "limits" : {
          "$ref" : "#/definitions/Limits",
          "originalRef" : "Limits"
        }
      },
      "xml" : {
        "name" : "query"
      }
    },
    "QueryKey" : {
      "type" : "object",
      "required" : [ "uuid" ],
      "properties" : {
        "uuid" : {
          "description" : "The UUID that makes up the query key",
          "example" : "7740bcd0-a49e-4c22-8540-044f85770716",
          "type" : "string"
        }
      },
      "description" : "A unique key to identify the instance of the search by. This key is used to identify multiple requests for the same search when running in incremental mode."
    },
    "Range" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "$ref" : "#/definitions/Number",
          "originalRef" : "Number"
        },
        "matchNull" : {
          "type" : "boolean"
        },
        "to" : {
          "$ref" : "#/definitions/Number",
          "originalRef" : "Number"
        }
      }
    },
    "RangeInteger" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "format" : "int32",
          "type" : "integer"
        },
        "matchNull" : {
          "type" : "boolean"
        },
        "to" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "Rec" : {
      "type" : "object",
      "properties" : {
        "recordNo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "streamId" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "ReceiveDataRule" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "enum" : [ "RECEIVE", "REJECT", "DROP" ],
          "readOnly" : true,
          "type" : "string"
        },
        "creationTime" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "enabled" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator",
          "readOnly" : true
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        },
        "ruleNumber" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        }
      },
      "xml" : {
        "name" : "dataReceiptRule"
      }
    },
    "ReceiveDataRules" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "fields" : {
          "items" : {
            "$ref" : "#/definitions/AbstractField",
            "originalRef" : "AbstractField"
          },
          "type" : "array"
        },
        "name" : {
          "type" : "string"
        },
        "rules" : {
          "items" : {
            "$ref" : "#/definitions/ReceiveDataRule",
            "originalRef" : "ReceiveDataRule"
          },
          "type" : "array"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "RefDataProcessingInfo" : {
      "type" : "object",
      "properties" : {
        "createTimeEpochMs" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "effectiveTimeEpochMs" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "lastAccessedTimeEpochMs" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "processingState" : {
          "enum" : [ "LOAD_IN_PROGRESS", "PURGE_IN_PROGRESS", "COMPLETE" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "RefStoreEntry" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "readOnly" : true,
          "type" : "string"
        },
        "mapDefinition" : {
          "$ref" : "#/definitions/MapDefinition",
          "originalRef" : "MapDefinition",
          "readOnly" : true
        },
        "refDataProcessingInfo" : {
          "$ref" : "#/definitions/RefDataProcessingInfo",
          "originalRef" : "RefDataProcessingInfo",
          "readOnly" : true
        },
        "value" : {
          "readOnly" : true,
          "type" : "string"
        },
        "valueReferenceCount" : {
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "RefStreamDefinition" : {
      "type" : "object",
      "properties" : {
        "pipelineDocRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "pipelineVersion" : {
          "readOnly" : true,
          "type" : "string"
        },
        "streamId" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "streamNo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "RemovePermissionEvent" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PermissionChangeEvent",
        "originalRef" : "PermissionChangeEvent"
      }, {
        "type" : "object",
        "properties" : {
          "documentUuid" : {
            "readOnly" : true,
            "type" : "string"
          },
          "permission" : {
            "readOnly" : true,
            "type" : "string"
          },
          "userUuid" : {
            "readOnly" : true,
            "type" : "string"
          }
        }
      } ]
    },
    "ReprocessDataInfo" : {
      "type" : "object",
      "properties" : {
        "details" : {
          "readOnly" : true,
          "type" : "string"
        },
        "message" : {
          "readOnly" : true,
          "type" : "string"
        },
        "severity" : {
          "enum" : [ "INFO", "WARNING", "ERROR", "FATAL_ERROR" ],
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ResetPasswordRequest" : {
      "type" : "object",
      "properties" : {
        "confirmNewPassword" : {
          "readOnly" : true,
          "type" : "string"
        },
        "newPassword" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ResourceGeneration" : {
      "type" : "object",
      "properties" : {
        "messageList" : {
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "resourceKey" : {
          "$ref" : "#/definitions/ResourceKey",
          "originalRef" : "ResourceKey",
          "readOnly" : true
        }
      }
    },
    "ResourceKey" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "readOnly" : true,
          "type" : "string"
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "Result" : {
      "type" : "object",
      "required" : [ "componentId" ],
      "discriminator" : "type",
      "properties" : {
        "componentId" : {
          "description" : "The ID of the component that this result set was requested for. See ResultRequest in SearchRequest",
          "readOnly" : true,
          "type" : "string"
        },
        "error" : {
          "description" : "If an error has occurred producing this result set then this will have details of the error",
          "readOnly" : true,
          "type" : "string"
        }
      },
      "description" : "Base object for describing a set of result data"
    },
    "ResultPage" : {
      "type" : "object",
      "properties" : {
        "pageResponse" : {
          "$ref" : "#/definitions/PageResponse",
          "originalRef" : "PageResponse",
          "readOnly" : true
        },
        "values" : {
          "items" : {
            "type" : "object"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "ResultPageDBTableStatus" : {
      "type" : "object",
      "properties" : {
        "pageResponse" : {
          "$ref" : "#/definitions/PageResponse",
          "originalRef" : "PageResponse",
          "readOnly" : true
        },
        "values" : {
          "items" : {
            "$ref" : "#/definitions/DBTableStatus",
            "originalRef" : "DBTableStatus"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "ResultPageUser" : {
      "type" : "object",
      "properties" : {
        "pageResponse" : {
          "$ref" : "#/definitions/PageResponse",
          "originalRef" : "PageResponse",
          "readOnly" : true
        },
        "values" : {
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "ResultRequest" : {
      "type" : "object",
      "required" : [ "componentId", "mappings", "openGroups", "requestedRange", "resultStyle" ],
      "properties" : {
        "componentId" : {
          "description" : "The ID of the component that will receive the results corresponding to this ResultRequest",
          "readOnly" : true,
          "type" : "string"
        },
        "fetch" : {
          "description" : "The fetch mode for the query. NONE means fetch no data, ALL means fetch all known results, CHANGES means fetch only those records not see in previous requests",
          "enum" : [ "NONE", "CHANGES", "ALL" ],
          "readOnly" : true,
          "type" : "string"
        },
        "mappings" : {
          "items" : {
            "$ref" : "#/definitions/TableSettings",
            "originalRef" : "TableSettings"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "openGroups" : {
          "description" : "TODO",
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "requestedRange" : {
          "$ref" : "#/definitions/OffsetRange",
          "originalRef" : "OffsetRange",
          "readOnly" : true
        },
        "resultStyle" : {
          "description" : "The style of results required. FLAT will provide a FlatResult object, while TABLE will provide a TableResult object",
          "enum" : [ "FLAT", "TABLE" ],
          "readOnly" : true,
          "type" : "string"
        }
      },
      "description" : "A definition for how to return the raw results of the query in the SearchResponse, e.g. sorted, grouped, limited, etc."
    },
    "Row" : {
      "type" : "object",
      "required" : [ "depth", "groupKey", "values" ],
      "properties" : {
        "backgroundColor" : {
          "readOnly" : true,
          "type" : "string"
        },
        "depth" : {
          "description" : "The grouping depth, where 0 is the top level of grouping, or where there is no grouping",
          "example" : 0,
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "groupKey" : {
          "description" : "TODO",
          "readOnly" : true,
          "type" : "string"
        },
        "textColor" : {
          "readOnly" : true,
          "type" : "string"
        },
        "values" : {
          "description" : "The value for this row of data. The values in the list are in the same order as the fields in the ResultRequest",
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array"
        }
      },
      "description" : "A row of data in a result set"
    },
    "SavePipelineXmlRequest" : {
      "type" : "object",
      "properties" : {
        "pipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "xml" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ScheduledTimes" : {
      "type" : "object",
      "properties" : {
        "lastExecutedTime" : {
          "readOnly" : true,
          "type" : "string"
        },
        "nextScheduledTime" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ScriptDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "dependencies" : {
          "items" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          },
          "type" : "array"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "Search" : {
      "type" : "object",
      "properties" : {
        "componentSettingsMap" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/ComponentSettings",
            "originalRef" : "ComponentSettings"
          },
          "readOnly" : true,
          "type" : "object"
        },
        "dataSourceRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "expression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator",
          "readOnly" : true
        },
        "incremental" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "params" : {
          "items" : {
            "$ref" : "#/definitions/Param",
            "originalRef" : "Param"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "queryInfo" : {
          "readOnly" : true,
          "type" : "string"
        },
        "storeHistory" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "SearchAccountRequest" : {
      "type" : "object",
      "properties" : {
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "quickFilter" : {
          "readOnly" : true,
          "type" : "string"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "SearchBusPollRequest" : {
      "type" : "object",
      "properties" : {
        "applicationInstanceId" : {
          "readOnly" : true,
          "type" : "string"
        },
        "searchRequests" : {
          "items" : {
            "$ref" : "#/definitions/SearchRequest",
            "originalRef" : "SearchRequest"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "SearchRequest" : {
      "type" : "object",
      "required" : [ "dateTimeLocale", "incremental", "key", "query", "resultRequests" ],
      "properties" : {
        "dateTimeLocale" : {
          "description" : "The locale to use when formatting date values in the search results. The value is the string form of a java.time.ZoneId",
          "type" : "string"
        },
        "incremental" : {
          "description" : "If true the response will contain all results found so far, typically no results on the first request. Future requests for the same query key may return more results. Intended for use on longer running searches to allow partial result sets to be returned as soon as they are available rather than waiting for the full result set.",
          "type" : "boolean"
        },
        "key" : {
          "$ref" : "#/definitions/QueryKey",
          "originalRef" : "QueryKey"
        },
        "query" : {
          "$ref" : "#/definitions/Query",
          "originalRef" : "Query"
        },
        "resultRequests" : {
          "items" : {
            "$ref" : "#/definitions/ResultRequest",
            "originalRef" : "ResultRequest",
            "xml" : {
              "name" : "resultRequest"
            }
          },
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "timeout" : {
          "description" : "Set the maximum time (in ms) for the server to wait for a complete result set. The timeout applies to both incremental and non incremental queries, though the behaviour is slightly different. The timeout will make the server wait for which ever comes first out of the query completing or the timeout period being reached. If no value is supplied then for an incremental query a default value of 0 will be used (i.e. returning immediately) and for a non-incremental query the server's default timeout period will be used. For an incremental query, if the query has not completed by the end of the timeout period, it will return the currently know results with complete=false, however for a non-incremental query it will return no results, complete=false and details of the timeout in the error field",
          "format" : "int64",
          "type" : "integer"
        }
      },
      "description" : "A request for new search or a follow up request for more data for an existing iterative search",
      "xml" : {
        "name" : "searchRequest"
      }
    },
    "SearchResponse" : {
      "type" : "object",
      "required" : [ "highlights" ],
      "properties" : {
        "complete" : {
          "description" : "True if the query has returned all known results",
          "readOnly" : true,
          "type" : "boolean"
        },
        "errors" : {
          "description" : "A list of errors that occurred in running the query",
          "items" : {
            "type" : "string",
            "xml" : {
              "name" : "error"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "highlights" : {
          "description" : "A list of strings to highlight in the UI that should correlate with the search query.",
          "items" : {
            "type" : "string",
            "xml" : {
              "name" : "highlight"
            }
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        },
        "results" : {
          "items" : {
            "$ref" : "#/definitions/Result",
            "originalRef" : "Result"
          },
          "readOnly" : true,
          "type" : "array",
          "xml" : {
            "wrapped" : true
          }
        }
      },
      "description" : "The response to a search request, that may or may not contain results. The results may only be a partial set if an iterative screech was requested",
      "xml" : {
        "name" : "searchResponse"
      }
    },
    "SearchTokenRequest" : {
      "type" : "object",
      "properties" : {
        "pageRequest" : {
          "$ref" : "#/definitions/PageRequest",
          "originalRef" : "PageRequest"
        },
        "quickFilter" : {
          "readOnly" : true,
          "type" : "string"
        },
        "sortList" : {
          "items" : {
            "$ref" : "#/definitions/Sort",
            "originalRef" : "Sort"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "Selection" : {
      "type" : "object",
      "properties" : {
        "matchAll" : {
          "type" : "boolean"
        },
        "set" : {
          "items" : {
            "type" : "object"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "SelectionIndexShardStatus" : {
      "type" : "object",
      "properties" : {
        "matchAll" : {
          "type" : "boolean"
        },
        "set" : {
          "items" : {
            "enum" : [ "CLOSED", "OPEN", "CLOSING", "OPENING", "NEW", "DELETED", "CORRUPT" ],
            "type" : "string"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "SelectionInteger" : {
      "type" : "object",
      "properties" : {
        "matchAll" : {
          "type" : "boolean"
        },
        "set" : {
          "items" : {
            "format" : "int32",
            "type" : "integer"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "SelectionLong" : {
      "type" : "object",
      "properties" : {
        "matchAll" : {
          "type" : "boolean"
        },
        "set" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "SelectionString" : {
      "type" : "object",
      "properties" : {
        "matchAll" : {
          "type" : "boolean"
        },
        "set" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "SelectionVolumeUseStatus" : {
      "type" : "object",
      "properties" : {
        "matchAll" : {
          "type" : "boolean"
        },
        "set" : {
          "items" : {
            "enum" : [ "ACTIVE", "INACTIVE", "CLOSED" ],
            "type" : "string"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      }
    },
    "SessionDetails" : {
      "type" : "object",
      "properties" : {
        "createMs" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "lastAccessedAgent" : {
          "readOnly" : true,
          "type" : "string"
        },
        "lastAccessedMs" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "nodeName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "userName" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "SessionInfo" : {
      "type" : "object",
      "properties" : {
        "buildInfo" : {
          "$ref" : "#/definitions/BuildInfo",
          "originalRef" : "BuildInfo",
          "readOnly" : true
        },
        "nodeName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "userName" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "SetAssignedToRequest" : {
      "type" : "object",
      "properties" : {
        "annotationIdList" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "assignedTo" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "SetStatusRequest" : {
      "type" : "object",
      "properties" : {
        "annotationIdList" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "status" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "SharedElementData" : {
      "type" : "object",
      "properties" : {
        "codeIndicators" : {
          "$ref" : "#/definitions/Indicators",
          "originalRef" : "Indicators",
          "readOnly" : true
        },
        "formatInput" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "formatOutput" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "input" : {
          "readOnly" : true,
          "type" : "string"
        },
        "output" : {
          "readOnly" : true,
          "type" : "string"
        },
        "outputIndicators" : {
          "$ref" : "#/definitions/Indicators",
          "originalRef" : "Indicators",
          "readOnly" : true
        }
      }
    },
    "SharedStepData" : {
      "type" : "object",
      "properties" : {
        "elementMap" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/SharedElementData",
            "originalRef" : "SharedElementData"
          },
          "readOnly" : true,
          "type" : "object"
        },
        "sourceLocation" : {
          "$ref" : "#/definitions/SourceLocation",
          "originalRef" : "SourceLocation",
          "readOnly" : true
        }
      }
    },
    "Size" : {
      "type" : "object",
      "properties" : {
        "height" : {
          "format" : "int32",
          "type" : "integer"
        },
        "width" : {
          "format" : "int32",
          "type" : "integer"
        }
      },
      "xml" : {
        "name" : "size"
      }
    },
    "SolrConnectionConfig" : {
      "type" : "object",
      "properties" : {
        "instanceType" : {
          "enum" : [ "SINGLE_NOOE", "SOLR_CLOUD" ],
          "type" : "string"
        },
        "solrUrls" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "useZk" : {
          "type" : "boolean"
        },
        "zkHosts" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "zkPath" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "connection"
      }
    },
    "SolrIndexDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "collection" : {
          "type" : "string"
        },
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "deletedFields" : {
          "items" : {
            "$ref" : "#/definitions/SolrIndexField",
            "originalRef" : "SolrIndexField"
          },
          "type" : "array"
        },
        "description" : {
          "type" : "string"
        },
        "fields" : {
          "items" : {
            "$ref" : "#/definitions/SolrIndexField",
            "originalRef" : "SolrIndexField"
          },
          "type" : "array"
        },
        "name" : {
          "type" : "string"
        },
        "retentionExpression" : {
          "$ref" : "#/definitions/ExpressionOperator",
          "originalRef" : "ExpressionOperator"
        },
        "solrConnectionConfig" : {
          "$ref" : "#/definitions/SolrConnectionConfig",
          "originalRef" : "SolrConnectionConfig"
        },
        "solrSynchState" : {
          "$ref" : "#/definitions/SolrSynchState",
          "originalRef" : "SolrSynchState"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "SolrIndexField" : {
      "type" : "object",
      "properties" : {
        "defaultValue" : {
          "type" : "string"
        },
        "docValues" : {
          "type" : "boolean"
        },
        "fieldName" : {
          "type" : "string"
        },
        "fieldType" : {
          "type" : "string"
        },
        "fieldUse" : {
          "enum" : [ "ID", "BOOLEAN_FIELD", "INTEGER_FIELD", "LONG_FIELD", "FLOAT_FIELD", "DOUBLE_FIELD", "DATE_FIELD", "FIELD", "NUMERIC_FIELD" ],
          "type" : "string"
        },
        "indexed" : {
          "type" : "boolean"
        },
        "multiValued" : {
          "type" : "boolean"
        },
        "omitNorms" : {
          "type" : "boolean"
        },
        "omitPositions" : {
          "type" : "boolean"
        },
        "omitTermFreqAndPositions" : {
          "type" : "boolean"
        },
        "required" : {
          "type" : "boolean"
        },
        "sortMissingFirst" : {
          "type" : "boolean"
        },
        "sortMissingLast" : {
          "type" : "boolean"
        },
        "stored" : {
          "type" : "boolean"
        },
        "supportedConditions" : {
          "items" : {
            "enum" : [ "CONTAINS", "EQUALS", "GREATER_THAN", "GREATER_THAN_OR_EQUAL_TO", "LESS_THAN", "LESS_THAN_OR_EQUAL_TO", "BETWEEN", "IN", "IN_DICTIONARY", "IN_FOLDER", "IS_DOC_REF", "IS_NULL", "IS_NOT_NULL" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "termOffsets" : {
          "type" : "boolean"
        },
        "termPayloads" : {
          "type" : "boolean"
        },
        "termPositions" : {
          "type" : "boolean"
        },
        "termVectors" : {
          "type" : "boolean"
        },
        "uninvertible" : {
          "type" : "boolean"
        }
      }
    },
    "SolrSynchState" : {
      "type" : "object",
      "properties" : {
        "lastSynchronized" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "messages" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "Sort" : {
      "type" : "object",
      "properties" : {
        "desc" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "id" : {
          "readOnly" : true,
          "type" : "string"
        },
        "ignoreCase" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "SourceConfig" : {
      "type" : "object",
      "properties" : {
        "maxCharactersInPreviewFetch" : {
          "description" : "The maximum number of characters of data to display in the Data Preview pane.",
          "format" : "int64",
          "minimum" : 1,
          "type" : "integer"
        },
        "maxCharactersPerFetch" : {
          "description" : "The maximum number of characters of data to display in the Source View editor at at time.",
          "format" : "int64",
          "minimum" : 1,
          "type" : "integer"
        },
        "maxCharactersToCompleteLine" : {
          "description" : "When displaying multi-line data in the Data Preview or Source views, the viewer will attempt to always show complete lines. It will go past the requested range by up to this many characters in order to complete the line.",
          "format" : "int64",
          "minimum" : 0,
          "type" : "integer"
        }
      }
    },
    "SourceLocation" : {
      "type" : "object",
      "properties" : {
        "childType" : {
          "readOnly" : true,
          "type" : "string"
        },
        "dataRange" : {
          "$ref" : "#/definitions/DataRange",
          "originalRef" : "DataRange",
          "readOnly" : true
        },
        "highlight" : {
          "$ref" : "#/definitions/TextRange",
          "originalRef" : "TextRange",
          "readOnly" : true
        },
        "id" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "partNo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "segmentNo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "truncateToWholeLines" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "SplashConfig" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "description" : "The HTML to display in the splash screen.",
          "type" : "string"
        },
        "enabled" : {
          "description" : "If you would like users to see a splash screen on login.",
          "type" : "boolean"
        },
        "title" : {
          "description" : "The title of the splash screen popup.",
          "type" : "string"
        },
        "version" : {
          "description" : "The version of the splash screen message.",
          "type" : "string"
        }
      }
    },
    "SplitLayoutConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/LayoutConfig",
        "originalRef" : "LayoutConfig"
      }, {
        "type" : "object",
        "properties" : {
          "children" : {
            "items" : {
              "$ref" : "#/definitions/LayoutConfig",
              "originalRef" : "LayoutConfig"
            },
            "readOnly" : true,
            "type" : "array",
            "xml" : {
              "wrapped" : true
            }
          },
          "dimension" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "preferredSize" : {
            "$ref" : "#/definitions/Size",
            "originalRef" : "Size",
            "readOnly" : true
          }
        },
        "xml" : {
          "name" : "splitLayout"
        }
      } ]
    },
    "StatisticField" : {
      "type" : "object",
      "properties" : {
        "fieldName" : {
          "type" : "string"
        }
      }
    },
    "StatisticStoreDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "config" : {
          "$ref" : "#/definitions/StatisticsDataSourceData",
          "originalRef" : "StatisticsDataSourceData"
        },
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "precision" : {
          "format" : "int64",
          "type" : "integer"
        },
        "rollUpType" : {
          "enum" : [ "NONE", "ALL", "CUSTOM" ],
          "type" : "string"
        },
        "statisticType" : {
          "enum" : [ "COUNT", "VALUE" ],
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "StatisticsDataSourceData" : {
      "type" : "object",
      "properties" : {
        "customRollUpMasks" : {
          "items" : {
            "$ref" : "#/definitions/CustomRollUpMask",
            "originalRef" : "CustomRollUpMask"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "fields" : {
          "items" : {
            "$ref" : "#/definitions/StatisticField",
            "originalRef" : "StatisticField"
          },
          "type" : "array"
        }
      }
    },
    "StatisticsDataSourceFieldChangeRequest" : {
      "type" : "object",
      "properties" : {
        "newStatisticsDataSourceData" : {
          "$ref" : "#/definitions/StatisticsDataSourceData",
          "originalRef" : "StatisticsDataSourceData",
          "readOnly" : true
        },
        "oldStatisticsDataSourceData" : {
          "$ref" : "#/definitions/StatisticsDataSourceData",
          "originalRef" : "StatisticsDataSourceData",
          "readOnly" : true
        }
      }
    },
    "StepLocation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "partNo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "recordNo" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        }
      }
    },
    "SteppingFilterSettings" : {
      "type" : "object",
      "properties" : {
        "filters" : {
          "items" : {
            "$ref" : "#/definitions/XPathFilter",
            "originalRef" : "XPathFilter"
          },
          "type" : "array"
        },
        "skipToOutput" : {
          "enum" : [ "NOT_EMPTY", "EMPTY" ],
          "type" : "string"
        },
        "skipToSeverity" : {
          "enum" : [ "INFO", "WARNING", "ERROR", "FATAL_ERROR" ],
          "type" : "string"
        }
      }
    },
    "SteppingResult" : {
      "type" : "object",
      "properties" : {
        "currentStreamOffset" : {
          "format" : "int32",
          "type" : "integer"
        },
        "foundRecord" : {
          "type" : "boolean"
        },
        "generalErrors" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "stepData" : {
          "$ref" : "#/definitions/SharedStepData",
          "originalRef" : "SharedStepData"
        },
        "stepFilterMap" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/SteppingFilterSettings",
            "originalRef" : "SteppingFilterSettings"
          },
          "type" : "object"
        },
        "stepLocation" : {
          "$ref" : "#/definitions/StepLocation",
          "originalRef" : "StepLocation"
        }
      }
    },
    "StoredError" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Marker",
        "originalRef" : "Marker"
      }, {
        "type" : "object",
        "properties" : {
          "elementId" : {
            "readOnly" : true,
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/definitions/Location",
            "originalRef" : "Location",
            "readOnly" : true
          },
          "message" : {
            "readOnly" : true,
            "type" : "string"
          },
          "severity" : {
            "enum" : [ "INFO", "WARNING", "ERROR", "FATAL_ERROR" ],
            "readOnly" : true,
            "type" : "string"
          }
        }
      } ]
    },
    "StoredQuery" : {
      "type" : "object",
      "properties" : {
        "componentId" : {
          "type" : "string"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "dashboardUuid" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "favourite" : {
          "type" : "boolean"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "query" : {
          "$ref" : "#/definitions/Query",
          "originalRef" : "Query"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "StreamLocation" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Location",
        "originalRef" : "Location"
      }, {
        "type" : "object",
        "properties" : {
          "colNo" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "lineNo" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "streamNo" : {
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          }
        }
      } ]
    },
    "StreamingOutput" : {
      "type" : "object"
    },
    "StringCriteria" : {
      "type" : "object",
      "properties" : {
        "caseInsensitive" : {
          "type" : "boolean"
        },
        "matchNull" : {
          "type" : "boolean"
        },
        "matchStyle" : {
          "enum" : [ "Wild", "WildStart", "WildEnd", "WildStartAndEnd" ],
          "type" : "string"
        },
        "string" : {
          "type" : "string"
        },
        "stringUpper" : {
          "type" : "string"
        }
      }
    },
    "StroomDuration" : {
      "type" : "object"
    },
    "StroomStatsStoreDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "config" : {
          "$ref" : "#/definitions/StroomStatsStoreEntityData",
          "originalRef" : "StroomStatsStoreEntityData"
        },
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "precision" : {
          "enum" : [ "SECOND", "MINUTE", "HOUR", "DAY", "FOREVER" ],
          "type" : "string"
        },
        "rollUpType" : {
          "enum" : [ "NONE", "ALL", "CUSTOM" ],
          "type" : "string"
        },
        "statisticType" : {
          "enum" : [ "COUNT", "VALUE" ],
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "StroomStatsStoreEntityData" : {
      "type" : "object",
      "properties" : {
        "customRollUpMasks" : {
          "items" : {
            "$ref" : "#/definitions/CustomRollUpMask",
            "originalRef" : "CustomRollUpMask"
          },
          "type" : "array",
          "uniqueItems" : true
        },
        "fields" : {
          "items" : {
            "$ref" : "#/definitions/StatisticField",
            "originalRef" : "StatisticField"
          },
          "type" : "array"
        }
      }
    },
    "StroomStatsStoreFieldChangeRequest" : {
      "type" : "object",
      "properties" : {
        "newEntityData" : {
          "$ref" : "#/definitions/StroomStatsStoreEntityData",
          "originalRef" : "StroomStatsStoreEntityData",
          "readOnly" : true
        },
        "oldEntityData" : {
          "$ref" : "#/definitions/StroomStatsStoreEntityData",
          "originalRef" : "StroomStatsStoreEntityData",
          "readOnly" : true
        }
      }
    },
    "Summary" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Marker",
        "originalRef" : "Marker"
      }, {
        "type" : "object",
        "properties" : {
          "count" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "expander" : {
            "$ref" : "#/definitions/Expander",
            "originalRef" : "Expander",
            "readOnly" : true
          },
          "severity" : {
            "enum" : [ "INFO", "WARNING", "ERROR", "FATAL_ERROR" ],
            "readOnly" : true,
            "type" : "string"
          },
          "total" : {
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        }
      } ]
    },
    "SystemInfoResult" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "description" : {
          "readOnly" : true,
          "type" : "string"
        },
        "details" : {
          "additionalProperties" : {
            "type" : "object"
          },
          "readOnly" : true,
          "type" : "object"
        },
        "name" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "TabConfig" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "readOnly" : true,
          "type" : "string"
        },
        "visible" : {
          "type" : "boolean"
        }
      },
      "xml" : {
        "name" : "tab"
      }
    },
    "TabLayoutConfig" : {
      "allOf" : [ {
        "$ref" : "#/definitions/LayoutConfig",
        "originalRef" : "LayoutConfig"
      }, {
        "type" : "object",
        "properties" : {
          "preferredSize" : {
            "$ref" : "#/definitions/Size",
            "originalRef" : "Size",
            "readOnly" : true
          },
          "selected" : {
            "format" : "int32",
            "type" : "integer"
          },
          "tabs" : {
            "items" : {
              "$ref" : "#/definitions/TabConfig",
              "originalRef" : "TabConfig"
            },
            "type" : "array",
            "xml" : {
              "wrapped" : true
            }
          }
        },
        "xml" : {
          "name" : "tabLayout"
        }
      } ]
    },
    "TableComponentSettings" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComponentSettings",
        "originalRef" : "ComponentSettings"
      }, {
        "type" : "object",
        "required" : [ "conditionalFormattingRules", "fields", "modelVersion", "queryId" ],
        "properties" : {
          "conditionalFormattingRules" : {
            "items" : {
              "$ref" : "#/definitions/ConditionalFormattingRule",
              "originalRef" : "ConditionalFormattingRule"
            },
            "type" : "array"
          },
          "extractValues" : {
            "description" : "TODO",
            "readOnly" : true,
            "type" : "boolean"
          },
          "extractionPipeline" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef",
            "readOnly" : true
          },
          "fields" : {
            "items" : {
              "$ref" : "#/definitions/Field",
              "originalRef" : "Field"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "maxResults" : {
            "description" : "Defines the maximum number of results to return at each grouping level, e.g. '1000,10,1' means 1000 results at group level 0, 10 at level 1 and 1 at level 2. In the absence of this field system defaults will apply",
            "example" : "1000,10,1",
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "modelVersion" : {
            "type" : "string"
          },
          "queryId" : {
            "description" : "TODO",
            "readOnly" : true,
            "type" : "string"
          },
          "showDetail" : {
            "description" : "When grouping is used a value of true indicates that the results will include the full detail of any results aggregated into a group as well as their aggregates. A value of false will only include the aggregated values for each group. Defaults to false.",
            "readOnly" : true,
            "type" : "boolean"
          }
        }
      } ]
    },
    "TableResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Result",
        "originalRef" : "Result"
      }, {
        "type" : "object",
        "required" : [ "fields", "resultRange", "rows" ],
        "properties" : {
          "fields" : {
            "items" : {
              "$ref" : "#/definitions/Field",
              "originalRef" : "Field"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "resultRange" : {
            "$ref" : "#/definitions/OffsetRange",
            "originalRef" : "OffsetRange",
            "readOnly" : true
          },
          "rows" : {
            "items" : {
              "$ref" : "#/definitions/Row",
              "originalRef" : "Row"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "totalResults" : {
            "description" : "The total number of results in this result set",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "description" : "Object for describing a set of results in a table form that supports grouped data"
      } ]
    },
    "TableResultRequest" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComponentResultRequest",
        "originalRef" : "ComponentResultRequest"
      }, {
        "type" : "object",
        "properties" : {
          "openGroups" : {
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "requestedRange" : {
            "$ref" : "#/definitions/OffsetRange",
            "originalRef" : "OffsetRange",
            "readOnly" : true
          },
          "tableSettings" : {
            "$ref" : "#/definitions/TableSettings",
            "originalRef" : "TableSettings",
            "readOnly" : true
          }
        }
      } ]
    },
    "TableSettings" : {
      "type" : "object",
      "required" : [ "conditionalFormattingRules", "fields", "modelVersion", "queryId" ],
      "properties" : {
        "conditionalFormattingRules" : {
          "items" : {
            "$ref" : "#/definitions/ConditionalFormattingRule",
            "originalRef" : "ConditionalFormattingRule"
          },
          "type" : "array"
        },
        "extractValues" : {
          "description" : "TODO",
          "readOnly" : true,
          "type" : "boolean"
        },
        "extractionPipeline" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef",
          "readOnly" : true
        },
        "fields" : {
          "items" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "maxResults" : {
          "description" : "Defines the maximum number of results to return at each grouping level, e.g. '1000,10,1' means 1000 results at group level 0, 10 at level 1 and 1 at level 2. In the absence of this field system defaults will apply",
          "example" : "1000,10,1",
          "items" : {
            "format" : "int32",
            "type" : "integer"
          },
          "readOnly" : true,
          "type" : "array"
        },
        "modelVersion" : {
          "type" : "string"
        },
        "queryId" : {
          "description" : "TODO",
          "readOnly" : true,
          "type" : "string"
        },
        "showDetail" : {
          "description" : "When grouping is used a value of true indicates that the results will include the full detail of any results aggregated into a group as well as their aggregates. A value of false will only include the aggregated values for each group. Defaults to false.",
          "readOnly" : true,
          "type" : "boolean"
        }
      },
      "description" : "An object to describe how the query results should be returned, including which fields should be included and what sorting, grouping, filtering, limiting, etc. should be applied"
    },
    "TaskId" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentId" : {
          "$ref" : "#/definitions/TaskId",
          "originalRef" : "TaskId"
        }
      }
    },
    "TaskProgress" : {
      "type" : "object",
      "properties" : {
        "expander" : {
          "$ref" : "#/definitions/Expander",
          "originalRef" : "Expander"
        },
        "filterMatchState" : {
          "enum" : [ "MATCHED", "NOT_MATCHED" ],
          "type" : "string"
        },
        "id" : {
          "$ref" : "#/definitions/TaskId",
          "originalRef" : "TaskId"
        },
        "nodeName" : {
          "type" : "string"
        },
        "submitTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "taskInfo" : {
          "type" : "string"
        },
        "taskName" : {
          "type" : "string"
        },
        "threadName" : {
          "type" : "string"
        },
        "timeNowMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "userName" : {
          "type" : "string"
        }
      }
    },
    "TaskProgressResponse" : {
      "type" : "object",
      "properties" : {
        "pageResponse" : {
          "$ref" : "#/definitions/PageResponse",
          "originalRef" : "PageResponse",
          "readOnly" : true
        },
        "values" : {
          "items" : {
            "$ref" : "#/definitions/TaskProgress",
            "originalRef" : "TaskProgress"
          },
          "readOnly" : true,
          "type" : "array"
        }
      }
    },
    "TerminateTaskProgressRequest" : {
      "type" : "object",
      "properties" : {
        "criteria" : {
          "$ref" : "#/definitions/FindTaskCriteria",
          "originalRef" : "FindTaskCriteria",
          "readOnly" : true
        },
        "kill" : {
          "readOnly" : true,
          "type" : "boolean"
        }
      }
    },
    "TextComponentSettings" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComponentSettings",
        "originalRef" : "ComponentSettings"
      }, {
        "type" : "object",
        "properties" : {
          "colFromField" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field",
            "readOnly" : true
          },
          "colToField" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field",
            "readOnly" : true
          },
          "lineFromField" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field",
            "readOnly" : true
          },
          "lineToField" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field",
            "readOnly" : true
          },
          "modelVersion" : {
            "readOnly" : true,
            "type" : "string"
          },
          "partNoField" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field",
            "readOnly" : true
          },
          "pipeline" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef",
            "readOnly" : true
          },
          "recordNoField" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field",
            "readOnly" : true
          },
          "showAsHtml" : {
            "readOnly" : true,
            "type" : "boolean"
          },
          "showStepping" : {
            "readOnly" : true,
            "type" : "boolean"
          },
          "streamIdField" : {
            "$ref" : "#/definitions/Field",
            "originalRef" : "Field",
            "readOnly" : true
          },
          "tableId" : {
            "readOnly" : true,
            "type" : "string"
          }
        }
      } ]
    },
    "TextConverterDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "converterType" : {
          "enum" : [ "NONE", "DATA_SPLITTER", "XML_FRAGMENT" ],
          "type" : "string"
        },
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "TextField" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AbstractField",
        "originalRef" : "AbstractField"
      }, {
        "type" : "object"
      } ]
    },
    "TextRange" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location",
          "readOnly" : true
        },
        "to" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location",
          "readOnly" : true
        }
      }
    },
    "ThemeConfig" : {
      "type" : "object",
      "properties" : {
        "backgroundAttachment" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        },
        "backgroundColor" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        },
        "backgroundImage" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        },
        "backgroundOpacity" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        },
        "backgroundPosition" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        },
        "backgroundRepeat" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        },
        "labelColours" : {
          "description" : "A comma separated list of KV pairs to provide colours for labels.",
          "readOnly" : true,
          "type" : "string"
        },
        "tubeOpacity" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        },
        "tubeVisible" : {
          "description" : "GUI",
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "TimeZone" : {
      "type" : "object",
      "required" : [ "use" ],
      "properties" : {
        "id" : {
          "description" : "The id of the time zone, conforming to java.time.ZoneId",
          "example" : "GMT",
          "readOnly" : true,
          "type" : "string"
        },
        "offsetHours" : {
          "description" : "The number of hours this timezone is offset from UTC",
          "example" : -1,
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "offsetMinutes" : {
          "description" : "The number of minutes this timezone is offset from UTC",
          "example" : -30,
          "format" : "int32",
          "readOnly" : true,
          "type" : "integer"
        },
        "use" : {
          "description" : "How the time zone will be specified, e.g. from provided client 'Local' time, 'UTC', a recognised timezone 'Id' or an 'Offset' from UTC in hours and minutes.",
          "enum" : [ "LOCAL", "UTC", "ID", "OFFSET" ],
          "readOnly" : true,
          "type" : "string"
        }
      },
      "description" : "The timezone to apply to a date time value"
    },
    "Token" : {
      "type" : "object",
      "properties" : {
        "comments" : {
          "type" : "string"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "expiresOnMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "tokenType" : {
          "type" : "string"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "userEmail" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "TokenConfig" : {
      "type" : "object",
      "required" : [ "algorithm", "jwsIssuer", "timeUntilExpirationForEmailResetToken", "timeUntilExpirationForUserToken" ],
      "properties" : {
        "algorithm" : {
          "description" : "The cryptographic algorithm used in the Json Web Signatures. Valid values can be found at https://openid.net/specs/draft-jones-json-web-signature-04.html#Signing",
          "type" : "string"
        },
        "defaultApiKeyExpiryInMinutes" : {
          "description" : "The default API key expiry time",
          "format" : "int64",
          "type" : "integer"
        },
        "jwsIssuer" : {
          "description" : "The Issuer value used in Json Web Tokens.",
          "type" : "string"
        },
        "timeUntilExpirationForEmailResetToken" : {
          "$ref" : "#/definitions/StroomDuration",
          "description" : "The time before an email reset token will expire.",
          "originalRef" : "StroomDuration"
        },
        "timeUntilExpirationForUserToken" : {
          "$ref" : "#/definitions/StroomDuration",
          "description" : "The time before a user token will expire.",
          "originalRef" : "StroomDuration"
        }
      }
    },
    "TokenRequest" : {
      "type" : "object",
      "properties" : {
        "client_id" : {
          "readOnly" : true,
          "type" : "string"
        },
        "client_secret" : {
          "readOnly" : true,
          "type" : "string"
        },
        "code" : {
          "readOnly" : true,
          "type" : "string"
        },
        "grant_type" : {
          "readOnly" : true,
          "type" : "string"
        },
        "redirect_uri" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "UiConfig" : {
      "type" : "object",
      "properties" : {
        "aboutHtml" : {
          "description" : "The about message that is displayed when selecting Help -> About. The about message is in HTML format.",
          "type" : "string"
        },
        "activity" : {
          "$ref" : "#/definitions/ActivityConfig",
          "originalRef" : "ActivityConfig"
        },
        "defaultMaxResults" : {
          "description" : "The default maximum number of search results to return to the dashboard, unless the user requests lower values.",
          "type" : "string"
        },
        "helpUrl" : {
          "description" : "The URL of hosted help files.",
          "type" : "string"
        },
        "htmlTitle" : {
          "description" : "The title to use for the application in the browser.",
          "type" : "string"
        },
        "maintenanceMessage" : {
          "description" : "Provide a warning message to users about an outage or other significant event.",
          "type" : "string"
        },
        "namePattern" : {
          "description" : "The regex pattern for entity names.",
          "type" : "string"
        },
        "oncontextmenu" : {
          "description" : "Determines the behaviour of the browser built-in context menu. This property is for developer use only. Set to 'return false;' to see Stroom's context menu. Set to 'return true;' to see the standard browser menu.",
          "pattern" : "^return (true|false);$",
          "type" : "string"
        },
        "process" : {
          "$ref" : "#/definitions/ProcessConfig",
          "originalRef" : "ProcessConfig"
        },
        "query" : {
          "$ref" : "#/definitions/QueryConfig",
          "originalRef" : "QueryConfig"
        },
        "source" : {
          "$ref" : "#/definitions/SourceConfig",
          "originalRef" : "SourceConfig"
        },
        "splash" : {
          "$ref" : "#/definitions/SplashConfig",
          "originalRef" : "SplashConfig"
        },
        "theme" : {
          "$ref" : "#/definitions/ThemeConfig",
          "originalRef" : "ThemeConfig"
        },
        "uiPreferences" : {
          "$ref" : "#/definitions/UiPreferences",
          "originalRef" : "UiPreferences"
        },
        "url" : {
          "$ref" : "#/definitions/UrlConfig",
          "originalRef" : "UrlConfig"
        },
        "welcomeHtml" : {
          "description" : "The welcome message that is displayed in the welcome tab when logging in to Stroom. The welcome message is in HTML format.",
          "type" : "string"
        }
      }
    },
    "UiPreferences" : {
      "type" : "object",
      "properties" : {
        "dateFormat" : {
          "description" : "The date format to use in the UI",
          "type" : "string"
        }
      }
    },
    "UpdateAccountRequest" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "$ref" : "#/definitions/Account",
          "originalRef" : "Account",
          "readOnly" : true
        },
        "confirmPassword" : {
          "readOnly" : true,
          "type" : "string"
        },
        "password" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "UploadDataRequest" : {
      "type" : "object",
      "properties" : {
        "effectiveMs" : {
          "format" : "int64",
          "readOnly" : true,
          "type" : "integer"
        },
        "feedName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "fileName" : {
          "readOnly" : true,
          "type" : "string"
        },
        "key" : {
          "$ref" : "#/definitions/ResourceKey",
          "originalRef" : "ResourceKey",
          "readOnly" : true
        },
        "metaData" : {
          "readOnly" : true,
          "type" : "string"
        },
        "streamTypeName" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "UrlConfig" : {
      "type" : "object",
      "properties" : {
        "apiKeys" : {
          "description" : "The path to the API Keys screen.",
          "type" : "string"
        },
        "changepassword" : {
          "description" : "The path to the Change Password screen.",
          "type" : "string"
        },
        "users" : {
          "description" : "The path to the Users screen.",
          "type" : "string"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "group" : {
          "type" : "boolean"
        },
        "id" : {
          "format" : "int32",
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "UserAndPermissions" : {
      "type" : "object",
      "properties" : {
        "permissions" : {
          "items" : {
            "type" : "string"
          },
          "readOnly" : true,
          "type" : "array",
          "uniqueItems" : true
        },
        "userId" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "ValidateExpressionResult" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "readOnly" : true,
          "type" : "boolean"
        },
        "string" : {
          "readOnly" : true,
          "type" : "string"
        }
      }
    },
    "VisComponentSettings" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComponentSettings",
        "originalRef" : "ComponentSettings"
      }, {
        "type" : "object",
        "properties" : {
          "json" : {
            "readOnly" : true,
            "type" : "string"
          },
          "tableId" : {
            "readOnly" : true,
            "type" : "string"
          },
          "tableSettings" : {
            "$ref" : "#/definitions/TableComponentSettings",
            "originalRef" : "TableComponentSettings",
            "readOnly" : true
          },
          "visualisation" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef",
            "readOnly" : true
          }
        }
      } ]
    },
    "VisResult" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Result",
        "originalRef" : "Result"
      }, {
        "type" : "object",
        "properties" : {
          "dataPoints" : {
            "format" : "int64",
            "type" : "integer"
          },
          "jsonData" : {
            "readOnly" : true,
            "type" : "string"
          }
        },
        "description" : "Base object for describing a set of result data"
      } ]
    },
    "VisResultRequest" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ComponentResultRequest",
        "originalRef" : "ComponentResultRequest"
      }, {
        "type" : "object",
        "properties" : {
          "requestedRange" : {
            "$ref" : "#/definitions/OffsetRange",
            "originalRef" : "OffsetRange",
            "readOnly" : true
          },
          "visDashboardSettings" : {
            "$ref" : "#/definitions/VisComponentSettings",
            "originalRef" : "VisComponentSettings",
            "readOnly" : true
          }
        }
      } ]
    },
    "VisualisationDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "functionName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "scriptRef" : {
          "$ref" : "#/definitions/DocRef",
          "originalRef" : "DocRef"
        },
        "settings" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "XPathFilter" : {
      "type" : "object",
      "properties" : {
        "ignoreCase" : {
          "type" : "boolean"
        },
        "matchType" : {
          "enum" : [ "EXISTS", "CONTAINS", "EQUALS", "UNIQUE" ],
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "uniqueValues" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/Rec",
            "originalRef" : "Rec"
          },
          "type" : "object"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "XmlSchemaDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "deprecated" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "namespaceURI" : {
          "type" : "string"
        },
        "schemaGroup" : {
          "type" : "string"
        },
        "systemId" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    },
    "XsltDTO" : {
      "type" : "object",
      "required" : [ "name", "type", "uuid" ],
      "properties" : {
        "data" : {
          "readOnly" : true,
          "type" : "string"
        },
        "description" : {
          "readOnly" : true,
          "type" : "string"
        },
        "name" : {
          "description" : "The name for the data source",
          "example" : "MyStatistic",
          "type" : "string"
        },
        "type" : {
          "description" : "The type of the 'document' that this DocRef refers to",
          "example" : "StroomStatsStore",
          "type" : "string"
        },
        "uuid" : {
          "description" : "The unique identifier for this 'document'",
          "example" : "9f6184b4-bd78-48bc-b0cd-6e51a357f6a6",
          "type" : "string"
        }
      },
      "description" : "A class for describing a unique reference to a 'document' in stroom.  A 'document' is an entity in stroom such as a data source dictionary or pipeline.",
      "xml" : {
        "name" : "doc"
      }
    },
    "XsltDoc" : {
      "type" : "object",
      "required" : [ "createTimeMs", "updateTimeMs" ],
      "properties" : {
        "createTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "createUser" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "updateTime" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateTimeMs" : {
          "format" : "int64",
          "type" : "integer"
        },
        "updateUser" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      }
    }
  },
  "info" : {
    "contact" : {
      "name" : "Stroom",
      "url" : "https://github.com/gchq/stroom"
    },
    "description" : "Various APIs for interacting with Stroom and its data",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title" : "Stroom API",
    "version" : "v1/v2"
  },
  "paths" : {
    "/account/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/AccountResultPage",
              "originalRef" : "#/definitions/AccountResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/AccountResultPage",
              "originalRef" : "#/definitions/AccountResultPage"
            }
          }
        },
        "summary" : "Get all accounts.",
        "tags" : [ "Account" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "account",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountRequest",
            "originalRef" : "CreateAccountRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "integer",
              "format" : "int32"
            },
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        },
        "summary" : "Create an account.",
        "tags" : [ "Account" ]
      }
    },
    "/account/v1/search" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "search",
        "parameters" : [ {
          "description" : "account",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchAccountRequest",
            "originalRef" : "SearchAccountRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/AccountResultPage",
              "originalRef" : "#/definitions/AccountResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/AccountResultPage",
              "originalRef" : "#/definitions/AccountResultPage"
            }
          }
        },
        "summary" : "Search for an account by email address.",
        "tags" : [ "Account" ]
      }
    },
    "/account/v1/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Account",
              "originalRef" : "#/definitions/Account"
            },
            "schema" : {
              "$ref" : "#/definitions/Account",
              "originalRef" : "#/definitions/Account"
            }
          }
        },
        "summary" : "Get an account by ID.",
        "tags" : [ "Account" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "account",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateAccountRequest",
            "originalRef" : "UpdateAccountRequest"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Update an account.",
        "tags" : [ "Account" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Delete an account by ID.",
        "tags" : [ "Account" ]
      }
    },
    "/activity/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Lists activities",
        "tags" : [ "activity - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            },
            "schema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            }
          }
        },
        "summary" : "Create an Activity",
        "tags" : [ "activity - v1" ]
      }
    },
    "/activity/v1/acknowledge" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "acknowledgeSplash",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AcknowledgeSplashRequest",
            "originalRef" : "AcknowledgeSplashRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Acknowledge the slash screen",
        "tags" : [ "activity - v1" ]
      }
    },
    "/activity/v1/current" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getCurrentActivity",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            },
            "schema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            }
          }
        },
        "summary" : "Gets the current activity",
        "tags" : [ "activity - v1" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setCurrentActivity",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            },
            "schema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            }
          }
        },
        "summary" : "Gets the current activity",
        "tags" : [ "activity - v1" ]
      }
    },
    "/activity/v1/fields" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "listFieldDefinitions",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Lists activity field definitions",
        "tags" : [ "activity - v1" ]
      }
    },
    "/activity/v1/validate" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "validate",
        "parameters" : [ {
          "description" : "activity",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Activity",
            "originalRef" : "Activity"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ActivityValidationResult",
              "originalRef" : "#/definitions/ActivityValidationResult"
            },
            "schema" : {
              "$ref" : "#/definitions/ActivityValidationResult",
              "originalRef" : "#/definitions/ActivityValidationResult"
            }
          }
        },
        "summary" : "Create an Activity",
        "tags" : [ "activity - v1" ]
      }
    },
    "/activity/v1/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            },
            "schema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            }
          }
        },
        "summary" : "Get an Activity",
        "tags" : [ "activity - v1" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            },
            "schema" : {
              "$ref" : "#/definitions/Activity",
              "originalRef" : "#/definitions/Activity"
            }
          }
        },
        "summary" : "Update an Activity",
        "tags" : [ "activity - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Delete an activity",
        "tags" : [ "activity - v1" ]
      }
    },
    "/annotation/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "annotationId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Gets an annotation",
        "tags" : [ "annotations - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "createEntry",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateEntryRequest",
            "originalRef" : "CreateEntryRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/AnnotationDetail",
              "originalRef" : "#/definitions/AnnotationDetail"
            },
            "schema" : {
              "$ref" : "#/definitions/AnnotationDetail",
              "originalRef" : "#/definitions/AnnotationDetail"
            }
          }
        },
        "tags" : [ "annotations - v1" ]
      }
    },
    "/annotation/v1/comment" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getComment",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Gets a list of predefined comments",
        "tags" : [ "annotations - v1" ]
      }
    },
    "/annotation/v1/link" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "link",
        "parameters" : [ {
          "description" : "eventLink",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EventLink",
            "originalRef" : "EventLink"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Links an annotation to an event",
        "tags" : [ "annotations - v1" ]
      }
    },
    "/annotation/v1/linkedEvents" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getLinkedEvents",
        "parameters" : [ {
          "name" : "annotationId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Gets a list of events linked to this annotation",
        "tags" : [ "annotations - v1" ]
      }
    },
    "/annotation/v1/setAssignedTo" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setAssignedTo",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SetAssignedToRequest",
            "originalRef" : "SetAssignedToRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Bulk action to set the assignment for several annotations",
        "tags" : [ "annotations - v1" ]
      }
    },
    "/annotation/v1/setStatus" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setStatus",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SetStatusRequest",
            "originalRef" : "SetStatusRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Bulk action to set the status for several annotations",
        "tags" : [ "annotations - v1" ]
      }
    },
    "/annotation/v1/status" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getStatus",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Gets a list of allowed statuses",
        "tags" : [ "annotations - v1" ]
      }
    },
    "/annotation/v1/unlink" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "unlink",
        "parameters" : [ {
          "description" : "eventLink",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EventLink",
            "originalRef" : "EventLink"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Unlinks an annotation from an event",
        "tags" : [ "annotations - v1" ]
      }
    },
    "/appPermissions/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Application Permissions API",
        "operationId" : "getAllPermissionNames",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/appPermissions/v1/byName/{userName}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Application Permissions API",
        "operationId" : "getPermissionNamesForUserName",
        "parameters" : [ {
          "name" : "userName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/appPermissions/v1/{userUuid}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Application Permissions API",
        "operationId" : "getPermissionNamesForUser",
        "parameters" : [ {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/appPermissions/v1/{userUuid}/{permission}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Application Permissions API",
        "operationId" : "addPermission",
        "parameters" : [ {
          "name" : "permission",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "application permissions - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Application Permissions API",
        "operationId" : "removePermission",
        "parameters" : [ {
          "name" : "permission",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/authentication/v1/logout" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "redirect_uri",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Log a user out of their session",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/needsPasswordChange" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "needsPasswordChange",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Check if a user's password needs changing.",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/noauth/changePassword" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "changePassword",
        "parameters" : [ {
          "description" : "changePasswordRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ChangePasswordRequest",
            "originalRef" : "ChangePasswordRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Change a user's password.",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/noauth/confirmPassword" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "confirmPassword",
        "parameters" : [ {
          "description" : "confirmPasswordRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfirmPasswordRequest",
            "originalRef" : "ConfirmPasswordRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Confirm an authenticated users current password.",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/noauth/fetchPasswordPolicy" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "fetchPasswordPolicy",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/PasswordPolicyConfig",
              "originalRef" : "#/definitions/PasswordPolicyConfig"
            },
            "schema" : {
              "$ref" : "#/definitions/PasswordPolicyConfig",
              "originalRef" : "#/definitions/PasswordPolicyConfig"
            }
          }
        },
        "summary" : "Get the password policy",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/noauth/getAuthenticationState" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "getAuthenticationState",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/AuthenticationState",
              "originalRef" : "#/definitions/AuthenticationState"
            },
            "schema" : {
              "$ref" : "#/definitions/AuthenticationState",
              "originalRef" : "#/definitions/AuthenticationState"
            }
          }
        },
        "summary" : "Get the current authentication state",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/noauth/login" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "login",
        "parameters" : [ {
          "description" : "Credentials",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LoginRequest",
            "originalRef" : "LoginRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Handle a login request made using username and password credentials.",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/noauth/reset/{email}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "resetEmail",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Reset a user account using an email address.",
        "tags" : [ "Authentication" ]
      }
    },
    "/authentication/v1/resetPassword" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authentication API",
        "operationId" : "resetPassword",
        "parameters" : [ {
          "description" : "changePasswordRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResetPasswordRequest",
            "originalRef" : "ResetPasswordRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Reset an authenticated user's password.",
        "tags" : [ "Authentication" ]
      }
    },
    "/authorisation/v1/createUser" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "createUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/authorisation/v1/hasPermission" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "hasPermission",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/authorisation/v1/isAuthorised" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "isAuthorised",
        "parameters" : [ {
          "description" : "permission",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Submit a request to verify if the user has the requested permission on a 'document'",
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/authorisation/v1/setUserStatus" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "setUserStatus",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/cache/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Lists caches",
        "tags" : [ "cache - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "clear",
        "parameters" : [ {
          "name" : "cacheName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "integer",
              "format" : "int64"
            },
            "schema" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        },
        "summary" : "Clears a cache",
        "tags" : [ "cache - v1" ]
      }
    },
    "/cache/v1/info" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "info",
        "parameters" : [ {
          "name" : "cacheName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/CacheInfo",
              "originalRef" : "#/definitions/CacheInfo"
            },
            "schema" : {
              "$ref" : "#/definitions/CacheInfo",
              "originalRef" : "#/definitions/CacheInfo"
            }
          }
        },
        "summary" : "Gets cache info",
        "tags" : [ "cache - v1" ]
      }
    },
    "/cluster/lock/v1/keepALive/{nodeName}" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "keepLockAlive",
        "parameters" : [ {
          "description" : "key",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterLockKey",
            "originalRef" : "ClusterLockKey"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Keep a lock alive",
        "tags" : [ "clusterlock - v1" ]
      }
    },
    "/cluster/lock/v1/release/{nodeName}" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "releaseLock",
        "parameters" : [ {
          "description" : "key",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterLockKey",
            "originalRef" : "ClusterLockKey"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Release a lock",
        "tags" : [ "clusterlock - v1" ]
      }
    },
    "/cluster/lock/v1/try/{nodeName}" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "tryLock",
        "parameters" : [ {
          "description" : "key",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterLockKey",
            "originalRef" : "ClusterLockKey"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Try to lock",
        "tags" : [ "clusterlock - v1" ]
      }
    },
    "/config/v1" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "configProperty",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfigProperty",
            "originalRef" : "ConfigProperty"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ConfigProperty",
              "originalRef" : "#/definitions/ConfigProperty"
            },
            "schema" : {
              "$ref" : "#/definitions/ConfigProperty",
              "originalRef" : "#/definitions/ConfigProperty"
            }
          }
        },
        "summary" : "Update a ConfigProperty",
        "tags" : [ "config - v1" ]
      }
    },
    "/config/v1/clusterProperties/{propertyName}/dbOverrideValue" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "configProperty",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfigProperty",
            "originalRef" : "ConfigProperty"
          }
        }, {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ConfigProperty",
              "originalRef" : "#/definitions/ConfigProperty"
            },
            "schema" : {
              "$ref" : "#/definitions/ConfigProperty",
              "originalRef" : "#/definitions/ConfigProperty"
            }
          }
        },
        "summary" : "Update a ConfigProperty",
        "tags" : [ "config - v1" ]
      }
    },
    "/config/v1/clusterProperties/{propertyName}/yamlOverrideValue/{nodeName}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getYamlValueByNodeAndName",
        "parameters" : [ {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/OverrideValueString",
              "originalRef" : "#/definitions/OverrideValueString"
            },
            "schema" : {
              "$ref" : "#/definitions/OverrideValueString",
              "originalRef" : "#/definitions/OverrideValueString"
            }
          }
        },
        "tags" : [ "config - v1" ]
      }
    },
    "/config/v1/noauth/fetchUiConfig" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchUiConfig",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/UiConfig",
              "originalRef" : "#/definitions/UiConfig"
            },
            "schema" : {
              "$ref" : "#/definitions/UiConfig",
              "originalRef" : "#/definitions/UiConfig"
            }
          }
        },
        "summary" : "Get config property",
        "tags" : [ "config - v1" ]
      }
    },
    "/config/v1/nodeProperties/{nodeName}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "listByNode",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GlobalConfigCriteria",
            "originalRef" : "GlobalConfigCriteria"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ListConfigResponse",
              "originalRef" : "#/definitions/ListConfigResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/ListConfigResponse",
              "originalRef" : "#/definitions/ListConfigResponse"
            }
          }
        },
        "tags" : [ "config - v1" ]
      }
    },
    "/config/v1/properties" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GlobalConfigCriteria",
            "originalRef" : "GlobalConfigCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ListConfigResponse",
              "originalRef" : "#/definitions/ListConfigResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/ListConfigResponse",
              "originalRef" : "#/definitions/ListConfigResponse"
            }
          }
        },
        "summary" : "TODO",
        "tags" : [ "config - v1" ]
      }
    },
    "/config/v1/properties/{propertyName}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getPropertyByName",
        "parameters" : [ {
          "name" : "propertyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ConfigProperty",
              "originalRef" : "#/definitions/ConfigProperty"
            },
            "schema" : {
              "$ref" : "#/definitions/ConfigProperty",
              "originalRef" : "#/definitions/ConfigProperty"
            }
          }
        },
        "tags" : [ "config - v1" ]
      }
    },
    "/content/v1/confirmImport" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "confirmImport",
        "parameters" : [ {
          "description" : "resourceKey",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResourceKey",
            "originalRef" : "ResourceKey"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get import confirmation state",
        "tags" : [ "content - v1" ]
      }
    },
    "/content/v1/export" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "exportContent",
        "parameters" : [ {
          "description" : "docRefs",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRefs",
            "originalRef" : "DocRefs"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Export content",
        "tags" : [ "content - v1" ]
      }
    },
    "/content/v1/fetchDependencies" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchDependencies",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DependencyCriteria",
            "originalRef" : "DependencyCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Fetch content dependencies",
        "tags" : [ "content - v1" ]
      }
    },
    "/content/v1/import" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "importContent",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ImportConfigRequest",
            "originalRef" : "ImportConfigRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Import content",
        "tags" : [ "content - v1" ]
      }
    },
    "/dashboard/v1/downloadQuery" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "downloadQuery",
        "parameters" : [ {
          "description" : "downloadQueryRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DownloadQueryRequest",
            "originalRef" : "DownloadQueryRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Download a query",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/dashboard/v1/downloadSearchResults" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "downloadSearchResults",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DownloadSearchResultsRequest",
            "originalRef" : "DownloadSearchResultsRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Download search results",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/dashboard/v1/fetchTimeZones" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchTimeZones",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Fetch time zone data from the server",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/dashboard/v1/functions" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchFunctions",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Fetch all expression functions",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/dashboard/v1/poll" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "poll",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchBusPollRequest",
            "originalRef" : "SearchBusPollRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "summary" : "Poll for new search results",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/dashboard/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DashboardDoc",
              "originalRef" : "#/definitions/DashboardDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/DashboardDoc",
              "originalRef" : "#/definitions/DashboardDoc"
            }
          }
        },
        "summary" : "Get a dashboard doc",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/dashboard/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DashboardDoc",
              "originalRef" : "#/definitions/DashboardDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/DashboardDoc",
              "originalRef" : "#/definitions/DashboardDoc"
            }
          }
        },
        "summary" : "Update a dashboard doc",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/dashboard/v1/validateExpression" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "validateExpression",
        "parameters" : [ {
          "description" : "expression",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ValidateExpressionResult",
              "originalRef" : "#/definitions/ValidateExpressionResult"
            },
            "schema" : {
              "$ref" : "#/definitions/ValidateExpressionResult",
              "originalRef" : "#/definitions/ValidateExpressionResult"
            }
          }
        },
        "summary" : "Validate an expression",
        "tags" : [ "dashboard - v1" ]
      }
    },
    "/data/v1/download" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "download",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindMetaCriteria",
            "originalRef" : "FindMetaCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Download matching data",
        "tags" : [ "data - v1" ]
      }
    },
    "/data/v1/info/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "info",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataInfoSection",
              "originalRef" : "#/definitions/DataInfoSection"
            },
            "schema" : {
              "$ref" : "#/definitions/DataInfoSection",
              "originalRef" : "#/definitions/DataInfoSection"
            }
          }
        },
        "summary" : "Find full info about a data item",
        "tags" : [ "data - v1" ]
      }
    },
    "/data/v1/upload" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "upload",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UploadDataRequest",
            "originalRef" : "UploadDataRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Upload data",
        "tags" : [ "data - v1" ]
      }
    },
    "/dataRetentionRules/v1/impactSummary" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getRetentionDeletionSummary",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataRetentionDeleteSummaryRequest",
            "originalRef" : "DataRetentionDeleteSummaryRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataRetentionDeleteSummary",
              "originalRef" : "#/definitions/DataRetentionDeleteSummary"
            },
            "schema" : {
              "$ref" : "#/definitions/DataRetentionDeleteSummary",
              "originalRef" : "#/definitions/DataRetentionDeleteSummary"
            }
          }
        },
        "summary" : "Get a summary of meta deletions with the passed data retention rules",
        "tags" : [ "dataRetentionRules - v1" ]
      }
    },
    "/dataRetentionRules/v1/impactSummary/{queryId}" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "cancelQuery",
        "parameters" : [ {
          "name" : "queryId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Delete a running query",
        "tags" : [ "dataRetentionRules - v1" ]
      }
    },
    "/dataRetentionRules/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataRetentionRules",
              "originalRef" : "#/definitions/DataRetentionRules"
            },
            "schema" : {
              "$ref" : "#/definitions/DataRetentionRules",
              "originalRef" : "#/definitions/DataRetentionRules"
            }
          }
        },
        "summary" : "Get data retention rules",
        "tags" : [ "dataRetentionRules - v1" ]
      }
    },
    "/dataRetentionRules/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "dataRetentionRules",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DataRetentionRules",
            "originalRef" : "DataRetentionRules"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataRetentionRules",
              "originalRef" : "#/definitions/DataRetentionRules"
            },
            "schema" : {
              "$ref" : "#/definitions/DataRetentionRules",
              "originalRef" : "#/definitions/DataRetentionRules"
            }
          }
        },
        "summary" : "Update data retention rules",
        "tags" : [ "dataRetentionRules - v1" ]
      }
    },
    "/dataSource/v1/fetchFields" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchFields",
        "parameters" : [ {
          "description" : "dataSourceRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Fetch data source fields",
        "tags" : [ "dataSource - v1" ]
      }
    },
    "/dbStatus/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getSystemTableStatus",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPageDBTableStatus",
              "originalRef" : "#/definitions/ResultPageDBTableStatus"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPageDBTableStatus",
              "originalRef" : "#/definitions/ResultPageDBTableStatus"
            }
          }
        },
        "summary" : "Find status of the DB",
        "tags" : [ "dbStatus - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "findSystemTableStatus",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindDBTableCriteria",
            "originalRef" : "FindDBTableCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPageDBTableStatus",
              "originalRef" : "#/definitions/ResultPageDBTableStatus"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPageDBTableStatus",
              "originalRef" : "#/definitions/ResultPageDBTableStatus"
            }
          }
        },
        "summary" : "Find status of the DB",
        "tags" : [ "dbStatus - v1" ]
      }
    },
    "/dictionary/v1/download" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "download",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Download a dictionary doc",
        "tags" : [ "dictionary - v1" ]
      }
    },
    "/dictionary/v1/export" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "exportDocument",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            },
            "schema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            }
          }
        },
        "summary" : "Submit an export request",
        "tags" : [ "dictionary - v1" ]
      }
    },
    "/dictionary/v1/import" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "importDocument",
        "parameters" : [ {
          "description" : "DocumentData",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Base64EncodedDocumentData",
            "originalRef" : "Base64EncodedDocumentData"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Submit an import request",
        "tags" : [ "dictionary - v1" ]
      }
    },
    "/dictionary/v1/list" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "listDocuments",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "summary" : "Submit a request for a list of doc refs held by this service",
        "tags" : [ "dictionary - v1" ]
      }
    },
    "/dictionary/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DictionaryDoc",
              "originalRef" : "#/definitions/DictionaryDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/DictionaryDoc",
              "originalRef" : "#/definitions/DictionaryDoc"
            }
          }
        },
        "summary" : "Get a dictionary doc",
        "tags" : [ "dictionary - v1" ]
      }
    },
    "/dictionary/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DictionaryDoc",
              "originalRef" : "#/definitions/DictionaryDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/DictionaryDoc",
              "originalRef" : "#/definitions/DictionaryDoc"
            }
          }
        },
        "summary" : "Update a dictionary doc",
        "tags" : [ "dictionary - v1" ]
      }
    },
    "/dictionary/v1/{dictionaryUuid}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "fetch",
        "parameters" : [ {
          "name" : "dictionaryUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DictionaryDTO",
              "originalRef" : "#/definitions/DictionaryDTO"
            },
            "schema" : {
              "$ref" : "#/definitions/DictionaryDTO",
              "originalRef" : "#/definitions/DictionaryDTO"
            }
          }
        },
        "tags" : [ "dictionary - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "save",
        "parameters" : [ {
          "name" : "dictionaryUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "dictionary - v1" ]
      }
    },
    "/dictionary/v2/export" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "exportDocument",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            },
            "schema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            }
          }
        },
        "summary" : "Submit an export request",
        "tags" : [ "dictionary - v2" ]
      }
    },
    "/dictionary/v2/import" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "importDocument",
        "parameters" : [ {
          "description" : "DocumentData",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Base64EncodedDocumentData",
            "originalRef" : "Base64EncodedDocumentData"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Submit an import request",
        "tags" : [ "dictionary - v2" ]
      }
    },
    "/dictionary/v2/list" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "listDocuments",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "summary" : "Submit a request for a list of doc refs held by this service",
        "tags" : [ "dictionary - v2" ]
      }
    },
    "/docPermissions/v1/forDoc/{docUuid}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Document Permissions API",
        "operationId" : "getPermissionsForDocument",
        "parameters" : [ {
          "name" : "docUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "document permissions - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Document Permissions API",
        "operationId" : "clearDocumentPermissions",
        "parameters" : [ {
          "name" : "docUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "document permissions - v1" ]
      }
    },
    "/docPermissions/v1/forDocForUser/{docUuid}/{userUuid}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Document Permissions API",
        "operationId" : "getPermissionsForDocumentForUser",
        "parameters" : [ {
          "name" : "docUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "document permissions - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Document Permissions API",
        "operationId" : "removePermissionForDocumentForUser",
        "parameters" : [ {
          "name" : "docUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "document permissions - v1" ]
      }
    },
    "/docPermissions/v1/forDocForUser/{docUuid}/{userUuid}/{permissionName}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Document Permissions API",
        "operationId" : "addPermission",
        "parameters" : [ {
          "name" : "docUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permissionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "document permissions - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Document Permissions API",
        "operationId" : "removePermission",
        "parameters" : [ {
          "name" : "docUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permissionName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "document permissions - v1" ]
      }
    },
    "/docPermissions/v1/forDocType/{docType}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Document Permissions API",
        "operationId" : "getPermissionForDocType",
        "parameters" : [ {
          "name" : "docType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "document permissions - v1" ]
      }
    },
    "/elements/v1/elementProperties" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getElementProperties",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "elements - v1" ]
      }
    },
    "/elements/v1/elements" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getElements",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "elements - v1" ]
      }
    },
    "/entityEvent/v1/{nodeName}" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fireEvent",
        "parameters" : [ {
          "description" : "entityevent",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EntityEvent",
            "originalRef" : "EntityEvent"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Sends an entity event",
        "tags" : [ "entityEvent - v1" ]
      }
    },
    "/explorer/v1/all" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getExplorerTree",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/copy" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "copyDocument",
        "parameters" : [ {
          "description" : "op",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CopyOp",
            "originalRef" : "CopyOp"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/create" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "createDocument",
        "parameters" : [ {
          "description" : "op",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateOp",
            "originalRef" : "CreateOp"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/delete" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "operationId" : "deleteDocument",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/docRefTypes" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getDocRefTypes",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/info/{type}/{uuid}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getDocInfo",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRefInfo",
              "originalRef" : "#/definitions/DocRefInfo"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRefInfo",
              "originalRef" : "#/definitions/DocRefInfo"
            }
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/move" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "operationId" : "moveDocument",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/rename" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "operationId" : "renameDocument",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v1/search" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "search",
        "parameters" : [ {
          "name" : "pageOffset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "explorer - v1" ]
      }
    },
    "/explorer/v2/copy" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "copy",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExplorerServiceCopyRequest",
            "originalRef" : "ExplorerServiceCopyRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/BulkActionResult",
              "originalRef" : "#/definitions/BulkActionResult"
            },
            "schema" : {
              "$ref" : "#/definitions/BulkActionResult",
              "originalRef" : "#/definitions/BulkActionResult"
            }
          }
        },
        "summary" : "Copy explorer items",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/create" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExplorerServiceCreateRequest",
            "originalRef" : "ExplorerServiceCreateRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Create explorer item",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/delete" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExplorerServiceDeleteRequest",
            "originalRef" : "ExplorerServiceDeleteRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/BulkActionResult",
              "originalRef" : "#/definitions/BulkActionResult"
            },
            "schema" : {
              "$ref" : "#/definitions/BulkActionResult",
              "originalRef" : "#/definitions/BulkActionResult"
            }
          }
        },
        "summary" : "Delete explorer items",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/fetchDocRefs" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchDocRefs",
        "parameters" : [ {
          "description" : "docRefs",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "DocRef"
            },
            "type" : "array"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "summary" : "Fetch document references",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/fetchDocumentTypes" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchDocumentTypes",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocumentTypes",
              "originalRef" : "#/definitions/DocumentTypes"
            },
            "schema" : {
              "$ref" : "#/definitions/DocumentTypes",
              "originalRef" : "#/definitions/DocumentTypes"
            }
          }
        },
        "summary" : "Fetch document types",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/fetchExplorerNodes" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetch",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindExplorerNodeCriteria",
            "originalRef" : "FindExplorerNodeCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FetchExplorerNodeResult",
              "originalRef" : "#/definitions/FetchExplorerNodeResult"
            },
            "schema" : {
              "$ref" : "#/definitions/FetchExplorerNodeResult",
              "originalRef" : "#/definitions/FetchExplorerNodeResult"
            }
          }
        },
        "summary" : "Fetch explorer nodes",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/fetchExplorerPermissions" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchExplorerPermissions",
        "parameters" : [ {
          "description" : "explorerNodes",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/ExplorerNode",
              "originalRef" : "ExplorerNode"
            },
            "type" : "array"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            },
            "schema" : {
              "additionalProperties" : {
                "type" : "object"
              },
              "type" : "object"
            }
          }
        },
        "summary" : "Fetch permissions for explorer items",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/info" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "info",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRefInfo",
              "originalRef" : "#/definitions/DocRefInfo"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRefInfo",
              "originalRef" : "#/definitions/DocRefInfo"
            }
          }
        },
        "summary" : "Get document info",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/move" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "move",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExplorerServiceMoveRequest",
            "originalRef" : "ExplorerServiceMoveRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/BulkActionResult",
              "originalRef" : "#/definitions/BulkActionResult"
            },
            "schema" : {
              "$ref" : "#/definitions/BulkActionResult",
              "originalRef" : "#/definitions/BulkActionResult"
            }
          }
        },
        "summary" : "Move explorer items",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/explorer/v2/rename" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "rename",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExplorerServiceRenameRequest",
            "originalRef" : "ExplorerServiceRenameRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Rename explorer items",
        "tags" : [ "explorer - v2" ]
      }
    },
    "/export/v1" : {
      "get" : {
        "operationId" : "export",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "export - v1" ]
      }
    },
    "/feed/v1/fetchSupportedEncodings" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchSupportedEncodings",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Fetch supported encodings",
        "tags" : [ "feed - v1" ]
      }
    },
    "/feed/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FeedDoc",
              "originalRef" : "#/definitions/FeedDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/FeedDoc",
              "originalRef" : "#/definitions/FeedDoc"
            }
          }
        },
        "summary" : "Get a feed doc",
        "tags" : [ "feed - v1" ]
      }
    },
    "/feed/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "xslt",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FeedDoc",
            "originalRef" : "FeedDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FeedDoc",
              "originalRef" : "#/definitions/FeedDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/FeedDoc",
              "originalRef" : "#/definitions/FeedDoc"
            }
          }
        },
        "summary" : "Update a feed doc",
        "tags" : [ "feed - v1" ]
      }
    },
    "/feedStatus/v1/getFeedStatus" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getFeedStatus",
        "parameters" : [ {
          "description" : "GetFeedStatusRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GetFeedStatusRequest",
            "originalRef" : "GetFeedStatusRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/GetFeedStatusResponse",
              "originalRef" : "#/definitions/GetFeedStatusResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/GetFeedStatusResponse",
              "originalRef" : "#/definitions/GetFeedStatusResponse"
            }
          }
        },
        "summary" : "Submit a request to get the status of a feed",
        "tags" : [ "feedStatus - v1" ]
      }
    },
    "/fsVolume/v1" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FsVolume",
              "originalRef" : "#/definitions/FsVolume"
            },
            "schema" : {
              "$ref" : "#/definitions/FsVolume",
              "originalRef" : "#/definitions/FsVolume"
            }
          }
        },
        "tags" : [ "fsVolume - v1" ]
      }
    },
    "/fsVolume/v1/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindFsVolumeCriteria",
            "originalRef" : "FindFsVolumeCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Finds volumes",
        "tags" : [ "fsVolume - v1" ]
      }
    },
    "/fsVolume/v1/rescan" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "rescan",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Rescans volumes",
        "tags" : [ "fsVolume - v1" ]
      }
    },
    "/fsVolume/v1/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FsVolume",
              "originalRef" : "#/definitions/FsVolume"
            },
            "schema" : {
              "$ref" : "#/definitions/FsVolume",
              "originalRef" : "#/definitions/FsVolume"
            }
          }
        },
        "summary" : "Get a volume",
        "tags" : [ "fsVolume - v1" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "volume",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FsVolume",
            "originalRef" : "FsVolume"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FsVolume",
              "originalRef" : "#/definitions/FsVolume"
            },
            "schema" : {
              "$ref" : "#/definitions/FsVolume",
              "originalRef" : "#/definitions/FsVolume"
            }
          }
        },
        "summary" : "Update a volume",
        "tags" : [ "fsVolume - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Delete a volume",
        "tags" : [ "fsVolume - v1" ]
      }
    },
    "/index/v1/export" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "exportDocument",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            },
            "schema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            }
          }
        },
        "summary" : "Submit an export request",
        "tags" : [ "index - v1" ]
      }
    },
    "/index/v1/import" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "importDocument",
        "parameters" : [ {
          "description" : "DocumentData",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Base64EncodedDocumentData",
            "originalRef" : "Base64EncodedDocumentData"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Submit an import request",
        "tags" : [ "index - v1" ]
      }
    },
    "/index/v1/list" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "listDocuments",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "summary" : "Submit a request for a list of doc refs held by this service",
        "tags" : [ "index - v1" ]
      }
    },
    "/index/v1/{indexUuid}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "fetch",
        "parameters" : [ {
          "name" : "indexUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "index - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "save",
        "parameters" : [ {
          "name" : "indexUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "index - v1" ]
      }
    },
    "/index/v2/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexDoc",
              "originalRef" : "#/definitions/IndexDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexDoc",
              "originalRef" : "#/definitions/IndexDoc"
            }
          }
        },
        "summary" : "Get an index doc",
        "tags" : [ "index - v2" ]
      }
    },
    "/index/v2/shard/delete" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "deleteIndexShards",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindIndexShardCriteria",
            "originalRef" : "FindIndexShardCriteria"
          }
        }, {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "integer",
              "format" : "int32"
            },
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        },
        "summary" : "Delete matching index shards",
        "tags" : [ "index - v2" ]
      }
    },
    "/index/v2/shard/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "findIndexShards",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindIndexShardCriteria",
            "originalRef" : "FindIndexShardCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Find matching index shards",
        "tags" : [ "index - v2" ]
      }
    },
    "/index/v2/shard/flush" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "flushIndexShards",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindIndexShardCriteria",
            "originalRef" : "FindIndexShardCriteria"
          }
        }, {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "integer",
              "format" : "int32"
            },
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        },
        "summary" : "Flush matching index shards",
        "tags" : [ "index - v2" ]
      }
    },
    "/index/v2/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexDoc",
              "originalRef" : "#/definitions/IndexDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexDoc",
              "originalRef" : "#/definitions/IndexDoc"
            }
          }
        },
        "summary" : "Update an index doc",
        "tags" : [ "index - v2" ]
      }
    },
    "/index/volume/v2" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IndexVolume",
            "originalRef" : "IndexVolume"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexVolume",
              "originalRef" : "#/definitions/IndexVolume"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexVolume",
              "originalRef" : "#/definitions/IndexVolume"
            }
          }
        },
        "summary" : "Creates an index volume",
        "tags" : [ "index volume - v2" ]
      }
    },
    "/index/volume/v2/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExpressionCriteria",
            "originalRef" : "ExpressionCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Finds index volumes matching request",
        "tags" : [ "index volume - v2" ]
      }
    },
    "/index/volume/v2/rescan" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "rescan",
        "parameters" : [ {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Rescans index volumes",
        "tags" : [ "index volume - v2" ]
      }
    },
    "/index/volume/v2/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexVolume",
              "originalRef" : "#/definitions/IndexVolume"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexVolume",
              "originalRef" : "#/definitions/IndexVolume"
            }
          }
        },
        "summary" : "Gets an index volume",
        "tags" : [ "index volume - v2" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "indexVolume",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IndexVolume",
            "originalRef" : "IndexVolume"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexVolume",
              "originalRef" : "#/definitions/IndexVolume"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexVolume",
              "originalRef" : "#/definitions/IndexVolume"
            }
          }
        },
        "summary" : "Updates an index volume",
        "tags" : [ "index volume - v2" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Deletes an index volume",
        "tags" : [ "index volume - v2" ]
      }
    },
    "/index/volumeGroup/v2" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "name",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexVolumeGroup",
              "originalRef" : "#/definitions/IndexVolumeGroup"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexVolumeGroup",
              "originalRef" : "#/definitions/IndexVolumeGroup"
            }
          }
        },
        "summary" : "Creates an index volume group",
        "tags" : [ "index volumeGroup - v2" ]
      }
    },
    "/index/volumeGroup/v2/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExpressionCriteria",
            "originalRef" : "ExpressionCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Finds index volume groups matching request",
        "tags" : [ "index volumeGroup - v2" ]
      }
    },
    "/index/volumeGroup/v2/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexVolumeGroup",
              "originalRef" : "#/definitions/IndexVolumeGroup"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexVolumeGroup",
              "originalRef" : "#/definitions/IndexVolumeGroup"
            }
          }
        },
        "summary" : "Gets an index volume group",
        "tags" : [ "index volumeGroup - v2" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/IndexVolumeGroup",
              "originalRef" : "#/definitions/IndexVolumeGroup"
            },
            "schema" : {
              "$ref" : "#/definitions/IndexVolumeGroup",
              "originalRef" : "#/definitions/IndexVolumeGroup"
            }
          }
        },
        "summary" : "Updates an index volume group",
        "tags" : [ "index volumeGroup - v2" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Deletes an index volume group",
        "tags" : [ "index volumeGroup - v2" ]
      }
    },
    "/job/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Lists jobs",
        "tags" : [ "job - v1" ]
      }
    },
    "/job/v1/{id}/enabled" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setEnabled",
        "parameters" : [ {
          "description" : "enabled",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the enabled status of the job",
        "tags" : [ "job - v1" ]
      }
    },
    "/jobNode/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "jobName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Lists job nodes",
        "tags" : [ "jobNode - v1" ]
      }
    },
    "/jobNode/v1/info" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "info",
        "parameters" : [ {
          "name" : "jobName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/JobNodeInfo",
              "originalRef" : "#/definitions/JobNodeInfo"
            },
            "schema" : {
              "$ref" : "#/definitions/JobNodeInfo",
              "originalRef" : "#/definitions/JobNodeInfo"
            }
          }
        },
        "summary" : "Gets current info for a job node",
        "tags" : [ "jobNode - v1" ]
      }
    },
    "/jobNode/v1/{id}/enabled" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setEnabled",
        "parameters" : [ {
          "description" : "enabled",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the enabled status of the job node",
        "tags" : [ "jobNode - v1" ]
      }
    },
    "/jobNode/v1/{id}/schedule" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setSchedule",
        "parameters" : [ {
          "description" : "schedule",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the schedule job node",
        "tags" : [ "jobNode - v1" ]
      }
    },
    "/jobNode/v1/{id}/taskLimit" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setTaskLimit",
        "parameters" : [ {
          "description" : "taskLimit",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the task limit for the job node",
        "tags" : [ "jobNode - v1" ]
      }
    },
    "/kafkaConfig/v1/download" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "download",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Download a kafkaConfig doc",
        "tags" : [ "kafkaConfig - v1" ]
      }
    },
    "/kafkaConfig/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/KafkaConfigDoc",
              "originalRef" : "#/definitions/KafkaConfigDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/KafkaConfigDoc",
              "originalRef" : "#/definitions/KafkaConfigDoc"
            }
          }
        },
        "summary" : "Get a kafkaConfig doc",
        "tags" : [ "kafkaConfig - v1" ]
      }
    },
    "/kafkaConfig/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "updated",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/KafkaConfigDoc",
            "originalRef" : "KafkaConfigDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/KafkaConfigDoc",
              "originalRef" : "#/definitions/KafkaConfigDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/KafkaConfigDoc",
              "originalRef" : "#/definitions/KafkaConfigDoc"
            }
          }
        },
        "summary" : "Update a kafkaConfig doc",
        "tags" : [ "kafkaConfig - v1" ]
      }
    },
    "/meta/v1/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "findMetaRow",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindMetaCriteria",
            "originalRef" : "FindMetaCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Find matching meta data",
        "tags" : [ "meta - v1" ]
      }
    },
    "/meta/v1/getReprocessSelectionSummary" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getReprocessSelectionSummary",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindMetaCriteria",
            "originalRef" : "FindMetaCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Get a summary of the parent items of the selected meta data",
        "tags" : [ "meta - v1" ]
      }
    },
    "/meta/v1/getSelectionSummary" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getSelectionSummary",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindMetaCriteria",
            "originalRef" : "FindMetaCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            },
            "schema" : {
              "$ref" : "#/definitions/ResourceGeneration",
              "originalRef" : "#/definitions/ResourceGeneration"
            }
          }
        },
        "summary" : "Get a summary of the selected meta data",
        "tags" : [ "meta - v1" ]
      }
    },
    "/meta/v1/getTypes" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getTypes",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get a list of possible stream types",
        "tags" : [ "meta - v1" ]
      }
    },
    "/meta/v1/update/status" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "updateStatus",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "integer",
              "format" : "int32"
            },
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        },
        "summary" : "Update status on matching meta data",
        "tags" : [ "meta - v1" ]
      }
    },
    "/node/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FetchNodeStatusResponse",
              "originalRef" : "#/definitions/FetchNodeStatusResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/FetchNodeStatusResponse",
              "originalRef" : "#/definitions/FetchNodeStatusResponse"
            }
          }
        },
        "summary" : "Lists nodes",
        "tags" : [ "node - v1" ]
      }
    },
    "/node/v1/all" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "listAllNodes",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Lists all nodes",
        "tags" : [ "node - v1" ]
      }
    },
    "/node/v1/enabled" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "listEnabledNodes",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Lists enabled nodes",
        "tags" : [ "node - v1" ]
      }
    },
    "/node/v1/enabled/{nodeName}" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setEnabled",
        "parameters" : [ {
          "description" : "enabled",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets whether a node is enabled",
        "tags" : [ "node - v1" ]
      }
    },
    "/node/v1/info/{nodeName}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "info",
        "parameters" : [ {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "integer",
              "format" : "int64"
            },
            "schema" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        },
        "summary" : "Gets detailed information about a node",
        "tags" : [ "node - v1" ]
      }
    },
    "/node/v1/ping/{nodeName}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "ping",
        "parameters" : [ {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "integer",
              "format" : "int64"
            },
            "schema" : {
              "format" : "int64",
              "type" : "integer"
            }
          }
        },
        "summary" : "Gets a ping time for a node",
        "tags" : [ "node - v1" ]
      }
    },
    "/node/v1/priority/{nodeName}" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setPriority",
        "parameters" : [ {
          "description" : "nodeName",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the priority of a node",
        "tags" : [ "node - v1" ]
      }
    },
    "/oauth2/v1/noauth/.well-known/openid-configuration" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "openIdConfiguration",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Provides discovery for openid configuration",
        "tags" : [ "ApiKey" ]
      }
    },
    "/oauth2/v1/noauth/auth" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "auth",
        "parameters" : [ {
          "name" : "client_id",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nonce",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "prompt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "redirect_uri",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "response_type",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scope",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Submit an OpenId AuthenticationRequest.",
        "tags" : [ "Authentication" ]
      }
    },
    "/oauth2/v1/noauth/certs" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "certs",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Provides access to this service's current public key. A client may use these keys to verify JWTs issued by this service.",
        "tags" : [ "ApiKey" ]
      }
    },
    "/oauth2/v1/noauth/token" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "token",
        "parameters" : [ {
          "description" : "tokenRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TokenRequest",
            "originalRef" : "TokenRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Get a token from an access code",
        "tags" : [ "Authentication" ]
      }
    },
    "/permission/app/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getUserAndPermissions",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/UserAndPermissions",
              "originalRef" : "#/definitions/UserAndPermissions"
            },
            "schema" : {
              "$ref" : "#/definitions/UserAndPermissions",
              "originalRef" : "#/definitions/UserAndPermissions"
            }
          }
        },
        "summary" : "User and app permissions for the current session",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/app/v1/changeUser" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "changeUser",
        "parameters" : [ {
          "description" : "changeUserRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ChangeUserRequest",
            "originalRef" : "ChangeUserRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "User and app permissions for the current session",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/app/v1/fetchAllPermissions" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchAllPermissions",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get all possible permissions",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/app/v1/fetchUserAppPermissions" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchUserAppPermissions",
        "parameters" : [ {
          "description" : "user",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/UserAndPermissions",
              "originalRef" : "#/definitions/UserAndPermissions"
            },
            "schema" : {
              "$ref" : "#/definitions/UserAndPermissions",
              "originalRef" : "#/definitions/UserAndPermissions"
            }
          }
        },
        "summary" : "User and app permissions for the specified user",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/changeEvent/v1/fireChange/{nodeName}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fireChange",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionChangeRequest",
            "originalRef" : "PermissionChangeRequest"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Fires a permission change event",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/doc/v1/changeDocumentPermissions" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "changeDocumentPermissions",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ChangeDocumentPermissionsRequest",
            "originalRef" : "ChangeDocumentPermissionsRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Change document permissions",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/doc/v1/checkDocumentPermission" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "checkDocumentPermission",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CheckDocumentPermissionRequest",
            "originalRef" : "CheckDocumentPermissionRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Check document permission",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/doc/v1/copyPermissionsFromParent" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "copyPermissionFromParent",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CopyPermissionsFromParentRequest",
            "originalRef" : "CopyPermissionsFromParentRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocumentPermissions",
              "originalRef" : "#/definitions/DocumentPermissions"
            },
            "schema" : {
              "$ref" : "#/definitions/DocumentPermissions",
              "originalRef" : "#/definitions/DocumentPermissions"
            }
          }
        },
        "summary" : "Copy permissions from parent",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/doc/v1/fetchAllDocumentPermissions" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchAllDocumentPermissions",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FetchAllDocumentPermissionsRequest",
            "originalRef" : "FetchAllDocumentPermissionsRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocumentPermissions",
              "originalRef" : "#/definitions/DocumentPermissions"
            },
            "schema" : {
              "$ref" : "#/definitions/DocumentPermissions",
              "originalRef" : "#/definitions/DocumentPermissions"
            }
          }
        },
        "summary" : "Fetch document permissions",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/doc/v1/filterUsers" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "filterUsers",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get all permissions for a given document type",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/permission/doc/v1/getPermissionForDocType/${docType}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getPermissionForDocType",
        "parameters" : [ {
          "name" : "docType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get all permissions for a given document type",
        "tags" : [ "application permissions - v1" ]
      }
    },
    "/pipeline/v1/fetchPipelineData" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchPipelineData",
        "parameters" : [ {
          "description" : "pipeline",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Fetch data for a pipeline",
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipeline/v1/fetchPipelineXml" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchPipelineXml",
        "parameters" : [ {
          "description" : "pipeline",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/FetchPipelineXmlResponse",
              "originalRef" : "#/definitions/FetchPipelineXmlResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/FetchPipelineXmlResponse",
              "originalRef" : "#/definitions/FetchPipelineXmlResponse"
            }
          }
        },
        "summary" : "Fetch the XML for a pipeline",
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipeline/v1/propertyTypes" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getPropertyTypes",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get pipeline property types",
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipeline/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/PipelineDoc",
              "originalRef" : "#/definitions/PipelineDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/PipelineDoc",
              "originalRef" : "#/definitions/PipelineDoc"
            }
          }
        },
        "summary" : "Get a pipeline doc",
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipeline/v1/savePipelineXml" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "savePipelineXml",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SavePipelineXmlRequest",
            "originalRef" : "SavePipelineXmlRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Update a pipeline doc with XML directly",
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipeline/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "PipelineDoc",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PipelineDoc",
            "originalRef" : "PipelineDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/PipelineDoc",
              "originalRef" : "#/definitions/PipelineDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/PipelineDoc",
              "originalRef" : "#/definitions/PipelineDoc"
            }
          }
        },
        "summary" : "Update a pipeline doc",
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipelines/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "search",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipelines/v1/{parentPipelineId}/inherit" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "createInherited",
        "parameters" : [ {
          "description" : "parentPipeline",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        }, {
          "name" : "parentPipelineId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/pipelines/v1/{pipelineId}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "fetch",
        "parameters" : [ {
          "name" : "pipelineId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "pipeline - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "save",
        "parameters" : [ {
          "description" : "pipelineDocUpdates",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PipelineDTO",
            "originalRef" : "PipelineDTO"
          }
        }, {
          "name" : "pipelineId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "pipeline - v1" ]
      }
    },
    "/processor/v1/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Processor",
              "originalRef" : "#/definitions/Processor"
            },
            "schema" : {
              "$ref" : "#/definitions/Processor",
              "originalRef" : "#/definitions/Processor"
            }
          }
        },
        "summary" : "Deletes a processor",
        "tags" : [ "processor - v1" ]
      }
    },
    "/processor/v1/{id}/enabled" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setEnabled",
        "parameters" : [ {
          "description" : "enabled",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the enabled/disabled state for a processor",
        "tags" : [ "processor - v1" ]
      }
    },
    "/processorFilter/v1" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateProcessFilterRequest",
            "originalRef" : "CreateProcessFilterRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            },
            "schema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            }
          }
        },
        "summary" : "Creates a filter",
        "tags" : [ "processorFilter - v1" ]
      }
    },
    "/processorFilter/v1/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FetchProcessorRequest",
            "originalRef" : "FetchProcessorRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Finds processors and filters matching request",
        "tags" : [ "processorFilter - v1" ]
      }
    },
    "/processorFilter/v1/reprocess" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "reprocess",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateReprocessFilterRequest",
            "originalRef" : "CreateReprocessFilterRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "$ref" : "#/definitions/ReprocessDataInfo",
                "originalRef" : "ReprocessDataInfo"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/ReprocessDataInfo",
                "originalRef" : "ReprocessDataInfo"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Create filters to reprocess data",
        "tags" : [ "processorFilter - v1" ]
      }
    },
    "/processorFilter/v1/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            },
            "schema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            }
          }
        },
        "summary" : "Gets a filter",
        "tags" : [ "processorFilter - v1" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            },
            "schema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            }
          }
        },
        "summary" : "Updates a filter",
        "tags" : [ "processorFilter - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            },
            "schema" : {
              "$ref" : "#/definitions/ProcessorFilter",
              "originalRef" : "#/definitions/ProcessorFilter"
            }
          }
        },
        "summary" : "Deletes a filter",
        "tags" : [ "processorFilter - v1" ]
      }
    },
    "/processorFilter/v1/{id}/enabled" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setEnabled",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the enabled/disabled state for a filter",
        "tags" : [ "processorFilter - v1" ]
      }
    },
    "/processorFilter/v1/{id}/priority" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "setPriority",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Sets the priority for a filter",
        "tags" : [ "processorFilter - v1" ]
      }
    },
    "/processorTask/v1/abandon/{nodeName}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "abandonTasks",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessorTaskList",
            "originalRef" : "ProcessorTaskList"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Abandon some tasks",
        "tags" : [ "processorTask - v1" ]
      }
    },
    "/processorTask/v1/assign/{nodeName}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "assignTasks",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AssignTasksRequest",
            "originalRef" : "AssignTasksRequest"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ProcessorTaskList",
              "originalRef" : "#/definitions/ProcessorTaskList"
            },
            "schema" : {
              "$ref" : "#/definitions/ProcessorTaskList",
              "originalRef" : "#/definitions/ProcessorTaskList"
            }
          }
        },
        "summary" : "Assign some tasks",
        "tags" : [ "processorTask - v1" ]
      }
    },
    "/processorTask/v1/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "expressionCriteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExpressionCriteria",
            "originalRef" : "ExpressionCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Finds processors tasks",
        "tags" : [ "processorTask - v1" ]
      }
    },
    "/processorTask/v1/summary" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "findSummary",
        "parameters" : [ {
          "description" : "expressionCriteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExpressionCriteria",
            "originalRef" : "ExpressionCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Finds processor task summaries",
        "tags" : [ "processorTask - v1" ]
      }
    },
    "/refData/v1/entries" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "entries",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "$ref" : "#/definitions/RefStoreEntry",
                "originalRef" : "RefStoreEntry"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/RefStoreEntry",
                "originalRef" : "RefStoreEntry"
              },
              "type" : "array"
            }
          }
        },
        "tags" : [ "reference data - v1" ]
      }
    },
    "/refData/v1/lookup" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "lookup",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "tags" : [ "reference data - v1" ]
      }
    },
    "/refData/v1/purge/{purgeAge}" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "operationId" : "purge",
        "parameters" : [ {
          "name" : "purgeAge",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "reference data - v1" ]
      }
    },
    "/remoteSearch/v1/destroy" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "destroy",
        "parameters" : [ {
          "name" : "queryKey",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Destroy search results",
        "tags" : [ "remoteSearch - v1" ]
      }
    },
    "/remoteSearch/v1/poll" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "poll",
        "parameters" : [ {
          "name" : "queryKey",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/octet-stream" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StreamingOutput",
              "originalRef" : "#/definitions/StreamingOutput"
            },
            "schema" : {
              "$ref" : "#/definitions/StreamingOutput",
              "originalRef" : "#/definitions/StreamingOutput"
            }
          }
        },
        "tags" : [ "remoteSearch - v1" ]
      }
    },
    "/remoteSearch/v1/start" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "start",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Start a search",
        "tags" : [ "remoteSearch - v1" ]
      }
    },
    "/ruleset/v2/export" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "exportDocument",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            },
            "schema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            }
          }
        },
        "summary" : "Submit an export request",
        "tags" : [ "ruleset - v2" ]
      }
    },
    "/ruleset/v2/import" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "importDocument",
        "parameters" : [ {
          "description" : "DocumentData",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Base64EncodedDocumentData",
            "originalRef" : "Base64EncodedDocumentData"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Submit an import request",
        "tags" : [ "ruleset - v2" ]
      }
    },
    "/ruleset/v2/list" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "listDocuments",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "summary" : "Submit a request for a list of doc refs held by this service",
        "tags" : [ "ruleset - v2" ]
      }
    },
    "/ruleset/v2/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ReceiveDataRules",
              "originalRef" : "#/definitions/ReceiveDataRules"
            },
            "schema" : {
              "$ref" : "#/definitions/ReceiveDataRules",
              "originalRef" : "#/definitions/ReceiveDataRules"
            }
          }
        },
        "summary" : "Get a rules doc",
        "tags" : [ "ruleset - v2" ]
      }
    },
    "/ruleset/v2/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "receiveDataRules",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReceiveDataRules",
            "originalRef" : "ReceiveDataRules"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ReceiveDataRules",
              "originalRef" : "#/definitions/ReceiveDataRules"
            },
            "schema" : {
              "$ref" : "#/definitions/ReceiveDataRules",
              "originalRef" : "#/definitions/ReceiveDataRules"
            }
          }
        },
        "summary" : "Update a rules doc",
        "tags" : [ "ruleset - v2" ]
      }
    },
    "/scheduledTime/v1" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "get",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GetScheduledTimesRequest",
            "originalRef" : "GetScheduledTimesRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ScheduledTimes",
              "originalRef" : "#/definitions/ScheduledTimes"
            },
            "schema" : {
              "$ref" : "#/definitions/ScheduledTimes",
              "originalRef" : "#/definitions/ScheduledTimes"
            }
          }
        },
        "summary" : "Gets scheduled time info",
        "tags" : [ "scheduledTime - v1" ]
      }
    },
    "/script/v1/fetchLinkedScripts" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchLinkedScripts",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FetchLinkedScriptRequest",
            "originalRef" : "FetchLinkedScriptRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ScriptDoc",
              "originalRef" : "#/definitions/ScriptDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/ScriptDoc",
              "originalRef" : "#/definitions/ScriptDoc"
            }
          }
        },
        "summary" : "Fetch related scripts",
        "tags" : [ "script - v1" ]
      }
    },
    "/script/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ScriptDoc",
              "originalRef" : "#/definitions/ScriptDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/ScriptDoc",
              "originalRef" : "#/definitions/ScriptDoc"
            }
          }
        },
        "summary" : "Get a script doc",
        "tags" : [ "script - v1" ]
      }
    },
    "/script/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "xslt",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ScriptDoc",
            "originalRef" : "ScriptDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ScriptDoc",
              "originalRef" : "#/definitions/ScriptDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/ScriptDoc",
              "originalRef" : "#/definitions/ScriptDoc"
            }
          }
        },
        "summary" : "Update a script doc",
        "tags" : [ "script - v1" ]
      }
    },
    "/searchable/v2/dataSource" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getDataSource",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            },
            "schema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            }
          }
        },
        "summary" : "Submit a request for a data source definition, supplying the DocRef for the data source",
        "tags" : [ "searchable - v2" ]
      }
    },
    "/searchable/v2/destroy" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "destroy",
        "parameters" : [ {
          "description" : "QueryKey",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryKey",
            "originalRef" : "QueryKey"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Destroy a running query",
        "tags" : [ "searchable - v2" ]
      }
    },
    "/searchable/v2/search" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "search",
        "parameters" : [ {
          "description" : "SearchRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest",
            "originalRef" : "SearchRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            }
          }
        },
        "summary" : "Submit a search request",
        "tags" : [ "searchable - v2" ]
      }
    },
    "/session/v1/list" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "nodeName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SessionDetails",
              "originalRef" : "#/definitions/SessionDetails"
            },
            "schema" : {
              "$ref" : "#/definitions/SessionDetails",
              "originalRef" : "#/definitions/SessionDetails"
            }
          }
        },
        "summary" : "Lists user sessions for a node, or all nodes in the cluster if nodeName is null",
        "tags" : [ "session - v1" ]
      }
    },
    "/session/v1/logout/{sessionId}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "sessionId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Logs the specified session out of Stroom",
        "tags" : [ "session - v1" ]
      }
    },
    "/session/v1/noauth/login" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "login",
        "parameters" : [ {
          "name" : "redirect_uri",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Checks if the current session is authenticated and redirects to an auth flow if it is not",
        "tags" : [ "session - v1" ]
      }
    },
    "/sessionInfo/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SessionInfo",
              "originalRef" : "#/definitions/SessionInfo"
            },
            "schema" : {
              "$ref" : "#/definitions/SessionInfo",
              "originalRef" : "#/definitions/SessionInfo"
            }
          }
        },
        "tags" : [ "sessionInfo - v1" ]
      }
    },
    "/solr/index/v1/export" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Solr Index API",
        "operationId" : "exportDocument",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            },
            "schema" : {
              "$ref" : "#/definitions/Base64EncodedDocumentData",
              "originalRef" : "#/definitions/Base64EncodedDocumentData"
            }
          }
        },
        "summary" : "Submit an export request",
        "tags" : [ "solr index - v1" ]
      }
    },
    "/solr/index/v1/import" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Solr Index API",
        "operationId" : "importDocument",
        "parameters" : [ {
          "description" : "DocumentData",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Base64EncodedDocumentData",
            "originalRef" : "Base64EncodedDocumentData"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Submit an import request",
        "tags" : [ "solr index - v1" ]
      }
    },
    "/solr/index/v1/list" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Solr Index API",
        "operationId" : "listDocuments",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array",
              "uniqueItems" : true
            }
          }
        },
        "summary" : "Submit a request for a list of doc refs held by this service",
        "tags" : [ "solr index - v1" ]
      }
    },
    "/solrIndex/v1/fetchSolrTypes" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetchSolrTypes",
        "parameters" : [ {
          "description" : "solrIndexDoc",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SolrIndexDoc",
            "originalRef" : "SolrIndexDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Fetch Solr types",
        "tags" : [ "solrIndex - v1" ]
      }
    },
    "/solrIndex/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SolrIndexDoc",
              "originalRef" : "#/definitions/SolrIndexDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/SolrIndexDoc",
              "originalRef" : "#/definitions/SolrIndexDoc"
            }
          }
        },
        "summary" : "Get a solr index doc",
        "tags" : [ "solrIndex - v1" ]
      }
    },
    "/solrIndex/v1/solrConnectionTest" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "solrConnectionTest",
        "parameters" : [ {
          "description" : "solrIndexDoc",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SolrIndexDoc",
            "originalRef" : "SolrIndexDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Test connection to Solr",
        "tags" : [ "solrIndex - v1" ]
      }
    },
    "/solrIndex/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "solrIndexDoc",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SolrIndexDoc",
            "originalRef" : "SolrIndexDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SolrIndexDoc",
              "originalRef" : "#/definitions/SolrIndexDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/SolrIndexDoc",
              "originalRef" : "#/definitions/SolrIndexDoc"
            }
          }
        },
        "summary" : "Update a solr index doc",
        "tags" : [ "solrIndex - v1" ]
      }
    },
    "/sqlstatistics/v2/dataSource" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getDataSource",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            },
            "schema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            }
          }
        },
        "summary" : "Submit a request for a data source definition, supplying the DocRef for the data source",
        "tags" : [ "sqlstatistics query - v2" ]
      }
    },
    "/sqlstatistics/v2/destroy" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "destroy",
        "parameters" : [ {
          "description" : "QueryKey",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryKey",
            "originalRef" : "QueryKey"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Destroy a running query",
        "tags" : [ "sqlstatistics query - v2" ]
      }
    },
    "/sqlstatistics/v2/search" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "search",
        "parameters" : [ {
          "description" : "SearchRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest",
            "originalRef" : "SearchRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            }
          }
        },
        "summary" : "Submit a search request",
        "tags" : [ "sqlstatistics query - v2" ]
      }
    },
    "/statistic/rollUp/v1/bitMaskConversion" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "bitMaskConversion",
        "parameters" : [ {
          "description" : "maskValues",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get rollup bit mask",
        "tags" : [ "statisticrollUp - v1" ]
      }
    },
    "/statistic/rollUp/v1/bitMaskPermGeneration" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "bitMaskPermGeneration",
        "parameters" : [ {
          "description" : "fieldCount",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Create rollup bit mask",
        "tags" : [ "statisticrollUp - v1" ]
      }
    },
    "/statistic/rollUp/v1/dataSourceFieldChange" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fieldChange",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StatisticsDataSourceFieldChangeRequest",
            "originalRef" : "StatisticsDataSourceFieldChangeRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StatisticsDataSourceData",
              "originalRef" : "#/definitions/StatisticsDataSourceData"
            },
            "schema" : {
              "$ref" : "#/definitions/StatisticsDataSourceData",
              "originalRef" : "#/definitions/StatisticsDataSourceData"
            }
          }
        },
        "summary" : "Change fields",
        "tags" : [ "statisticrollUp - v1" ]
      }
    },
    "/statistic/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            }
          }
        },
        "summary" : "Get a statistic doc",
        "tags" : [ "statistic - v1" ]
      }
    },
    "/statistic/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "statisticStoreDoc",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StatisticStoreDoc",
            "originalRef" : "StatisticStoreDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StatisticStoreDoc",
              "originalRef" : "#/definitions/StatisticStoreDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/StatisticStoreDoc",
              "originalRef" : "#/definitions/StatisticStoreDoc"
            }
          }
        },
        "summary" : "Update a statistic doc",
        "tags" : [ "statistic - v1" ]
      }
    },
    "/statsStore/rollUp/v1/bitMaskConversion" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "bitMaskConversion",
        "parameters" : [ {
          "description" : "maskValues",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get rollup bit mask",
        "tags" : [ "statsStorerollUp - v1" ]
      }
    },
    "/statsStore/rollUp/v1/bitMaskPermGeneration" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "bitMaskPermGeneration",
        "parameters" : [ {
          "description" : "fieldCount",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Create rollup bit mask",
        "tags" : [ "statsStorerollUp - v1" ]
      }
    },
    "/statsStore/rollUp/v1/dataSourceFieldChange" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fieldChange",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StroomStatsStoreFieldChangeRequest",
            "originalRef" : "StroomStatsStoreFieldChangeRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StroomStatsStoreEntityData",
              "originalRef" : "#/definitions/StroomStatsStoreEntityData"
            },
            "schema" : {
              "$ref" : "#/definitions/StroomStatsStoreEntityData",
              "originalRef" : "#/definitions/StroomStatsStoreEntityData"
            }
          }
        },
        "summary" : "Change fields",
        "tags" : [ "statsStorerollUp - v1" ]
      }
    },
    "/statsStore/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DictionaryDoc",
              "originalRef" : "#/definitions/DictionaryDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/DictionaryDoc",
              "originalRef" : "#/definitions/DictionaryDoc"
            }
          }
        },
        "summary" : "Get a stats store doc",
        "tags" : [ "statsStore - v1" ]
      }
    },
    "/statsStore/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "stroomStatsStoreDoc",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StroomStatsStoreDoc",
            "originalRef" : "StroomStatsStoreDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StroomStatsStoreDoc",
              "originalRef" : "#/definitions/StroomStatsStoreDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/StroomStatsStoreDoc",
              "originalRef" : "#/definitions/StroomStatsStoreDoc"
            }
          }
        },
        "summary" : "Update a stats store doc",
        "tags" : [ "statsStore - v1" ]
      }
    },
    "/stepping/v1/findElementDoc" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "findElementDoc",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Doc",
              "originalRef" : "#/definitions/Doc"
            },
            "schema" : {
              "$ref" : "#/definitions/Doc",
              "originalRef" : "#/definitions/Doc"
            }
          }
        },
        "summary" : "Load the document for an element",
        "tags" : [ "stepping - v1" ]
      }
    },
    "/stepping/v1/getPipelineForStepping" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getPipelineForStepping",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GetPipelineForMetaRequest",
            "originalRef" : "GetPipelineForMetaRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            },
            "schema" : {
              "$ref" : "#/definitions/DocRef",
              "originalRef" : "#/definitions/DocRef"
            }
          }
        },
        "summary" : "Get a pipeline for stepping",
        "tags" : [ "stepping - v1" ]
      }
    },
    "/stepping/v1/step" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "step",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PipelineStepRequest",
            "originalRef" : "PipelineStepRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SteppingResult",
              "originalRef" : "#/definitions/SteppingResult"
            },
            "schema" : {
              "$ref" : "#/definitions/SteppingResult",
              "originalRef" : "#/definitions/SteppingResult"
            }
          }
        },
        "summary" : "Step a pipeline",
        "tags" : [ "stepping - v1" ]
      }
    },
    "/storedQuery/v1/create" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "storedQuery",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StoredQuery",
            "originalRef" : "StoredQuery"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            },
            "schema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            }
          }
        },
        "summary" : "Create a stored query",
        "tags" : [ "storedQuery - v1" ]
      }
    },
    "/storedQuery/v1/delete" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            },
            "schema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            }
          }
        },
        "summary" : "Delete a stored query",
        "tags" : [ "storedQuery - v1" ]
      }
    },
    "/storedQuery/v1/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindStoredQueryCriteria",
            "originalRef" : "FindStoredQueryCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Find stored queries",
        "tags" : [ "storedQuery - v1" ]
      }
    },
    "/storedQuery/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "storedQuery",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StoredQuery",
            "originalRef" : "StoredQuery"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            },
            "schema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            }
          }
        },
        "summary" : "Get a stored query",
        "tags" : [ "storedQuery - v1" ]
      }
    },
    "/storedQuery/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            },
            "schema" : {
              "$ref" : "#/definitions/StoredQuery",
              "originalRef" : "#/definitions/StoredQuery"
            }
          }
        },
        "summary" : "Update a stored query",
        "tags" : [ "storedQuery - v1" ]
      }
    },
    "/streamattributemap/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "page",
        "parameters" : [ {
          "name" : "pageOffset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stream attribute map - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "search",
        "parameters" : [ {
          "description" : "expression",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExpressionOperator",
            "originalRef" : "ExpressionOperator"
          }
        }, {
          "name" : "pageOffset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stream attribute map - v1" ]
      }
    },
    "/streamattributemap/v1/dataSource" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "dataSource",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stream attribute map - v1" ]
      }
    },
    "/streamattributemap/v1/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "search",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stream attribute map - v1" ]
      }
    },
    "/streamattributemap/v1/{id}/{anyStatus}/relations" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getRelations",
        "parameters" : [ {
          "name" : "anyStatus",
          "in" : "path",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stream attribute map - v1" ]
      }
    },
    "/streamtasks/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "fetch",
        "parameters" : [ {
          "name" : "desc",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stream task - v1" ]
      }
    },
    "/streamtasks/v1/{filterId}" : {
      "patch" : {
        "consumes" : [ "application/json" ],
        "operationId" : "enable",
        "parameters" : [ {
          "name" : "filterId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stream task - v1" ]
      }
    },
    "/stroom-index/v2/dataSource" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getDataSource",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            },
            "schema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            }
          }
        },
        "summary" : "Submit a request for a data source definition, supplying the DocRef for the data source",
        "tags" : [ "stroom-index query - v2" ]
      }
    },
    "/stroom-index/v2/destroy" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "destroy",
        "parameters" : [ {
          "description" : "QueryKey",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryKey",
            "originalRef" : "QueryKey"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Destroy a running query",
        "tags" : [ "stroom-index query - v2" ]
      }
    },
    "/stroom-index/v2/search" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "search",
        "parameters" : [ {
          "description" : "SearchRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest",
            "originalRef" : "SearchRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            }
          }
        },
        "summary" : "Submit a search request",
        "tags" : [ "stroom-index query - v2" ]
      }
    },
    "/stroom-index/volume/v1" : {
      "get" : {
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumes - v1" ]
      },
      "post" : {
        "operationId" : "create",
        "parameters" : [ {
          "description" : "indexVolume",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IndexVolume",
            "originalRef" : "IndexVolume"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumes - v1" ]
      },
      "put" : {
        "operationId" : "update",
        "parameters" : [ {
          "description" : "indexVolume",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IndexVolume",
            "originalRef" : "IndexVolume"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumes - v1" ]
      }
    },
    "/stroom-index/volume/v1/{id}" : {
      "get" : {
        "operationId" : "getById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumes - v1" ]
      },
      "delete" : {
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumes - v1" ]
      }
    },
    "/stroom-index/volumeGroup/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumeGroup - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumeGroup - v1" ]
      },
      "put" : {
        "consumes" : [ "application/json" ],
        "operationId" : "update",
        "parameters" : [ {
          "description" : "indexVolumeGroup",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IndexVolumeGroup",
            "originalRef" : "IndexVolumeGroup"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumeGroup - v1" ]
      }
    },
    "/stroom-index/volumeGroup/v1/names" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "getNames",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumeGroup - v1" ]
      }
    },
    "/stroom-index/volumeGroup/v1/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "get",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumeGroup - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "stroom-index volumeGroup - v1" ]
      }
    },
    "/stroom-solr-index/v2/dataSource" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Solr Index Query API",
        "operationId" : "getDataSource",
        "parameters" : [ {
          "description" : "DocRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            },
            "schema" : {
              "$ref" : "#/definitions/DataSource",
              "originalRef" : "#/definitions/DataSource"
            }
          }
        },
        "summary" : "Submit a request for a data source definition, supplying the DocRef for the data source",
        "tags" : [ "stroom-solr-index query - v2" ]
      }
    },
    "/stroom-solr-index/v2/destroy" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Solr Index Query API",
        "operationId" : "destroy",
        "parameters" : [ {
          "description" : "QueryKey",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryKey",
            "originalRef" : "QueryKey"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Destroy a running query",
        "tags" : [ "stroom-solr-index query - v2" ]
      }
    },
    "/stroom-solr-index/v2/search" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Solr Index Query API",
        "operationId" : "search",
        "parameters" : [ {
          "description" : "SearchRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest",
            "originalRef" : "SearchRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/SearchResponse",
              "originalRef" : "#/definitions/SearchResponse"
            }
          }
        },
        "summary" : "Submit a search request",
        "tags" : [ "stroom-solr-index query - v2" ]
      }
    },
    "/stroomSession/v1/invalidate" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "invalidate",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Invalidate the current session",
        "tags" : [ "stroomSession - v1" ]
      }
    },
    "/stroomSession/v1/noauth/validateSession" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "validateSession",
        "parameters" : [ {
          "name" : "redirect_uri",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Validate the current session, return a redirect Uri if invalid.",
        "tags" : [ "stroomSession - v1" ]
      }
    },
    "/suggest/v1" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetch",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FetchSuggestionsRequest",
            "originalRef" : "FetchSuggestionsRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Fetch some suggestions",
        "tags" : [ "suggest - v1" ]
      }
    },
    "/systemInfo/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/SystemInfoResult",
              "originalRef" : "#/definitions/SystemInfoResult"
            },
            "schema" : {
              "$ref" : "#/definitions/SystemInfoResult",
              "originalRef" : "#/definitions/SystemInfoResult"
            }
          }
        },
        "summary" : "Get all system info results",
        "tags" : [ "system info - v1" ]
      }
    },
    "/systemInfo/v1/names" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getNames",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get all system info result names",
        "tags" : [ "system info - v1" ]
      }
    },
    "/systemInfo/v1/{name}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "type" : "object"
              },
              "type" : "array"
            }
          }
        },
        "summary" : "Get a system info result by name",
        "tags" : [ "system info - v1" ]
      }
    },
    "/task/v1/find/{nodeName}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindTaskProgressRequest",
            "originalRef" : "FindTaskProgressRequest"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/TaskProgressResponse",
              "originalRef" : "#/definitions/TaskProgressResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/TaskProgressResponse",
              "originalRef" : "#/definitions/TaskProgressResponse"
            }
          }
        },
        "summary" : "Finds tasks for a node",
        "tags" : [ "task - v1" ]
      }
    },
    "/task/v1/list/{nodeName}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/TaskProgressResponse",
              "originalRef" : "#/definitions/TaskProgressResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/TaskProgressResponse",
              "originalRef" : "#/definitions/TaskProgressResponse"
            }
          }
        },
        "summary" : "Lists tasks for a node",
        "tags" : [ "task - v1" ]
      }
    },
    "/task/v1/terminate/{nodeName}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "terminate",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TerminateTaskProgressRequest",
            "originalRef" : "TerminateTaskProgressRequest"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "summary" : "Terminates tasks for a node",
        "tags" : [ "task - v1" ]
      }
    },
    "/task/v1/user/{nodeName}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "userTasks",
        "parameters" : [ {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/TaskProgressResponse",
              "originalRef" : "#/definitions/TaskProgressResponse"
            },
            "schema" : {
              "$ref" : "#/definitions/TaskProgressResponse",
              "originalRef" : "#/definitions/TaskProgressResponse"
            }
          }
        },
        "summary" : "Lists tasks for a node",
        "tags" : [ "task - v1" ]
      }
    },
    "/textConverter/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/TextConverterDoc",
              "originalRef" : "#/definitions/TextConverterDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/TextConverterDoc",
              "originalRef" : "#/definitions/TextConverterDoc"
            }
          }
        },
        "summary" : "Get a text converter doc",
        "tags" : [ "textConverter - v1" ]
      }
    },
    "/textConverter/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "xslt",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TextConverterDoc",
            "originalRef" : "TextConverterDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/TextConverterDoc",
              "originalRef" : "#/definitions/TextConverterDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/TextConverterDoc",
              "originalRef" : "#/definitions/TextConverterDoc"
            }
          }
        },
        "summary" : "Update a text converter doc",
        "tags" : [ "textConverter - v1" ]
      }
    },
    "/token/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Get all tokens.",
        "tags" : [ "Token" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "create",
        "parameters" : [ {
          "description" : "CreateTokenRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateTokenRequest",
            "originalRef" : "CreateTokenRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Token",
              "originalRef" : "#/definitions/Token"
            },
            "schema" : {
              "$ref" : "#/definitions/Token",
              "originalRef" : "#/definitions/Token"
            }
          }
        },
        "summary" : "Create a new token.",
        "tags" : [ "ApiKey" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "deleteAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Delete all tokens.",
        "tags" : [ "ApiKey" ]
      }
    },
    "/token/v1/byToken/{token}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Token",
              "originalRef" : "#/definitions/Token"
            },
            "schema" : {
              "$ref" : "#/definitions/Token",
              "originalRef" : "#/definitions/Token"
            }
          }
        },
        "summary" : "Read a token by the token string itself.",
        "tags" : [ "ApiKey" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Delete a token by the token string itself.",
        "tags" : [ "ApiKey" ]
      }
    },
    "/token/v1/noauth/fetchTokenConfig" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "fetchTokenConfig",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/TokenConfig",
              "originalRef" : "#/definitions/TokenConfig"
            },
            "schema" : {
              "$ref" : "#/definitions/TokenConfig",
              "originalRef" : "#/definitions/TokenConfig"
            }
          }
        },
        "summary" : "Get the token configuration",
        "tags" : [ "Authentication" ]
      }
    },
    "/token/v1/publickey" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "getPublicKey",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Provides access to this service's current public key. A client may use these keys to verify JWTs issued by this service.",
        "tags" : [ "ApiKey" ]
      }
    },
    "/token/v1/search" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "search",
        "parameters" : [ {
          "description" : "SearchRequest",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchTokenRequest",
            "originalRef" : "SearchTokenRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPage",
              "originalRef" : "#/definitions/ResultPage"
            }
          }
        },
        "summary" : "Submit a search request for tokens",
        "tags" : [ "ApiKey" ]
      }
    },
    "/token/v1/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/Token",
              "originalRef" : "#/definitions/Token"
            },
            "schema" : {
              "$ref" : "#/definitions/Token",
              "originalRef" : "#/definitions/Token"
            }
          }
        },
        "summary" : "Read a token by ID.",
        "tags" : [ "ApiKey" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Delete a token by ID.",
        "tags" : [ "ApiKey" ]
      }
    },
    "/token/v1/{id}/enabled" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom API Key API",
        "operationId" : "toggleEnabled",
        "parameters" : [ {
          "name" : "enabled",
          "in" : "query",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          }
        },
        "summary" : "Enable or disable the state of a token.",
        "tags" : [ "ApiKey" ]
      }
    },
    "/users/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "isGroup",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "items" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "User"
              },
              "type" : "array"
            },
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/User",
                "originalRef" : "User"
              },
              "type" : "array"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/users/v1/associates" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "getAssociates",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "summary" : "Gets a list of associated users",
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/users/v1/create/{name}/{isGroup}" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "isGroup",
          "in" : "path",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/User",
              "originalRef" : "#/definitions/User"
            },
            "schema" : {
              "$ref" : "#/definitions/User",
              "originalRef" : "#/definitions/User"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/users/v1/find" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "find",
        "parameters" : [ {
          "description" : "criteria",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FindUserCriteria",
            "originalRef" : "FindUserCriteria"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/ResultPageUser",
              "originalRef" : "#/definitions/ResultPageUser"
            },
            "schema" : {
              "$ref" : "#/definitions/ResultPageUser",
              "originalRef" : "#/definitions/ResultPageUser"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/users/v1/{userName}/status" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "setStatus",
        "parameters" : [ {
          "name" : "enabled",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "userName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/users/v1/{userUuid}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/User",
              "originalRef" : "#/definitions/User"
            },
            "schema" : {
              "$ref" : "#/definitions/User",
              "originalRef" : "#/definitions/User"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/users/v1/{userUuid}/{groupUuid}" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "addUserToGroup",
        "parameters" : [ {
          "name" : "groupUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      },
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "removeUserFromGroup",
        "parameters" : [ {
          "name" : "groupUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userUuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/users/v1/{uuid}" : {
      "delete" : {
        "consumes" : [ "application/json" ],
        "description" : "Stroom Authorisation API",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "type" : "boolean"
            },
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "tags" : [ "authorisation - v1" ]
      }
    },
    "/viewData/v1/fetch" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "fetch",
        "parameters" : [ {
          "description" : "request",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FetchDataRequest",
            "originalRef" : "FetchDataRequest"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/AbstractFetchDataResult",
              "originalRef" : "#/definitions/AbstractFetchDataResult"
            },
            "schema" : {
              "$ref" : "#/definitions/AbstractFetchDataResult",
              "originalRef" : "#/definitions/AbstractFetchDataResult"
            }
          }
        },
        "summary" : "Fetch matching data",
        "tags" : [ "viewData - v1" ]
      }
    },
    "/viewData/v1/listChildTypes" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "getChildStreamTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "partNo",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/AbstractFetchDataResult",
              "originalRef" : "#/definitions/AbstractFetchDataResult"
            },
            "schema" : {
              "$ref" : "#/definitions/AbstractFetchDataResult",
              "originalRef" : "#/definitions/AbstractFetchDataResult"
            }
          }
        },
        "summary" : "List child types for a stream",
        "tags" : [ "viewData - v1" ]
      }
    },
    "/visualisation/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/VisualisationDoc",
              "originalRef" : "#/definitions/VisualisationDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/VisualisationDoc",
              "originalRef" : "#/definitions/VisualisationDoc"
            }
          }
        },
        "summary" : "Get a visualisation doc",
        "tags" : [ "visualisation - v1" ]
      }
    },
    "/visualisation/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "description" : "visualisationDoc",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VisualisationDoc",
            "originalRef" : "VisualisationDoc"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/VisualisationDoc",
              "originalRef" : "#/definitions/VisualisationDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/VisualisationDoc",
              "originalRef" : "#/definitions/VisualisationDoc"
            }
          }
        },
        "summary" : "Update a visualisation doc",
        "tags" : [ "visualisation - v1" ]
      }
    },
    "/welcome/v1" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "welcome",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "welcome - v1" ]
      }
    },
    "/xmlSchema/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/XmlSchemaDoc",
              "originalRef" : "#/definitions/XmlSchemaDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/XmlSchemaDoc",
              "originalRef" : "#/definitions/XmlSchemaDoc"
            }
          }
        },
        "summary" : "Get an xml schema doc",
        "tags" : [ "xmlSchema - v1" ]
      }
    },
    "/xmlSchema/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/XmlSchemaDoc",
              "originalRef" : "#/definitions/XmlSchemaDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/XmlSchemaDoc",
              "originalRef" : "#/definitions/XmlSchemaDoc"
            }
          }
        },
        "summary" : "Update an xml schema doc",
        "tags" : [ "xmlSchema - v1" ]
      }
    },
    "/xslt/v1/read" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "read",
        "parameters" : [ {
          "description" : "docRef",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocRef",
            "originalRef" : "DocRef"
          }
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            }
          }
        },
        "summary" : "Get an xslt doc",
        "tags" : [ "xslt - v1" ]
      }
    },
    "/xslt/v1/update" : {
      "put" : {
        "consumes" : [ "application/json" ],
        "description" : "",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            }
          }
        },
        "summary" : "Update an xslt doc",
        "tags" : [ "xslt - v1" ]
      }
    },
    "/xslt/v1/{xsltId}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "operationId" : "fetch",
        "parameters" : [ {
          "name" : "xsltId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "responseSchema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            },
            "schema" : {
              "$ref" : "#/definitions/XsltDoc",
              "originalRef" : "#/definitions/XsltDoc"
            }
          }
        },
        "tags" : [ "xslt - v1" ]
      },
      "post" : {
        "consumes" : [ "application/json" ],
        "operationId" : "save",
        "parameters" : [ {
          "description" : "xsltDto",
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/XsltDTO",
            "originalRef" : "XsltDTO"
          }
        }, {
          "name" : "xsltId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "tags" : [ "xslt - v1" ]
      }
    }
  },
  "schemes" : [ "https" ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "securityDefinitions" : {
    "ApiKeyAuth" : {
      "in" : "header",
      "name" : "Authorization",
      "type" : "apiKey"
    }
  },
  "swagger" : "2.0",
  "tags" : [ {
    "name" : "Account"
  }, {
    "name" : "ApiKey"
  }, {
    "name" : "Authentication"
  }, {
    "name" : "Token"
  }, {
    "name" : "activity - v1"
  }, {
    "name" : "annotations - v1"
  }, {
    "name" : "application permissions - v1"
  }, {
    "name" : "authorisation - v1"
  }, {
    "name" : "cache - v1"
  }, {
    "name" : "clusterlock - v1"
  }, {
    "name" : "config - v1"
  }, {
    "name" : "content - v1"
  }, {
    "name" : "dashboard - v1"
  }, {
    "name" : "data - v1"
  }, {
    "name" : "dataRetentionRules - v1"
  }, {
    "name" : "dataSource - v1"
  }, {
    "name" : "dbStatus - v1"
  }, {
    "name" : "dictionary - v1"
  }, {
    "name" : "dictionary - v2"
  }, {
    "name" : "document permissions - v1"
  }, {
    "name" : "elements - v1"
  }, {
    "name" : "entityEvent - v1"
  }, {
    "name" : "explorer - v1"
  }, {
    "name" : "explorer - v2"
  }, {
    "name" : "export - v1"
  }, {
    "name" : "feed - v1"
  }, {
    "name" : "feedStatus - v1"
  }, {
    "name" : "fsVolume - v1"
  }, {
    "name" : "index - v1"
  }, {
    "name" : "index - v2"
  }, {
    "name" : "index volume - v2"
  }, {
    "name" : "index volumeGroup - v2"
  }, {
    "name" : "job - v1"
  }, {
    "name" : "jobNode - v1"
  }, {
    "name" : "kafkaConfig - v1"
  }, {
    "name" : "meta - v1"
  }, {
    "name" : "node - v1"
  }, {
    "name" : "pipeline - v1"
  }, {
    "name" : "processor - v1"
  }, {
    "name" : "processorFilter - v1"
  }, {
    "name" : "processorTask - v1"
  }, {
    "name" : "reference data - v1"
  }, {
    "name" : "remoteSearch - v1"
  }, {
    "name" : "ruleset - v2"
  }, {
    "name" : "scheduledTime - v1"
  }, {
    "name" : "script - v1"
  }, {
    "name" : "searchable - v2"
  }, {
    "name" : "session - v1"
  }, {
    "name" : "sessionInfo - v1"
  }, {
    "name" : "solr index - v1"
  }, {
    "name" : "solrIndex - v1"
  }, {
    "name" : "sqlstatistics query - v2"
  }, {
    "name" : "statistic - v1"
  }, {
    "name" : "statisticrollUp - v1"
  }, {
    "name" : "statsStore - v1"
  }, {
    "name" : "statsStorerollUp - v1"
  }, {
    "name" : "stepping - v1"
  }, {
    "name" : "storedQuery - v1"
  }, {
    "name" : "stream attribute map - v1"
  }, {
    "name" : "stream task - v1"
  }, {
    "name" : "stroom-index query - v2"
  }, {
    "name" : "stroom-index volumeGroup - v1"
  }, {
    "name" : "stroom-index volumes - v1"
  }, {
    "name" : "stroom-solr-index query - v2"
  }, {
    "name" : "stroomSession - v1"
  }, {
    "name" : "suggest - v1"
  }, {
    "name" : "system info - v1"
  }, {
    "name" : "task - v1"
  }, {
    "name" : "textConverter - v1"
  }, {
    "name" : "viewData - v1"
  }, {
    "name" : "visualisation - v1"
  }, {
    "name" : "welcome - v1"
  }, {
    "name" : "xmlSchema - v1"
  }, {
    "name" : "xslt - v1"
  } ]
}
/*
 * This file is generated by jOOQ.
 */
package stroom.storedquery.impl.db.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.storedquery.impl.db.jooq.tables.Query;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueryRecord extends UpdatableRecordImpl<QueryRecord> implements Record13<Integer, Integer, Long, String, Long, String, String, String, String, String, Boolean, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stroom.query.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.query.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.query.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.query.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stroom.query.create_time_ms</code>.
     */
    public void setCreateTimeMs(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.query.create_time_ms</code>.
     */
    public Long getCreateTimeMs() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>stroom.query.create_user</code>.
     */
    public void setCreateUser(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.query.create_user</code>.
     */
    public String getCreateUser() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stroom.query.update_time_ms</code>.
     */
    public void setUpdateTimeMs(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.query.update_time_ms</code>.
     */
    public Long getUpdateTimeMs() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>stroom.query.update_user</code>.
     */
    public void setUpdateUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.query.update_user</code>.
     */
    public String getUpdateUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>stroom.query.dashboard_uuid</code>.
     */
    public void setDashboardUuid(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.query.dashboard_uuid</code>.
     */
    public String getDashboardUuid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>stroom.query.component_id</code>.
     */
    public void setComponentId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.query.component_id</code>.
     */
    public String getComponentId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>stroom.query.name</code>.
     */
    public void setName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.query.name</code>.
     */
    public String getName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>stroom.query.data</code>.
     */
    public void setData(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.query.data</code>.
     */
    public String getData() {
        return (String) get(9);
    }

    /**
     * Setter for <code>stroom.query.favourite</code>.
     */
    public void setFavourite(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.query.favourite</code>.
     */
    public Boolean getFavourite() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>stroom.query.uuid</code>.
     */
    public void setUuid(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>stroom.query.uuid</code>.
     */
    public String getUuid() {
        return (String) get(11);
    }

    /**
     * Setter for <code>stroom.query.owner_uuid</code>.
     */
    public void setOwnerUuid(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>stroom.query.owner_uuid</code>.
     */
    public String getOwnerUuid() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, Long, String, Long, String, String, String, String, String, Boolean, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, Integer, Long, String, Long, String, String, String, String, String, Boolean, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Query.QUERY.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Query.QUERY.VERSION;
    }

    @Override
    public Field<Long> field3() {
        return Query.QUERY.CREATE_TIME_MS;
    }

    @Override
    public Field<String> field4() {
        return Query.QUERY.CREATE_USER;
    }

    @Override
    public Field<Long> field5() {
        return Query.QUERY.UPDATE_TIME_MS;
    }

    @Override
    public Field<String> field6() {
        return Query.QUERY.UPDATE_USER;
    }

    @Override
    public Field<String> field7() {
        return Query.QUERY.DASHBOARD_UUID;
    }

    @Override
    public Field<String> field8() {
        return Query.QUERY.COMPONENT_ID;
    }

    @Override
    public Field<String> field9() {
        return Query.QUERY.NAME;
    }

    @Override
    public Field<String> field10() {
        return Query.QUERY.DATA;
    }

    @Override
    public Field<Boolean> field11() {
        return Query.QUERY.FAVOURITE;
    }

    @Override
    public Field<String> field12() {
        return Query.QUERY.UUID;
    }

    @Override
    public Field<String> field13() {
        return Query.QUERY.OWNER_UUID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public Long component3() {
        return getCreateTimeMs();
    }

    @Override
    public String component4() {
        return getCreateUser();
    }

    @Override
    public Long component5() {
        return getUpdateTimeMs();
    }

    @Override
    public String component6() {
        return getUpdateUser();
    }

    @Override
    public String component7() {
        return getDashboardUuid();
    }

    @Override
    public String component8() {
        return getComponentId();
    }

    @Override
    public String component9() {
        return getName();
    }

    @Override
    public String component10() {
        return getData();
    }

    @Override
    public Boolean component11() {
        return getFavourite();
    }

    @Override
    public String component12() {
        return getUuid();
    }

    @Override
    public String component13() {
        return getOwnerUuid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public Long value3() {
        return getCreateTimeMs();
    }

    @Override
    public String value4() {
        return getCreateUser();
    }

    @Override
    public Long value5() {
        return getUpdateTimeMs();
    }

    @Override
    public String value6() {
        return getUpdateUser();
    }

    @Override
    public String value7() {
        return getDashboardUuid();
    }

    @Override
    public String value8() {
        return getComponentId();
    }

    @Override
    public String value9() {
        return getName();
    }

    @Override
    public String value10() {
        return getData();
    }

    @Override
    public Boolean value11() {
        return getFavourite();
    }

    @Override
    public String value12() {
        return getUuid();
    }

    @Override
    public String value13() {
        return getOwnerUuid();
    }

    @Override
    public QueryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QueryRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public QueryRecord value3(Long value) {
        setCreateTimeMs(value);
        return this;
    }

    @Override
    public QueryRecord value4(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public QueryRecord value5(Long value) {
        setUpdateTimeMs(value);
        return this;
    }

    @Override
    public QueryRecord value6(String value) {
        setUpdateUser(value);
        return this;
    }

    @Override
    public QueryRecord value7(String value) {
        setDashboardUuid(value);
        return this;
    }

    @Override
    public QueryRecord value8(String value) {
        setComponentId(value);
        return this;
    }

    @Override
    public QueryRecord value9(String value) {
        setName(value);
        return this;
    }

    @Override
    public QueryRecord value10(String value) {
        setData(value);
        return this;
    }

    @Override
    public QueryRecord value11(Boolean value) {
        setFavourite(value);
        return this;
    }

    @Override
    public QueryRecord value12(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public QueryRecord value13(String value) {
        setOwnerUuid(value);
        return this;
    }

    @Override
    public QueryRecord values(Integer value1, Integer value2, Long value3, String value4, Long value5, String value6, String value7, String value8, String value9, String value10, Boolean value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QueryRecord
     */
    public QueryRecord() {
        super(Query.QUERY);
    }

    /**
     * Create a detached, initialised QueryRecord
     */
    public QueryRecord(Integer id, Integer version, Long createTimeMs, String createUser, Long updateTimeMs, String updateUser, String dashboardUuid, String componentId, String name, String data, Boolean favourite, String uuid, String ownerUuid) {
        super(Query.QUERY);

        setId(id);
        setVersion(version);
        setCreateTimeMs(createTimeMs);
        setCreateUser(createUser);
        setUpdateTimeMs(updateTimeMs);
        setUpdateUser(updateUser);
        setDashboardUuid(dashboardUuid);
        setComponentId(componentId);
        setName(name);
        setData(data);
        setFavourite(favourite);
        setUuid(uuid);
        setOwnerUuid(ownerUuid);
    }
}

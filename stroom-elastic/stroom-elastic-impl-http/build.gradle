//apply plugin: 'com.github.johnrengelman.shadow'

ext.moduleName = 'stroom.elastic.impl.http'

dependencies {
    implementation project(':stroom-elastic:stroom-elastic-api')
    implementation project(':stroom-elastic:stroom-elastic-impl')
    implementation project(':stroom-pipeline')
    implementation project(':stroom-security:stroom-security-api')
    implementation project(':stroom-security:stroom-security-server')

    implementation libs.stroomDocRef
    implementation libs.stroomQueryAudit

    implementation libs.guice4
    implementation libs.jackson_databind
    implementation libs.javax_inject
    implementation libs.slf4j_api

    testImplementationOnly libs.junit_jupiter_api

    // The following logging libs are needed when running junits outside dropwizard
    testRuntimeOnly libs.javax_activation
    testRuntimeOnly libs.jaxb_runtime
    testRuntimeOnly libs.jcl_over_slf4j
    testRuntimeOnly libs.jul_to_slf4j
    testRuntimeOnly libs.junit_jupiter_engine
    testRuntimeOnly libs.log4j_over_slf4j
    testRuntimeOnly libs.logback_classic
    testRuntimeOnly libs.logback_core
}

//def fatJarName = "stroom-elastic-impl-http.jar"
//
//shadowJar {
//    // Allows us to build fat jars with lots of files
//    zip64 true
//    archiveName fatJarName
//
//    relocate 'org.apache.lucene', 'stroom.org.apache.lucene'
//}
//
//task copyPluginJar(type: Copy) {
////    dependsOn shadowJar
//
//    def jarName =  "${project.buildDir}/libs/${fatJarName}"
//    doFirst {
//        new File(stroomPluginsDir).mkdirs()
//        //logger.info "Copying $jarName to $stroomPluginsDir"
//        println "Copying plugin jar $jarName to $stroomPluginsDir"
//    }
//
//    from jarName
//    into stroomPluginsDir
//}
//
////if we are running the app in an IDE we want this jar in place for stroom to pick up
//tasks.build.dependsOn copyPluginJar


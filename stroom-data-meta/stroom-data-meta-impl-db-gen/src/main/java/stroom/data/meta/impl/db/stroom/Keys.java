/*
 * This file is generated by jOOQ.
 */
package stroom.data.meta.impl.db.stroom;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import stroom.data.meta.impl.db.stroom.tables.Data;
import stroom.data.meta.impl.db.stroom.tables.DataFeed;
import stroom.data.meta.impl.db.stroom.tables.DataProcessor;
import stroom.data.meta.impl.db.stroom.tables.DataType;
import stroom.data.meta.impl.db.stroom.tables.MetaKey;
import stroom.data.meta.impl.db.stroom.tables.MetaVal;
import stroom.data.meta.impl.db.stroom.tables.records.DataFeedRecord;
import stroom.data.meta.impl.db.stroom.tables.records.DataProcessorRecord;
import stroom.data.meta.impl.db.stroom.tables.records.DataRecord;
import stroom.data.meta.impl.db.stroom.tables.records.DataTypeRecord;
import stroom.data.meta.impl.db.stroom.tables.records.MetaKeyRecord;
import stroom.data.meta.impl.db.stroom.tables.records.MetaValRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>stroom</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DataRecord, Long> IDENTITY_DATA = Identities0.IDENTITY_DATA;
    public static final Identity<DataFeedRecord, Integer> IDENTITY_DATA_FEED = Identities0.IDENTITY_DATA_FEED;
    public static final Identity<DataProcessorRecord, Integer> IDENTITY_DATA_PROCESSOR = Identities0.IDENTITY_DATA_PROCESSOR;
    public static final Identity<DataTypeRecord, Integer> IDENTITY_DATA_TYPE = Identities0.IDENTITY_DATA_TYPE;
    public static final Identity<MetaKeyRecord, Integer> IDENTITY_META_KEY = Identities0.IDENTITY_META_KEY;
    public static final Identity<MetaValRecord, Long> IDENTITY_META_VAL = Identities0.IDENTITY_META_VAL;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DataRecord> KEY_DATA_PRIMARY = UniqueKeys0.KEY_DATA_PRIMARY;
    public static final UniqueKey<DataFeedRecord> KEY_DATA_FEED_PRIMARY = UniqueKeys0.KEY_DATA_FEED_PRIMARY;
    public static final UniqueKey<DataFeedRecord> KEY_DATA_FEED_NAME = UniqueKeys0.KEY_DATA_FEED_NAME;
    public static final UniqueKey<DataProcessorRecord> KEY_DATA_PROCESSOR_PRIMARY = UniqueKeys0.KEY_DATA_PROCESSOR_PRIMARY;
    public static final UniqueKey<DataProcessorRecord> KEY_DATA_PROCESSOR_PROCESSOR_ID = UniqueKeys0.KEY_DATA_PROCESSOR_PROCESSOR_ID;
    public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_PRIMARY = UniqueKeys0.KEY_DATA_TYPE_PRIMARY;
    public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_NAME = UniqueKeys0.KEY_DATA_TYPE_NAME;
    public static final UniqueKey<MetaKeyRecord> KEY_META_KEY_PRIMARY = UniqueKeys0.KEY_META_KEY_PRIMARY;
    public static final UniqueKey<MetaKeyRecord> KEY_META_KEY_NAME = UniqueKeys0.KEY_META_KEY_NAME;
    public static final UniqueKey<MetaValRecord> KEY_META_VAL_PRIMARY = UniqueKeys0.KEY_META_VAL_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DataRecord, DataFeedRecord> DATA_FEED_ID = ForeignKeys0.DATA_FEED_ID;
    public static final ForeignKey<DataRecord, DataTypeRecord> DATA_YPE_ID = ForeignKeys0.DATA_YPE_ID;
    public static final ForeignKey<DataRecord, DataProcessorRecord> DATA_PROCESSOR_ID = ForeignKeys0.DATA_PROCESSOR_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DataRecord, Long> IDENTITY_DATA = Internal.createIdentity(Data.DATA, Data.DATA.ID);
        public static Identity<DataFeedRecord, Integer> IDENTITY_DATA_FEED = Internal.createIdentity(DataFeed.DATA_FEED, DataFeed.DATA_FEED.ID);
        public static Identity<DataProcessorRecord, Integer> IDENTITY_DATA_PROCESSOR = Internal.createIdentity(DataProcessor.DATA_PROCESSOR, DataProcessor.DATA_PROCESSOR.ID);
        public static Identity<DataTypeRecord, Integer> IDENTITY_DATA_TYPE = Internal.createIdentity(DataType.DATA_TYPE, DataType.DATA_TYPE.ID);
        public static Identity<MetaKeyRecord, Integer> IDENTITY_META_KEY = Internal.createIdentity(MetaKey.META_KEY, MetaKey.META_KEY.ID);
        public static Identity<MetaValRecord, Long> IDENTITY_META_VAL = Internal.createIdentity(MetaVal.META_VAL, MetaVal.META_VAL.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DataRecord> KEY_DATA_PRIMARY = Internal.createUniqueKey(Data.DATA, "KEY_data_PRIMARY", Data.DATA.ID);
        public static final UniqueKey<DataFeedRecord> KEY_DATA_FEED_PRIMARY = Internal.createUniqueKey(DataFeed.DATA_FEED, "KEY_data_feed_PRIMARY", DataFeed.DATA_FEED.ID);
        public static final UniqueKey<DataFeedRecord> KEY_DATA_FEED_NAME = Internal.createUniqueKey(DataFeed.DATA_FEED, "KEY_data_feed_name", DataFeed.DATA_FEED.NAME);
        public static final UniqueKey<DataProcessorRecord> KEY_DATA_PROCESSOR_PRIMARY = Internal.createUniqueKey(DataProcessor.DATA_PROCESSOR, "KEY_data_processor_PRIMARY", DataProcessor.DATA_PROCESSOR.ID);
        public static final UniqueKey<DataProcessorRecord> KEY_DATA_PROCESSOR_PROCESSOR_ID = Internal.createUniqueKey(DataProcessor.DATA_PROCESSOR, "KEY_data_processor_processor_id", DataProcessor.DATA_PROCESSOR.PROCESSOR_ID);
        public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_PRIMARY = Internal.createUniqueKey(DataType.DATA_TYPE, "KEY_data_type_PRIMARY", DataType.DATA_TYPE.ID);
        public static final UniqueKey<DataTypeRecord> KEY_DATA_TYPE_NAME = Internal.createUniqueKey(DataType.DATA_TYPE, "KEY_data_type_name", DataType.DATA_TYPE.NAME);
        public static final UniqueKey<MetaKeyRecord> KEY_META_KEY_PRIMARY = Internal.createUniqueKey(MetaKey.META_KEY, "KEY_meta_key_PRIMARY", MetaKey.META_KEY.ID);
        public static final UniqueKey<MetaKeyRecord> KEY_META_KEY_NAME = Internal.createUniqueKey(MetaKey.META_KEY, "KEY_meta_key_name", MetaKey.META_KEY.NAME);
        public static final UniqueKey<MetaValRecord> KEY_META_VAL_PRIMARY = Internal.createUniqueKey(MetaVal.META_VAL, "KEY_meta_val_PRIMARY", MetaVal.META_VAL.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<DataRecord, DataFeedRecord> DATA_FEED_ID = Internal.createForeignKey(stroom.data.meta.impl.db.stroom.Keys.KEY_DATA_FEED_PRIMARY, Data.DATA, "data_feed_id", Data.DATA.FEED_ID);
        public static final ForeignKey<DataRecord, DataTypeRecord> DATA_YPE_ID = Internal.createForeignKey(stroom.data.meta.impl.db.stroom.Keys.KEY_DATA_TYPE_PRIMARY, Data.DATA, "data_ype_id", Data.DATA.TYPE_ID);
        public static final ForeignKey<DataRecord, DataProcessorRecord> DATA_PROCESSOR_ID = Internal.createForeignKey(stroom.data.meta.impl.db.stroom.Keys.KEY_DATA_PROCESSOR_PRIMARY, Data.DATA, "data_processor_id", Data.DATA.PROCESSOR_ID);
    }
}

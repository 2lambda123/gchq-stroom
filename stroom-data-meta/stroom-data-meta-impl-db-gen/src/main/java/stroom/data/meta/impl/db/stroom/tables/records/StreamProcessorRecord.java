/*
 * This file is generated by jOOQ.
*/
package stroom.data.meta.impl.db.stroom.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.data.meta.impl.db.stroom.tables.StreamProcessor;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StreamProcessorRecord extends UpdatableRecordImpl<StreamProcessorRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 316799714;

    /**
     * Setter for <code>stroom.stream_processor.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.stream_processor.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.stream_processor.pipeline_uuid</code>.
     */
    public void setPipelineUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.stream_processor.pipeline_uuid</code>.
     */
    public String getPipelineUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>stroom.stream_processor.processor_id</code>.
     */
    public void setProcessorId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.stream_processor.processor_id</code>.
     */
    public Integer getProcessorId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StreamProcessor.STREAM_PROCESSOR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return StreamProcessor.STREAM_PROCESSOR.PIPELINE_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return StreamProcessor.STREAM_PROCESSOR.PROCESSOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPipelineUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getProcessorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPipelineUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProcessorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreamProcessorRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreamProcessorRecord value2(String value) {
        setPipelineUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreamProcessorRecord value3(Integer value) {
        setProcessorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreamProcessorRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StreamProcessorRecord
     */
    public StreamProcessorRecord() {
        super(StreamProcessor.STREAM_PROCESSOR);
    }

    /**
     * Create a detached, initialised StreamProcessorRecord
     */
    public StreamProcessorRecord(Integer id, String pipelineUuid, Integer processorId) {
        super(StreamProcessor.STREAM_PROCESSOR);

        set(0, id);
        set(1, pipelineUuid);
        set(2, processorId);
    }
}

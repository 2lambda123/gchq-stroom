/*
 * This file is generated by jOOQ.
*/
package stroom.data.meta.impl.db.stroom.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import stroom.data.meta.impl.db.stroom.Indexes;
import stroom.data.meta.impl.db.stroom.Keys;
import stroom.data.meta.impl.db.stroom.Stroom;
import stroom.data.meta.impl.db.stroom.tables.records.MetaNumericValueRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetaNumericValue extends TableImpl<MetaNumericValueRecord> {

    private static final long serialVersionUID = -437277677;

    /**
     * The reference instance of <code>stroom.meta_numeric_value</code>
     */
    public static final MetaNumericValue META_NUMERIC_VALUE = new MetaNumericValue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetaNumericValueRecord> getRecordType() {
        return MetaNumericValueRecord.class;
    }

    /**
     * The column <code>stroom.meta_numeric_value.id</code>.
     */
    public final TableField<MetaNumericValueRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>stroom.meta_numeric_value.create_time</code>.
     */
    public final TableField<MetaNumericValueRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>stroom.meta_numeric_value.stream_id</code>.
     */
    public final TableField<MetaNumericValueRecord, Long> STREAM_ID = createField("stream_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>stroom.meta_numeric_value.meta_key_id</code>.
     */
    public final TableField<MetaNumericValueRecord, Integer> META_KEY_ID = createField("meta_key_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>stroom.meta_numeric_value.val</code>.
     */
    public final TableField<MetaNumericValueRecord, Long> VAL = createField("val", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>stroom.meta_numeric_value</code> table reference
     */
    public MetaNumericValue() {
        this(DSL.name("meta_numeric_value"), null);
    }

    /**
     * Create an aliased <code>stroom.meta_numeric_value</code> table reference
     */
    public MetaNumericValue(String alias) {
        this(DSL.name(alias), META_NUMERIC_VALUE);
    }

    /**
     * Create an aliased <code>stroom.meta_numeric_value</code> table reference
     */
    public MetaNumericValue(Name alias) {
        this(alias, META_NUMERIC_VALUE);
    }

    private MetaNumericValue(Name alias, Table<MetaNumericValueRecord> aliased) {
        this(alias, aliased, null);
    }

    private MetaNumericValue(Name alias, Table<MetaNumericValueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Stroom.STROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.META_NUMERIC_VALUE_META_NUMERIC_VALUE_CREATE_TIME_IDX, Indexes.META_NUMERIC_VALUE_META_NUMERIC_VALUE_STREAM_ID_IDX, Indexes.META_NUMERIC_VALUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MetaNumericValueRecord, Long> getIdentity() {
        return Keys.IDENTITY_META_NUMERIC_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MetaNumericValueRecord> getPrimaryKey() {
        return Keys.KEY_META_NUMERIC_VALUE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MetaNumericValueRecord>> getKeys() {
        return Arrays.<UniqueKey<MetaNumericValueRecord>>asList(Keys.KEY_META_NUMERIC_VALUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetaNumericValue as(String alias) {
        return new MetaNumericValue(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetaNumericValue as(Name alias) {
        return new MetaNumericValue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MetaNumericValue rename(String name) {
        return new MetaNumericValue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MetaNumericValue rename(Name name) {
        return new MetaNumericValue(name, null);
    }
}

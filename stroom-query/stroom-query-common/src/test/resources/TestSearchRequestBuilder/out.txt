from 'Test Index'
where UserId = user5 and Description = e0567
and EventTime <= 2000-01-01T00:00:00.000Z
and EventTime >= 2016-01-02T00:00:00.000Z
select "Stream Id", "Event Id", "Event Time", "Status"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "operator",
          "children" : [ {
            "type" : "operator",
            "children" : [ {
              "type" : "operator",
              "children" : [ {
                "type" : "term",
                "field" : "UserId",
                "condition" : "EQUALS",
                "value" : "user5"
              } ]
            } ]
          }, {
            "type" : "operator",
            "children" : [ {
              "type" : "term",
              "field" : "Description",
              "condition" : "EQUALS",
              "value" : "e0567"
            } ]
          } ]
        }, {
          "type" : "operator",
          "children" : [ {
            "type" : "term",
            "field" : "EventTime",
            "condition" : "LESS_THAN_OR_EQUAL_TO",
            "value" : "2000-01-01T00:00:00.000Z"
          } ]
        } ]
      }, {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "EventTime",
          "condition" : "GREATER_THAN_OR_EQUAL_TO",
          "value" : "2016-01-02T00:00:00.000Z"
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "Stream Id",
        "name" : "Stream Id",
        "expression" : "${Stream Id}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Event Id",
        "name" : "Event Id",
        "expression" : "${Event Id}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Event Time",
        "name" : "Event Time",
        "expression" : "${Event Time}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where UserId = user5 and Description = e0567
and EventTime <= 2000-01-01T00:00:00.000Z
and EventTime >= 2016-01-02T00:00:00.000Z
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "operator",
          "children" : [ {
            "type" : "operator",
            "children" : [ {
              "type" : "operator",
              "children" : [ {
                "type" : "term",
                "field" : "UserId",
                "condition" : "EQUALS",
                "value" : "user5"
              } ]
            } ]
          }, {
            "type" : "operator",
            "children" : [ {
              "type" : "term",
              "field" : "Description",
              "condition" : "EQUALS",
              "value" : "e0567"
            } ]
          } ]
        }, {
          "type" : "operator",
          "children" : [ {
            "type" : "term",
            "field" : "EventTime",
            "condition" : "LESS_THAN_OR_EQUAL_TO",
            "value" : "2000-01-01T00:00:00.000Z"
          } ]
        } ]
      }, {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "EventTime",
          "condition" : "GREATER_THAN_OR_EQUAL_TO",
          "value" : "2016-01-02T00:00:00.000Z"
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where UserId = user5 and Description = e0567
and EventTime <= 2000-01-01T00:00:00.000Z
and EventTime >= 2016-01-02T00:00:00.000Z
eval UserId = upperCase(UserId)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status", UserId as "User Id"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "operator",
          "children" : [ {
            "type" : "operator",
            "children" : [ {
              "type" : "operator",
              "children" : [ {
                "type" : "term",
                "field" : "UserId",
                "condition" : "EQUALS",
                "value" : "user5"
              } ]
            } ]
          }, {
            "type" : "operator",
            "children" : [ {
              "type" : "term",
              "field" : "Description",
              "condition" : "EQUALS",
              "value" : "e0567"
            } ]
          } ]
        }, {
          "type" : "operator",
          "children" : [ {
            "type" : "term",
            "field" : "EventTime",
            "condition" : "LESS_THAN_OR_EQUAL_TO",
            "value" : "2000-01-01T00:00:00.000Z"
          } ]
        } ]
      }, {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "EventTime",
          "condition" : "GREATER_THAN_OR_EQUAL_TO",
          "value" : "2016-01-02T00:00:00.000Z"
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "UserId",
        "name" : "User Id",
        "expression" : "upperCase(${UserId})",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where EventTime > 2023-05-05T00:00:00.000Z and  (Field = 'blah' or Field = 'blip')
eval UserId = upperCase(UserId)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status", UserId as "User Id"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "operator",
          "children" : [ {
            "type" : "term",
            "field" : "EventTime",
            "condition" : "GREATER_THAN",
            "value" : "2023-05-05T00:00:00.000Z"
          } ]
        } ]
      }, {
        "type" : "operator",
        "children" : [ {
          "type" : "operator",
          "op" : "OR",
          "children" : [ {
            "type" : "operator",
            "children" : [ {
              "type" : "term",
              "field" : "Field",
              "condition" : "EQUALS",
              "value" : "blah"
            } ]
          }, {
            "type" : "operator",
            "children" : [ {
              "type" : "term",
              "field" : "Field",
              "condition" : "EQUALS",
              "value" : "blip"
            } ]
          } ]
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "UserId",
        "name" : "User Id",
        "expression" : "upperCase(${UserId})",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where EventTime > 2023-05-05T00:00:00.000Z and  (Field = 'blah' or Field = 'blip')
eval UserId = upperCase(UserId)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status", UserId as "User Id"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "operator",
          "children" : [ {
            "type" : "term",
            "field" : "EventTime",
            "condition" : "GREATER_THAN",
            "value" : "2023-05-05T00:00:00.000Z"
          } ]
        } ]
      }, {
        "type" : "operator",
        "children" : [ {
          "type" : "operator",
          "op" : "OR",
          "children" : [ {
            "type" : "operator",
            "children" : [ {
              "type" : "term",
              "field" : "Field",
              "condition" : "EQUALS",
              "value" : "blah"
            } ]
          }, {
            "type" : "operator",
            "children" : [ {
              "type" : "term",
              "field" : "Field",
              "condition" : "EQUALS",
              "value" : "blip"
            } ]
          } ]
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "UserId",
        "name" : "User Id",
        "expression" : "upperCase(${UserId})",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where EventTime <= day()-1d-1h
eval UserId = upperCase(UserId)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status", UserId as "User Id"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "EventTime",
          "condition" : "LESS_THAN_OR_EQUAL_TO",
          "value" : "day() - 1d - 1h"
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "UserId",
        "name" : "User Id",
        "expression" : "upperCase(${UserId})",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from "index_view"
where EventTime between 2022-05-05T00:00:00.000Z and 2023-05-05T00:00:00.000Z
select StreamId
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "index_view"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "EventTime",
          "condition" : "BETWEEN",
          "value" : "2022-05-05T00:00:00.000Z, 2023-05-05T00:00:00.000Z"
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "StreamId",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where "my.name" = "foo bar"
eval UserId = upperCase(UserId)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status", UserId as "User Id"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "my.name",
          "condition" : "EQUALS",
          "value" : "foo bar"
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "UserId",
        "name" : "User Id",
        "expression" : "upperCase(${UserId})",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where 'my.name' = 'foo bar'
eval UserId = upperCase(UserId)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status", UserId as "User Id"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "my.name",
          "condition" : "EQUALS",
          "value" : "foo bar"
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "UserId",
        "name" : "User Id",
        "expression" : "upperCase(${UserId})",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
where 'my.name' = '"foo bar"'
eval UserId = upperCase(UserId)
select StreamId as "Stream Id", EventId as "Event Id", EventTime as "Event Time", "Status", UserId as "User Id"
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator",
      "children" : [ {
        "type" : "operator",
        "children" : [ {
          "type" : "term",
          "field" : "my.name",
          "condition" : "EQUALS",
          "value" : "\"foo bar\""
        } ]
      } ]
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventId",
        "name" : "Event Id",
        "expression" : "${EventId}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "EventTime",
        "name" : "Event Time",
        "expression" : "${EventTime}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "Status",
        "name" : "Status",
        "expression" : "${Status}",
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "UserId",
        "name" : "User Id",
        "expression" : "upperCase(${UserId})",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----
from 'Test Index'
eval count = count()
group by StreamId
select StreamId as "Stream Id", count as Count
=====
{
  "key" : {
    "uuid" : "test"
  },
  "query" : {
    "dataSource" : {
      "name" : "Test Index"
    },
    "expression" : {
      "type" : "operator"
    }
  },
  "resultRequests" : [ {
    "componentId" : "table",
    "mappings" : [ {
      "fields" : [ {
        "id" : "StreamId",
        "name" : "Stream Id",
        "expression" : "${StreamId}",
        "group" : 0,
        "width" : 200,
        "visible" : true,
        "special" : false
      }, {
        "id" : "count",
        "name" : "Count",
        "expression" : "count()",
        "width" : 200,
        "visible" : true,
        "special" : false
      } ]
    } ],
    "resultStyle" : "TABLE",
    "fetch" : "ALL"
  } ],
  "incremental" : false,
  "dateTimeSettings" : {
    "dateTimePattern" : "yyyy-MM-dd'T'HH:mm:ss.SSSXX",
    "localZoneId" : "Z",
    "timeZone" : {
      "use" : "UTC"
    }
  }
}
-----

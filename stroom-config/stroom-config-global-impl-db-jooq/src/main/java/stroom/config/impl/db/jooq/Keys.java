/*
 * This file is generated by jOOQ.
 */
package stroom.config.impl.db.jooq;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import stroom.config.impl.db.jooq.tables.Config;
import stroom.config.impl.db.jooq.tables.records.ConfigRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>stroom</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ConfigRecord, Integer> IDENTITY_CONFIG = Identities0.IDENTITY_CONFIG;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ConfigRecord> KEY_CONFIG_PRIMARY = UniqueKeys0.KEY_CONFIG_PRIMARY;
    public static final UniqueKey<ConfigRecord> KEY_CONFIG_NAME = UniqueKeys0.KEY_CONFIG_NAME;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ConfigRecord, Integer> IDENTITY_CONFIG = Internal.createIdentity(Config.CONFIG, Config.CONFIG.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ConfigRecord> KEY_CONFIG_PRIMARY = Internal.createUniqueKey(Config.CONFIG, "KEY_config_PRIMARY", Config.CONFIG.ID);
        public static final UniqueKey<ConfigRecord> KEY_CONFIG_NAME = Internal.createUniqueKey(Config.CONFIG, "KEY_config_name", Config.CONFIG.NAME);
    }
}

package stroom.config.global.impl;

import stroom.config.app.AppConfig;
import stroom.util.logging.LambdaLogger;
import stroom.util.logging.LambdaLoggerFactory;

import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

class TestGlobalConfigModule {

    private static final LambdaLogger LOGGER = LambdaLoggerFactory.getLogger(TestGlobalConfigModule.class);

    public static void main(String[] args) {
        final ConfigMapper configMapper = new ConfigMapper(new AppConfig());
        final Set<String> simpleNames = new HashSet<>();
        final String methodsStr = configMapper.getInjectableConfigClasses()
                .stream()
                .map(clazz -> {
                    String methodNameSuffix = clazz.getSimpleName();
                    int i = 2;
                    while (simpleNames.contains(methodNameSuffix)) {
                        LOGGER.warn("Class name " + methodNameSuffix + " is already used");
                        methodNameSuffix = clazz.getSimpleName() + i++;
                    }
                    simpleNames.add(methodNameSuffix);

                    final String template = """
                            @Provides
                            @SuppressWarnings("unused")
                            %s get%s(
                                    final ConfigMapper configMapper) {
                                return configMapper.getConfigObject(
                                        %s.class);
                            }
                            """;
                    return String.format(template, clazz.getName(), methodNameSuffix, clazz.getName());
                })
                .collect(Collectors.joining("\n"));

        System.out.println("// START These methods are generated by "
                + TestGlobalConfigModule.class.getName()
                + "\n"
                + methodsStr
                + "\n"
                + "// END These methods are generated by "
                + TestGlobalConfigModule.class.getName());

        // TODO 24/11/2021 AT: Do something like GenerateTestOpenIdDetails to write the methods directly
        //  into GlobalConfigModule.
    }

}

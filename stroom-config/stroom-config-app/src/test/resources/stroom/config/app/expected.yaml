---
appConfig:
  haltBootOnConfigValidationFailure: true
  nodeUri:
    scheme: null
    hostname: null
    port: null
    pathPrefix: null
  publicUri:
    scheme: null
    hostname: null
    port: null
    pathPrefix: null
  uiUri:
    scheme: null
    hostname: null
    port: null
    pathPrefix: null
  activity:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  annotation:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
    statusValues:
    - "New"
    - "Assigned"
    - "Closed"
    standardComments: []
    createText: "Create Annotation"
  authentication:
    certificateDnPattern: ".*\\((.*)\\)"
    certificateDnCaptureGroupIndex: 1
    loginUrl: "/s/login"
    changePasswordUrl: "/s/changepassword"
    failedLoginLockThreshold: 3
    unauthorisedUrl: "/s/unauthorised"
    email:
      fromAddress: "noreply@stroom"
      fromName: "Stroom User Accounts"
      passwordResetSubject: "Password reset for Stroom"
      passwordResetText: "A password reset has been requested for this email address.\
        \ Please visit the following URL to reset your password: %s."
      passwordResetUrl: "/s/resetPassword/?user=%s&token=%s"
      allowPasswordResets: false
      smtp:
        host: "localhost"
        port: 2525
        transport: "plain"
        username: "username"
        password: "password"
        transportStrategy: "SMTP_PLAIN"
    token:
      minutesUntilExpirationForUserToken: 43200
      minutesUntilExpirationForEmailResetToken: 5
      jwsIssuer: "stroom"
      requireExpirationTime: false
      algorithm: "RS256"
    oauth2:
      accessCodeCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
    passwordIntegrityChecks:
      neverUsedAccountDeactivationThreshold: "P30D"
      unusedAccountDeactivationThreshold: "P90D"
      mandatoryPasswordChangeDuration: "P90D"
      durationBetweenChecks: "PT2M"
      forcePasswordChangeOnFirstLogin: true
      passwordComplexityRegex: ".*"
      minimumPasswordLength: 0
  benchmark:
    streamCount: 1000
    recordCount: 10000
    concurrentWriters: 10
  cluster:
    clusterCallUseLocal: true
    clusterCallReadTimeout: "PT30S"
    clusterCallIgnoreSSLHostnameVerifier: true
    clusterResponseTimeout: "PT30S"
  clusterLock:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  clusterTask:
    clusterResultCollectorCache:
      maximumSize: 1000000
      expireAfterAccess: "PT1M"
      expireAfterWrite: null
  commonDbDetails:
    connection:
      jdbcDriverClassName: "com.mysql.cj.jdbc.Driver"
      jdbcDriverUrl: "jdbc:mysql://localhost:3307/stroom?useUnicode=yes&characterEncoding=UTF-8"
      jdbcDriverUsername: "stroomuser"
      jdbcDriverPassword: "stroompassword1"
    connectionPool:
      cachePrepStmts: null
      prepStmtCacheSize: null
      prepStmtCacheSqlLimit: null
      connectionTimeout: null
      idleTimeout: null
      maxLifetime: null
      minimumIdle: null
      maxPoolSize: null
  contentPackImport:
    enabled: false
    importDirectory: null
  core:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  dashboard:
    activeQueriesCache:
      maximumSize: 100
      expireAfterAccess: "PT1M"
      expireAfterWrite: null
  data:
    meta:
      metaFeedCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      metaProcessorCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      metaTypeCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      db:
        connection:
          jdbcDriverClassName: null
          jdbcDriverUrl: null
          jdbcDriverUsername: null
          jdbcDriverPassword: null
        connectionPool:
          cachePrepStmts: null
          prepStmtCacheSize: null
          prepStmtCacheSqlLimit: null
          connectionTimeout: null
          idleTimeout: null
          maxLifetime: null
          minimumIdle: null
          maxPoolSize: null
      metaValue:
        deleteAge: "P30D"
        deleteBatchSize: 1000
        flushBatchSize: 1000
        addAsync: true
    retention:
      deleteBatchSize: 1000
    store:
      deletePurgeAge: "P7D"
      deleteBatchSize: 1000
      fileSystemCleanBatchSize: 20
      fileSystemCleanDeleteOut: false
      fileSystemCleanOldAge: "P1D"
      db:
        connection:
          jdbcDriverClassName: null
          jdbcDriverUrl: null
          jdbcDriverUsername: null
          jdbcDriverPassword: null
        connectionPool:
          cachePrepStmts: null
          prepStmtCacheSize: null
          prepStmtCacheSqlLimit: null
          connectionTimeout: null
          idleTimeout: null
          maxLifetime: null
          minimumIdle: null
          maxPoolSize: null
    filesystemVolume:
      volumeSelector: "RoundRobin"
      createDefaultOnStart: true
      feedPathCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      typePathCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
  dataSourceUrl:
    index: "/api/stroom-index/v2"
    solrIndex: "/api/stroom-solr-index/v2"
    statisticStore: "/api/sqlstatistics/v2"
    searchable: "/api/searchable/v2"
  docstore:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  explorer:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  export:
    enabled: false
  feed:
    unknownClassification: "UNKNOWN CLASSIFICATION"
    feedNamePattern: "^[A-Z0-9_-]{3,}$"
    feedDocCache:
      maximumSize: 1000
      expireAfterAccess: "PT10S"
      expireAfterWrite: null
  index:
    ramBufferSizeMB: 1024
    indexStructureCache:
      maximumSize: 100
      expireAfterAccess: null
      expireAfterWrite: "PT10S"
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
    writer:
      cache:
        timeToLive: null
        timeToIdle: null
        minItems: 0
        coreItems: 50
        maxItems: 100
  job:
    enabled: true
    executionInterval: "10s"
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  kafka:
    skeletonConfigContent: "# The following properties are taken from the v2.2 documentation\n\
      # for the Kafka Producer and can be uncommented and set as required.\n# NOTE\
      \ key.serializer and value.serializer should not be set as\n# these are set\
      \ within stroom.\n# https://kafka.apache.org/22/documentation.html#producerconfigs\n\
      \n# The following properties are recommended to be set with values appropriate\n\
      # to your environment.\n\n# The list of kafka brokers (host:port) to bootstrap\
      \ the Kafka client with.\n# This can be one or more of the  brokers in the cluster.\n\
      bootstrap.servers=kafka:9092,localhost:9092\n\n# The ID to use to identify this\
      \ Kafka producer instance.\n# E.g. 'stroom', 'stroom-statistics', 'stroom-analytics',\
      \ etc.\nclient.id=stroom\n\n\n# The following properties are all remaining producer\
      \ properties that can\n# be set if the Kafka default values are not suitable.\n\
      #acks=\n#buffer.memory=\n#compression.type=\n#retries=\n#ssl.key.password=\n\
      #ssl.keystore.location=\n#ssl.keystore.password=\n#ssl.truststore.location=\n\
      #ssl.truststore.password=\n#batch.size=\n#client.dns.lookup=\n#connections.max.idle.ms=\n\
      #delivery.timeout.ms=\n#linger.ms=\n#max.block.ms=\n#max.request.size=\n#partitioner.class=\n\
      #receive.buffer.bytes=\n#request.timeout.ms=\n#sasl.client.callback.handler.class=\n\
      #sasl.jaas.config=\n#sasl.kerberos.service.name=\n#sasl.login.callback.handler.class=\n\
      #sasl.login.class=\n#sasl.mechanism=\n#security.protocol=\n#send.buffer.bytes=\n\
      #ssl.enabled.protocols=\n#ssl.keystore.type=\n#ssl.protocol=\n#ssl.provider=\n\
      #ssl.truststore.type=\n#enable.idempotence=\n#interceptor.classes=\n#max.in.flight.requests.per.connection=\n\
      #metadata.max.age.ms=\n#metric.reporters=\n#metrics.num.samples=\n#metrics.recording.level=\n\
      #metrics.sample.window.ms=\n#reconnect.backoff.max.ms=\n#reconnect.backoff.ms=\n\
      #retry.backoff.ms=\n#sasl.kerberos.kinit.cmd=\n#sasl.kerberos.min.time.before.relogin=\n\
      #sasl.kerberos.ticket.renew.jitter=\n#sasl.kerberos.ticket.renew.window.factor=\n\
      #sasl.login.refresh.buffer.seconds=\n#sasl.login.refresh.min.period.seconds=\n\
      #sasl.login.refresh.window.factor=\n#sasl.login.refresh.window.jitter=\n#ssl.cipher.suites=\n\
      #ssl.endpoint.identification.algorithm=\n#ssl.keymanager.algorithm=\n#ssl.secure.random.implementation=\n\
      #ssl.trustmanager.algorithm=\n#transaction.timeout.ms=\n#transactional.id=\n"
    kafkaConfigDocCache:
      maximumSize: 1000
      expireAfterAccess: "PT10S"
      expireAfterWrite: null
  lifecycle:
    enabled: true
  node:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
    name: "tba"
    status:
      heapHistogram:
        classNameMatchRegex: "^stroom\\..*$"
        classNameReplacementRegex: "((?<=\\$Proxy)[0-9]+|(?<=\\$\\$)[0-9a-f]+|(?<=\\\
          $\\$Lambda\\$)[0-9]+\\/[0-9]+)"
  path:
    temp: "/tmp"
  pipeline:
    httpClientCache:
      maximumSize: 1000
      expireAfterAccess: "PT10M"
      expireAfterWrite: null
    pipelineDataCache:
      maximumSize: 1000
      expireAfterAccess: "PT10M"
      expireAfterWrite: null
    appender:
      maxActiveDestinations: 100
    parser:
      secureProcessing: true
      cache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
    referenceData:
      localDir: "${stroom.temp}/refDataOffHeapStore"
      maxPutsBeforeCommit: 1000
      maxReaders: 100
      maxStoreSize: "50G"
      purgeAge: "P30D"
      effectiveStreamCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      readAheadEnabled: true
    xmlSchema:
      cache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
    xslt:
      maxElements: 1000000
      cache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
  processor:
    assignTasks: true
    createTasks: true
    deleteAge: "P1D"
    fillTaskQueue: true
    queueSize: 1000
    databaseMultiInsertMaxBatchSize: 500
    processorCache:
      maximumSize: 1000
      expireAfterAccess: "PT10S"
      expireAfterWrite: null
    processorFilterCache:
      maximumSize: 1000
      expireAfterAccess: "PT10S"
      expireAfterWrite: null
    processorNodeCache:
      maximumSize: 1000
      expireAfterAccess: "PT10M"
      expireAfterWrite: null
    processorFeedCache:
      maximumSize: 1000
      expireAfterAccess: "PT10M"
      expireAfterWrite: null
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  properties:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  proxyAggregation:
    proxyDir: "${stroom.temp}/proxy"
    proxyThreads: 10
    maxFileScan: 100000
    maxConcurrentMappedFiles: 100000
    maxFilesPerAggregate: 10000
    maxUncompressedFileSize: "1G"
    buffferSize: 8192
  receive:
    receiptPolicyUuid: null
    bufferSize: 8192
    unknownClassification: "UNKNOWN CLASSIFICATION"
    feedNamePattern: "^[A-Z0-9_-]{3,}$"
  search:
    maxStoredDataQueueSize: 1000
    maxBooleanClauseCount: 1024
    storeSize: "1000000,100,10,1"
    extraction:
      maxStoredDataQueueSize: 1000
      maxThreads: 4
      maxThreadsPerTask: 2
    shard:
      maxDocIdQueueSize: 1000000
      maxThreads: 4
      maxThreadsPerTask: 2
      searchResultCache:
        maximumSize: 10000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      indexShardSearcherCache:
        maximumSize: 2
        expireAfterAccess: "PT1M"
        expireAfterWrite: null
  searchable:
    storeSize: "1000000,100,10,1"
    searchResultCache:
      maximumSize: 10000
      expireAfterAccess: "PT10M"
      expireAfterWrite: null
  security:
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
    authentication:
      authenticationServiceUrl: null
      authenticationRequired: true
      openId:
        useInternal: true
        issuer: "accounts.google.com"
        authEndpoint: "https://accounts.google.com/o/oauth2/v2/auth"
        tokenEndpoint: "https://accounts.google.com/o/oauth2/token"
        jwksUri: "https://www.googleapis.com/oauth2/v3/certs"
        clientId: null
        clientSecret: null
      preventLogin: false
      userNamePattern: "^[a-zA-Z0-9_-]{3,}$"
    authorisation:
      userGroupsCache:
        maximumSize: 1000
        expireAfterAccess: "PT30M"
        expireAfterWrite: null
      userAppPermissionsCache:
        maximumSize: 1000
        expireAfterAccess: "PT30M"
        expireAfterWrite: null
      userCache:
        maximumSize: 1000
        expireAfterAccess: "PT30M"
        expireAfterWrite: null
      userDocumentPermissionsCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      documentPermissionCache:
        maximumSize: 1000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
    webContent:
      contentTypeOptions: "nosniff"
      frameOptions: "sameorigin"
      xssProtection: "1; mode=block"
      contentSecurityPolicy: "default-src 'self'; script-src 'self' 'unsafe-eval'\
        \ 'unsafe-inline'; img-src 'self' data:; style-src 'self' 'unsafe-inline';\
        \ frame-ancestors 'self';"
  serviceDiscovery:
    enabled: false
    zookeeperUrl: "localhost:2181"
    servicesHostNameOrIpAddress: "localhost"
    servicesPort: 8080
    curatorBaseSleepTimeMs: 5000
    curatorMaxSleepTimeMs: 300000
    curatorMaxRetries: 100
    zookeeperBasePath: "/stroom-services"
  sessionCookie:
    secure: true
    httpOnly: true
  solr:
    indexClientCache:
      maximumSize: 100
      expireAfterAccess: "PT10M"
      expireAfterWrite: null
    indexCache:
      maximumSize: 100
      expireAfterAccess: null
      expireAfterWrite: "PT10M"
    search:
      maxStoredDataQueueSize: 1000
      maxBooleanClauseCount: 1024
      storeSize: "1000000,100,10,1"
      searchResultCache:
        maximumSize: 10000
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      extraction:
        maxStoredDataQueueSize: 1000
        maxThreads: 4
        maxThreadsPerTask: 2
  statistics:
    sql:
      docRefType: "StatisticStore"
      statisticAggregationBatchSize: 1000000
      maxProcessingAge: null
      dataSourceCache:
        maximumSize: 100
        expireAfterAccess: "PT10M"
        expireAfterWrite: null
      db:
        connection:
          jdbcDriverClassName: null
          jdbcDriverUrl: null
          jdbcDriverUsername: null
          jdbcDriverPassword: null
        connectionPool:
          cachePrepStmts: null
          prepStmtCacheSize: null
          prepStmtCacheSqlLimit: null
          connectionTimeout: null
          idleTimeout: null
          maxLifetime: null
          minimumIdle: null
          maxPoolSize: null
      search:
        storeSize: "1000000,100,10,1"
        resultHandlerBatchSize: 5000
        maxResults: 100000
        fetchSize: 5000
        searchResultCache:
          maximumSize: 10000
          expireAfterAccess: "PT10M"
          expireAfterWrite: null
    hbase:
      docRefType: "StroomStatsStore"
      kafkaConfigUuid: null
      eventsPerMessage: 100
      kafkaTopics:
        count: "statisticEvents-Count"
        value: "statisticEvents-Value"
    internal:
      benchmarkCluster:
      - type: "StatisticStore"
        uuid: "946a88c6-a59a-11e6-bdc4-0242ac110002"
        name: "Benchmark-Cluster Test"
      - type: "StroomStatsStore"
        uuid: "2503f703-5ce0-4432-b9d4-e3272178f47e"
        name: "Benchmark-Cluster Test"
      cpu:
      - type: "StatisticStore"
        uuid: "af08c4a7-ee7c-44e4-8f5e-e9c6be280434"
        name: "CPU"
      - type: "StroomStatsStore"
        uuid: "1edfd582-5e60-413a-b91c-151bd544da47"
        name: "CPU"
      eventsPerSecond:
      - type: "StatisticStore"
        uuid: "a9936548-2572-448b-9d5b-8543052c4d92"
        name: "EPS"
      - type: "StroomStatsStore"
        uuid: "cde67df0-0f77-45d3-b2c0-ee8bb7b3c9c6"
        name: "EPS"
      heapHistogramBytes:
      - type: "StatisticStore"
        uuid: "934a1600-b456-49bf-9aea-f1e84025febd"
        name: "Heap Histogram Bytes"
      - type: "StroomStatsStore"
        uuid: "b0110ab4-ac25-4b73-b4f6-96f2b50b456a"
        name: "Heap Histogram Bytes"
      heapHistogramInstances:
      - type: "StatisticStore"
        uuid: "e4f243b8-2c70-4d6e-9d5a-16466bf8764f"
        name: "Heap Histogram Instances"
      - type: "StroomStatsStore"
        uuid: "bdd933a4-4309-47fd-98f6-1bc2eb555f20"
        name: "Heap Histogram Instances"
      memory:
      - type: "StatisticStore"
        uuid: "77c09ccb-e251-4ca5-bca0-56a842654397"
        name: "Memory"
      - type: "StroomStatsStore"
        uuid: "d8a7da4f-ef6d-47e0-b16a-af26367a2798"
        name: "Memory"
      metaDataStreamSize:
      - type: "StatisticStore"
        uuid: "946a8814-a59a-11e6-bdc4-0242ac110002"
        name: "Meta Data-Stream Size"
      - type: "StroomStatsStore"
        uuid: "3b25d63b-5472-44d0-80e8-8eea94f40f14"
        name: "Meta Data-Stream Size"
      metaDataStreamsReceived:
      - type: "StatisticStore"
        uuid: "946a87bc-a59a-11e6-bdc4-0242ac110002"
        name: "Meta Data-Streams Received"
      - type: "StroomStatsStore"
        uuid: "5535f493-29ae-4ee6-bba6-735aa3104136"
        name: "Meta Data-Streams Received"
      pipelineStreamProcessor:
      - type: "StatisticStore"
        uuid: "946a80fc-a59a-11e6-bdc4-0242ac110002"
        name: "PipelineStreamProcessor"
      - type: "StroomStatsStore"
        uuid: "efd9bad4-0bab-460f-ae98-79e9717deeaf"
        name: "PipelineStreamProcessor"
      streamTaskQueueSize:
      - type: "StatisticStore"
        uuid: "946a7f0f-a59a-11e6-bdc4-0242ac110002"
        name: "Stream Task Queue Size"
      - type: "StroomStatsStore"
        uuid: "4ce8d6e7-94be-40e1-8294-bf29dd089962"
        name: "Stream Task Queue Size"
      volumes:
      - type: "StatisticStore"
        uuid: "ac4d8d10-6f75-4946-9708-18b8cb42a5a3"
        name: "Volumes"
      - type: "StroomStatsStore"
        uuid: "60f4f5f0-4cc3-42d6-8fe7-21a7cec30f8e"
        name: "Volumes"
  queryHistory:
    itemsRetention: 100
    daysRetention: 365
    db:
      connection:
        jdbcDriverClassName: null
        jdbcDriverUrl: null
        jdbcDriverUsername: null
        jdbcDriverPassword: null
      connectionPool:
        cachePrepStmts: null
        prepStmtCacheSize: null
        prepStmtCacheSqlLimit: null
        connectionTimeout: null
        idleTimeout: null
        maxLifetime: null
        minimumIdle: null
        maxPoolSize: null
  ui:
    welcomeHtml: "<h1>About Stroom</h1><p>Stroom is designed to receive data from\
      \ multiple systems.</p>"
    aboutHtml: "<h1>About Stroom</h1><p>Stroom is designed to receive data from multiple\
      \ systems.</p>"
    defaultMaxResults: "1000000,100,10,1"
    process:
      defaultTimeLimit: 30
      defaultRecordLimit: 1000000
    helpUrl: "https://gchq.github.io/stroom-docs"
    theme:
      backgroundAttachment: "scroll"
      backgroundColor: "#1E88E5"
      backgroundImage: "none"
      backgroundPosition: "0 0"
      backgroundRepeat: "repeat"
      backgroundOpacity: "0"
      tubeVisible: "hidden"
      tubeOpacity: "0.6"
      labelColours: "TEST1=#FF0000,TEST2=#FF9900"
    query:
      infoPopup:
        enabled: false
        title: "Please Provide Query Info"
        validationRegex: "^[\\s\\S]{3,}$"
    namePattern: "^[a-zA-Z0-9_\\- \\.\\(\\)]{1,}$"
    htmlTitle: "Stroom"
    oncontextmenu: "return false;"
    splash:
      enabled: false
      title: "Splash Screen"
      body: "<h1>About Stroom</h1><p>Stroom is designed to receive data from multiple\
        \ systems.</p>"
      version: "v0.1"
    activity:
      enabled: false
      chooseOnStartup: false
      managerTitle: "Choose Activity"
      editorTitle: "Edit Activity"
      editorBody: "Activity Code:</br><input type=\"text\" name=\"code\"></input></br></br>Activity\
        \ Description:</br><textarea rows=\"4\" style=\"width:100%;height:80px\" name=\"\
        description\" validation=\".{80,}\" validationMessage=\"The activity description\
        \ must be at least 80 characters long.\" ></textarea>Explain what the activity\
        \ is"
    url:
      users: "../../../s/users"
      apiKeys: "../../../s/apiKeys"
      changepassword: "../../../s/changepassword"
    uiPreferences:
      allowPasswordResets: true
      dateFormat: "YYYY-MM-DDTHH:mm:ss.SSSZ"
      defaultApiKeyExpiryInMinutes: 525600
  volumes:
    resilientReplicationCount: 1
    preferLocalVolumes: false
    volumeSelector: "RoundRobin"
    createDefaultOnStart: true

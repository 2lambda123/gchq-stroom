package stroom.util.authentication;

/**
 * A set of hard-coded credentials for use ONLY in testing. They allow us to run
 * stroom and stroom-proxy such that API calls from proxy to stroom will pass
 * authentication.
 * <p>
 * The values used in the this class are generated by the main() method in
 * {@link stroom.authentication.oauth2.GenerateTestOpenIdDetails}
 * <p>
 * These default values will only be used if the following prop is set to true
 * {@link stroom.authentication.config.AuthenticationConfig#isUseDefaultOpenIdCredentials()}
 */
public class DefaultOpenIdCredentials {

    // Made with a public ctor so it is injectable and mockable, if required.
    public DefaultOpenIdCredentials() {
    }









    // ------------------------------------------------------------------------------------------------
    // The content between these dashed lines was generated using stroom.authentication.oauth2.GenerateTestOpenIdDetails
    // at 2020-04-28T15:00:28.303958Z
    // The dashed lines are important, don't remove them!
    private static final String OAUTH2_CLIENT_ID = "61MTRa0xETLSVme9bE5WU2_MM6Ccd52VqYccjcEVj3tWHGGs1gcCfw==";
    private static final String OAUTH2_CLIENT_NAME = "Stroom Client Internal (TEST ONLY)";
    private static final String OAUTH2_CLIENT_SECRET = "uHzcvWFX5MnK-tmhCsZM7vjQK3w=";
    private static final String OAUTH2_CLIENT_URI_PATTERN = ".*";
    private static final String PUBLIC_KEY_ID = "fc5ab791-a5fe-40e8-abd7-b039a440fef7";
    private static final String PUBLIC_KEY_JSON = "{\"kty\":\"RSA\",\"kid\":\"fc5ab791-a5fe-40e8-abd7-b039a440fef7\",\"use\":\"sig\",\"alg\":\"RS256\",\"n\":\"07fILnPNRNJodkEo8SCLH5SX81y4d5cMKqfT5cZEs1lNcDJMTqxl-rHy_gxqdakzS-ykQqpBFpKs57HpxXmh1QQjOu7mMSmzu7HzqxLL5v62-cDWqFI_W3UoYa8Dp0cpxhLdlP_-b47stQA6SlmoRGx79HAqdCSNhBgzeDr-AJkEJ_JtS3cuwmPrQIbt0fZ8QNLWDtqyYvC_BKlhZ6IS5j_PO4V6UUvWVlXAQDHrL7tlw665BXD4m4UIDpYakWDN00nbw7PK-MvVpF7YwlH_RsFyfxsXwW0wY9IDylv_wEZtzWXNr6O7D_s4fBy5a9pV0behmEflLAXAY0jrRvtPmQ\",\"e\":\"AQAB\",\"d\":\"sa5mcR28osqW4s_SpXLzb2CMmbAyHCOHEXFh80-PLpl-1O9RfSFQQLIBRVZ0LiT_KPQD8vLhxyj3tUdp8tIekCB11KrUQ2RFM_unjOYse8M_GqHNRNwp0f6kEj8IKOYfV91TWw3wof1oCIuVX_qYrjwBV2afKnPW1Ipe_8M6kpJRHZFLb3CMOxAbXHzsVi_huXrBCjLCTGdAsE6Qh3a8nUZq56TJVhzuC7-dBGZcpEUJIuGm7kcCjU05_UWFdOKVATtkVepHquQSHASqn1cWhCqyu1enAGP7D745PbP_IQwlVd8upmYnaLe_JFmeftXbDu8lKSYZcVxaWjXNqExslQ\",\"p\":\"92rW2nZYGJhkd9BxGRq1FM7nzJFTm-wOso0GTBlRnpYkH0C9pwp-_XrYu5hUYmV4bt2ZsKgIBG4Dtx_9eYFeVTdNFYeAWG_gf_KDwPhXi7ZPs02wNCQAQf2Nhn4GVObGT8pr334rKPwm5yQmb47RPt9aq8tWemMBzZCXJ-hpZrc\",\"q\":\"2w_q_-WmRbOuDT8SjhRIfkTPO8qUHP-dUgyF03frVMdlrbU8LEZk3Z7RrLNH72PcO-RoVGx7PMIKEUeqjzTFOT1dceK2IMO00lrRhmgoKK1sCBmuwkUq7vy7IIfMhkPtlp9h49pdGKJE5CUUouaxHu4bpfh01USQe2Q_emfWLC8\",\"dp\":\"nCenURyOP3-3MVOyfgi4L1jjPd6fKXLUV-bgCZmVRQU36S3ARTQ_sBYfwk7DO5MVbsuYG8IBxWH2IFclcNGwyxHrKeJqo-aAh-B1PY7AGmLHbMBkrJPoQb4Y28CgmGdK1MNKUDVeYjC7EPlk9NXrxMXNgU4F15qzYZ2XeU2bcIM\",\"dq\":\"ywVrpBHwEXU-_-POjILb1Lps3VsX_fAgm2QjuyLOpVnPMDhhNh9fZ83DQS0-o-yGtbMvxd5sMJkcv3sN5X7gsfXfXqbgaGk4ciPdP5XUci6XisJSppV3_tmXi8SPlnfp_8hi7sr3sNbixhZfk8H9sU63rRAhJ25OAS2dbxJA-d0\",\"qi\":\"vQthPgLdaaI8d6q7EgazoTgwVGyahF31h5lli9HjRO1srCSnOdtQwlOqvU1PSz1zqhrq5_CCbtci-76BM4SXxObHJM4ZNxpnBfsd8rU_mANU7Sk1G-ARsu4KWrJFJmJSANbH7RjvKgclQoBgIwNBkFw9hCqs_T3Ca4liiz-sVJo\"}";
    private static final String API_KEY_USER_EMAIL = "default-test-only-api-key-user";
    private static final String API_KEY = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImZjNWFiNzkxLWE1ZmUtNDBlOC1hYmQ3LWIwMzlhNDQwZmVmNyJ9.eyJleHAiOjIyMTkyMzgwMjgsInN1YiI6ImRlZmF1bHQtdGVzdC1vbmx5LWFwaS1rZXktdXNlciIsImlzcyI6InN0cm9vbSIsImF1ZCI6IjYxTVRSYTB4RVRMU1ZtZTliRTVXVTJfTU02Q2NkNTJWcVljY2pjRVZqM3RXSEdHczFnY0Nmdz09In0.NLfYziQj_QRAZjBnfzWpdmtiZQaVDeUycimke7dP96mD_k4EEPRudQ2Nmhu73G_tju6nY5afldl7Og0izeRqYZCm1b9EjrjtkDiDmcQelgotYkHrgz0VPoCgBCO8AJnY5msG4XLJVAynWK1lVSBipwcAgaC8LjRFJ4da9mwEnCOMooW1aMr-RJ7FbS6nt75-e6u_RMRtj9KO840kNEGDWhI3AY6rE1Jh1OPc-apyXTqouiqzqOjK5CpoNmC-cZymdWBoKLY7lPvdaJ7tz62zvtWwSPsFQKBnhWn-3JjQHEaFBM7XoAaQ4b6MhEy1gTyZJn_NOSfDloy-X654gDJn3Q";
    // ------------------------------------------------------------------------------------------------

    public String getOauth2ClientId() {
        return OAUTH2_CLIENT_ID;
    }

    public String getOauth2ClientName() {
        return OAUTH2_CLIENT_NAME;
    }

    public String getOauth2ClientSecret() {
        return OAUTH2_CLIENT_SECRET;
    }

    public String getOauth2ClientUriPattern() {
        return OAUTH2_CLIENT_URI_PATTERN;
    }

    public String getPublicKeyId() {
        return PUBLIC_KEY_ID;
    }

    public String getPublicKeyJson() {
        return PUBLIC_KEY_JSON;
    }

    public String getApiKeyUserEmail() {
        return API_KEY_USER_EMAIL;
    }

    public String getApiKey() {
        return API_KEY;
    }
}

package stroom.util.authentication;

/**
 * A set of hard-coded credentials for use ONLY in testing. They allow us to run
 * stroom and stroom-proxy such that API calls from proxy to stroom will pass
 * authentication.
 * <p>
 * The values used in the this class are generated by the main() method in
 * {@link stroom.authentication.oauth2.GenerateTestOpenIdDetails}
 * <p>
 * These default values will only be used if the following prop is set to true
 * {@link stroom.authentication.config.AuthenticationConfig#isUseDefaultOpenIdCredentials()}
 */
public class DefaultOpenIdCredentials {

    // Made with a public ctor so it is injectable and mockable, if required.
    public DefaultOpenIdCredentials() {
    }

    // ------------------------------------------------------------------------------------------------
    // The values between the lines were generated using stroom.authentication.oauth2.GenerateTestOpenIdDetails
    // at 2020-04-28T13:54:40.517614Z
    // The dashed lines are important don't remove them!
    private static final String OAUTH2_CLIENT_ID = "ewFj-MZHG8NWiA_evSIzoYVdXA4N9l3VSQlA8lYdRSuBtnVDb2Lgxw==";
    private static final String OAUTH2_CLIENT_NAME = "Stroom Client Internal (TEST ONLY)";
    private static final String OAUTH2_CLIENT_SECRET = "-B7xkRsF1FqskhHASjrs2ICxc9Q=";
    private static final String OAUTH2_CLIENT_URI_PATTERN = ".*";
    private static final String PUBLIC_KEY_ID = "26608955-82d6-4c93-9b55-41ea152c517b";
    private static final String PUBLIC_KEY_JSON = "{\"kty\":\"RSA\",\"kid\":\"26608955-82d6-4c93-9b55-41ea152c517b\",\"use\":\"sig\",\"alg\":\"RS256\",\"n\":\"10OnMLkiIjShvWjvVF8HRzK_h1C7ug0d-2tYtKU2mbv0tasA6ib8YWZ-eM_wHoX_8vcXvjkbzrmKUsfm-k0_Es6pknGCJ6Bk78yOCApIYUIZ0dxEd4ibSQCIaV0DGNEzpsf6yGvgPKOAuXdPAHR43cT52AHqJUPQgGRZOkTbtloVxzHk7jyJb_Ubwvxywnd1Ml4-yH8WXre1PLfGZ_fJ4m5kSvh_kG_nq5NB5f9kM-l21C4A2fQMwpZIFmqUwMGmNTV__pdpJxdEMs1WPAi8SgIlB-D8ovKLje9ZZEMB7xhUkI_E-d2iaTiVAMZcwBi4C8xihi8eYr5SnZVOgBXZfw\",\"e\":\"AQAB\",\"d\":\"CzGpcA8whzbVclQSngCTEFDDRPYdzP8BoCFk63_r5vKvNwM9eO-uECKUURP_GJc_SBMxWOL_XzCm0Mc0a6-4p_G3P7ZHXmgo1497k091lBkr3o3lwZGJAbLVZSVBE_lNBk8_60wwzPZzqzFZGlz0LBQiKelvk6CDJyoQucb65fCQ2WD0fmFN6ZexjKF0oqAk4YHXMCm0RdjSlQnvpcQAeVcjlJ-i5MqsKjVDNmsV29Fabz7yA_jNKeQgO1ww6Hm8Kk5qQ53XKWyGeK8bGOBd7Au_xo5IXOEiKLsVurTY4QtQttHY46XnumZAKA9t6wxFJYfy_r0eIqa5tkS9bPBiAQ\",\"p\":\"-tkZGrqPGr-e8GRtdH085CKrzffj9IWKx5RUnqgmCW0J6hrqpF0P3LQudXRAWDQKh_b_MVr8-2WahdhRp3rYm6QRXJzj84qTzDpUjBCPmo7-ARGk69QrLn_l65dH3RY_IFZgLqiLrQp8161XNBlGMhfO3jmzB7mmN0zId1rO2i8\",\"q\":\"2692sjbY-n1vxhY4XOmG7EeuLo-jNlBhLYSXr5V6v3TSFFitJC7AHwgc4TNgYNB0srmfsTrY74IlEGc63BikL4WHjP6JyTJ4qNs1M1XhLzh8pGPAWnxWdY2kljrCYub0txJU3gR9kssN4E6oZly-E6OuwReX923WRs8dFrgSMbE\",\"dp\":\"iRih-dPAZpQX37Zjg-j2oJC6aSV0Nq3NvWo6HUQ1Fa28X3A6kX4zLyJiydqxWAOJReoeavEZlqRfIYuqhOhE_jtbKcytYOt5_4JZtvtOIODJvffQtPsOZqmMFYhmxFRmR9wtURLY08gJly6rnFO746DTdO0ABdbXGx4h6el9aA0\",\"dq\":\"HUfKu0AiNWjIoA9QHdomWJHJPn14lIGsIiP9D7MNtDz-zyVullcA1mH_b2ionN7L3xJsnXOpfGrNQ91uc-143Ligc4Ntm_p1KJRnB9uXcvLFcie1eJn_8BUb7cYRKJt93HS-CQVyM0GLLO1u9o2_6-AyJ5xcbece2zs5tlB8ZFE\",\"qi\":\"C-xKJ4n2PxOhReOGP8YoKGL3uw6ujYKOWSkO40CQSdXuWhzlh1ve7rJ1HG1euYytn3N7kv1JZMguXB38qt60eoUx0Plqh3JLUUbGOI7Eu0HXiRpaFU2IZDQL6cvDp6VMI_qpBhey6gi8N7clwbIBx9n4oqcHcqvgrF-tp3lWBnQ\"}";
    private static final String API_KEY_USER_EMAIL = "default-test-only-api-key-user";
    private static final String API_KEY = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJiMzlhYTc1LWRlYjYtNDA1YS04ODc1LTE2MDk2YWNmODIxYSJ9.eyJleHAiOjIyMTkyMzQwODAsInN1YiI6ImRlZmF1bHQtdGVzdC1vbmx5LWFwaS1rZXktdXNlciIsImlzcyI6InN0cm9vbSIsImF1ZCI6ImV3RmotTVpIRzhOV2lBX2V2U0l6b1lWZFhBNE45bDNWU1FsQThsWWRSU3VCdG5WRGIyTGd4dz09In0.BJFI8FQTwFg6gXRIJZWsiQ5gq0Svrxwo7qsKoDxXik_IgfHpl4EIJ9xhg5XujAXTWtCp9xYqUsodMiPjwyIIlo4q_UTtZjs2STdfaiGHkqGV-ScB8JMZXBQ_Vmw_Jqj1GIdktqbrKdAvBTJl08Xln24VdPrFdLkUdT7RGKxttzi8VNIUcPNluQlTVORq0ILnvFxsXUWz1U7nBBvx52iQQ8ZMZDMIuvt23xSdRTKBZNUhwp2JX3rYspM-FZBhmLgECPt0_yBcindGUuBpqzYPHcx0k0zQnwhypqJui88-fU__Zc3waG97frTVL9RIdy9POAppoG-suiaWduADFn-tCQ";
    // ------------------------------------------------------------------------------------------------

    public String getOauth2ClientId() {
        return OAUTH2_CLIENT_ID;
    }

    public String getOauth2ClientName() {
        return OAUTH2_CLIENT_NAME;
    }

    public String getOauth2ClientSecret() {
        return OAUTH2_CLIENT_SECRET;
    }

    public String getOauth2ClientUriPattern() {
        return OAUTH2_CLIENT_URI_PATTERN;
    }

    public String getPublicKeyId() {
        return PUBLIC_KEY_ID;
    }

    public String getPublicKeyJson() {
        return PUBLIC_KEY_JSON;
    }

    public String getApiKeyUserEmail() {
        return API_KEY_USER_EMAIL;
    }

    public String getApiKey() {
        return API_KEY;
    }
}

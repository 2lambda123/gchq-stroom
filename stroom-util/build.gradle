import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

ext.moduleName = 'stroom.util'

dependencies {
    compile project(':stroom-util-shared')

    compile libs.commons_codec
    compile libs.guava
    compile libs.jackson_annotations
    compile libs.jackson_core
    compile libs.jackson_databind
    compile libs.javax_servlet_api
    compile libs.javax_inject
    compile libs.jaxb_api
    compile libs.slf4j_api

    testCompile libs.assertj_core
    testCompile libs.commons_lang
    testCompileOnly libs.junit_jupiter_api

    // the following logging libs are needed when running junits outside dropwizard
    testRuntime libs.jcl_over_slf4j
    testRuntime libs.jul_to_slf4j
    testRuntime libs.log4j_over_slf4j
    testRuntime libs.logback_classic
    testRuntime libs.logback_core
    testRuntime libs.jaxb_runtime
    testRuntime libs.javax_activation
    testRuntimeOnly libs.junit_jupiter_engine
}

task writeBuildProperties {
    def propertyFile = file "${project.rootDir}/stroom-util/src/main/resources/META-INF/stroom-util-build.properties"
    def props = new Properties()

    props.setProperty("buildVersion", versions.stroom)
    props.setProperty("buildDate", ZonedDateTime.now().format(DateTimeFormatter.ISO_INSTANT))

    props.store(propertyFile.newWriter(), null)
}

tasks.compileJava.dependsOn writeBuildProperties

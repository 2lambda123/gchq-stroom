/*
 * This file is generated by jOOQ.
 */
package stroom.explorer.impl.db.jooq.tables.records;


import stroom.explorer.impl.db.jooq.tables.ExplorerFavourite;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExplorerFavouriteRecord extends UpdatableRecordImpl<ExplorerFavouriteRecord> implements Record4<Integer, Integer, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stroom.explorer_favourite.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.explorer_favourite.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.explorer_favourite.explorer_node_id</code>.
     */
    public void setExplorerNodeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.explorer_favourite.explorer_node_id</code>.
     */
    public Integer getExplorerNodeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stroom.explorer_favourite.user_uuid</code>.
     */
    public void setUserUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.explorer_favourite.user_uuid</code>.
     */
    public String getUserUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stroom.explorer_favourite.create_time_ms</code>.
     */
    public void setCreateTimeMs(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.explorer_favourite.create_time_ms</code>.
     */
    public Long getCreateTimeMs() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ExplorerFavourite.EXPLORER_FAVOURITE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ExplorerFavourite.EXPLORER_FAVOURITE.EXPLORER_NODE_ID;
    }

    @Override
    public Field<String> field3() {
        return ExplorerFavourite.EXPLORER_FAVOURITE.USER_UUID;
    }

    @Override
    public Field<Long> field4() {
        return ExplorerFavourite.EXPLORER_FAVOURITE.CREATE_TIME_MS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getExplorerNodeId();
    }

    @Override
    public String component3() {
        return getUserUuid();
    }

    @Override
    public Long component4() {
        return getCreateTimeMs();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getExplorerNodeId();
    }

    @Override
    public String value3() {
        return getUserUuid();
    }

    @Override
    public Long value4() {
        return getCreateTimeMs();
    }

    @Override
    public ExplorerFavouriteRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ExplorerFavouriteRecord value2(Integer value) {
        setExplorerNodeId(value);
        return this;
    }

    @Override
    public ExplorerFavouriteRecord value3(String value) {
        setUserUuid(value);
        return this;
    }

    @Override
    public ExplorerFavouriteRecord value4(Long value) {
        setCreateTimeMs(value);
        return this;
    }

    @Override
    public ExplorerFavouriteRecord values(Integer value1, Integer value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExplorerFavouriteRecord
     */
    public ExplorerFavouriteRecord() {
        super(ExplorerFavourite.EXPLORER_FAVOURITE);
    }

    /**
     * Create a detached, initialised ExplorerFavouriteRecord
     */
    public ExplorerFavouriteRecord(Integer id, Integer explorerNodeId, String userUuid, Long createTimeMs) {
        super(ExplorerFavourite.EXPLORER_FAVOURITE);

        setId(id);
        setExplorerNodeId(explorerNodeId);
        setUserUuid(userUuid);
        setCreateTimeMs(createTimeMs);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.security.impl.db.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import stroom.security.impl.db.jooq.Indexes;
import stroom.security.impl.db.jooq.Keys;
import stroom.security.impl.db.jooq.Stroom;
import stroom.security.impl.db.jooq.tables.records.StroomUserGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StroomUserGroup extends TableImpl<StroomUserGroupRecord> {

    private static final long serialVersionUID = 2126288712;

    /**
     * The reference instance of <code>stroom.stroom_user_group</code>
     */
    public static final StroomUserGroup STROOM_USER_GROUP = new StroomUserGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StroomUserGroupRecord> getRecordType() {
        return StroomUserGroupRecord.class;
    }

    /**
     * The column <code>stroom.stroom_user_group.id</code>.
     */
    public final TableField<StroomUserGroupRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>stroom.stroom_user_group.user_uuid</code>.
     */
    public final TableField<StroomUserGroupRecord, String> USER_UUID = createField("user_uuid", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>stroom.stroom_user_group.group_uuid</code>.
     */
    public final TableField<StroomUserGroupRecord, String> GROUP_UUID = createField("group_uuid", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>stroom.stroom_user_group</code> table reference
     */
    public StroomUserGroup() {
        this(DSL.name("stroom_user_group"), null);
    }

    /**
     * Create an aliased <code>stroom.stroom_user_group</code> table reference
     */
    public StroomUserGroup(String alias) {
        this(DSL.name(alias), STROOM_USER_GROUP);
    }

    /**
     * Create an aliased <code>stroom.stroom_user_group</code> table reference
     */
    public StroomUserGroup(Name alias) {
        this(alias, STROOM_USER_GROUP);
    }

    private StroomUserGroup(Name alias, Table<StroomUserGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private StroomUserGroup(Name alias, Table<StroomUserGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StroomUserGroup(Table<O> child, ForeignKey<O, StroomUserGroupRecord> key) {
        super(child, key, STROOM_USER_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Stroom.STROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STROOM_USER_GROUP_GROUP_UUID, Indexes.STROOM_USER_GROUP_PRIMARY, Indexes.STROOM_USER_GROUP_USER_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StroomUserGroupRecord, Long> getIdentity() {
        return Keys.IDENTITY_STROOM_USER_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StroomUserGroupRecord> getPrimaryKey() {
        return Keys.KEY_STROOM_USER_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StroomUserGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<StroomUserGroupRecord>>asList(Keys.KEY_STROOM_USER_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StroomUserGroupRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StroomUserGroupRecord, ?>>asList(Keys.STROOM_USER_GROUP_IBFK_1, Keys.STROOM_USER_GROUP_IBFK_2);
    }

    public StroomUser stroomUserGroupIbfk_1() {
        return new StroomUser(this, Keys.STROOM_USER_GROUP_IBFK_1);
    }

    public StroomUser stroomUserGroupIbfk_2() {
        return new StroomUser(this, Keys.STROOM_USER_GROUP_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StroomUserGroup as(String alias) {
        return new StroomUserGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StroomUserGroup as(Name alias) {
        return new StroomUserGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StroomUserGroup rename(String name) {
        return new StroomUserGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StroomUserGroup rename(Name name) {
        return new StroomUserGroup(name, null);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.index.impl.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.index.impl.db.tables.Index;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndexRecord extends UpdatableRecordImpl<IndexRecord> implements Record15<Integer, Byte, String, Long, String, Long, String, String, Integer, Integer, Byte, Integer, Integer, String, String> {

    private static final long serialVersionUID = 1011017875;

    /**
     * Setter for <code>stroom.index.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.index.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.index.version</code>.
     */
    public void setVersion(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.index.version</code>.
     */
    public Byte getVersion() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>stroom.index.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.index.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stroom.index.created_at</code>.
     */
    public void setCreatedAt(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.index.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>stroom.index.updated_by</code>.
     */
    public void setUpdatedBy(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.index.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>stroom.index.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.index.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>stroom.index.name</code>.
     */
    public void setName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.index.name</code>.
     */
    public String getName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>stroom.index.description</code>.
     */
    public void setDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.index.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>stroom.index.max_doc</code>.
     */
    public void setMaxDoc(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.index.max_doc</code>.
     */
    public Integer getMaxDoc() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>stroom.index.max_shard</code>.
     */
    public void setMaxShard(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.index.max_shard</code>.
     */
    public Integer getMaxShard() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>stroom.index.partition_by</code>.
     */
    public void setPartitionBy(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.index.partition_by</code>.
     */
    public Byte getPartitionBy() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>stroom.index.partition_size</code>.
     */
    public void setPartitionSize(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>stroom.index.partition_size</code>.
     */
    public Integer getPartitionSize() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>stroom.index.retention_day_age</code>.
     */
    public void setRetentionDayAge(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>stroom.index.retention_day_age</code>.
     */
    public Integer getRetentionDayAge() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>stroom.index.fields</code>.
     */
    public void setFields(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>stroom.index.fields</code>.
     */
    public String getFields() {
        return (String) get(13);
    }

    /**
     * Setter for <code>stroom.index.uuid</code>.
     */
    public void setUuid(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>stroom.index.uuid</code>.
     */
    public String getUuid() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, Byte, String, Long, String, Long, String, String, Integer, Integer, Byte, Integer, Integer, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, Byte, String, Long, String, Long, String, String, Integer, Integer, Byte, Integer, Integer, String, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Index.INDEX.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return Index.INDEX.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Index.INDEX.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Index.INDEX.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Index.INDEX.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Index.INDEX.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Index.INDEX.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Index.INDEX.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Index.INDEX.MAX_DOC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Index.INDEX.MAX_SHARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field11() {
        return Index.INDEX.PARTITION_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Index.INDEX.PARTITION_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Index.INDEX.RETENTION_DAY_AGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return Index.INDEX.FIELDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Index.INDEX.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getMaxDoc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getMaxShard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component11() {
        return getPartitionBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getPartitionSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getRetentionDayAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getFields();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getMaxDoc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getMaxShard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value11() {
        return getPartitionBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getPartitionSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getRetentionDayAge();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getFields();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value2(Byte value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value4(Long value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value5(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value6(Long value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value7(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value8(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value9(Integer value) {
        setMaxDoc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value10(Integer value) {
        setMaxShard(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value11(Byte value) {
        setPartitionBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value12(Integer value) {
        setPartitionSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value13(Integer value) {
        setRetentionDayAge(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value14(String value) {
        setFields(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord value15(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexRecord values(Integer value1, Byte value2, String value3, Long value4, String value5, Long value6, String value7, String value8, Integer value9, Integer value10, Byte value11, Integer value12, Integer value13, String value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndexRecord
     */
    public IndexRecord() {
        super(Index.INDEX);
    }

    /**
     * Create a detached, initialised IndexRecord
     */
    public IndexRecord(Integer id, Byte version, String createdBy, Long createdAt, String updatedBy, Long updatedAt, String name, String description, Integer maxDoc, Integer maxShard, Byte partitionBy, Integer partitionSize, Integer retentionDayAge, String fields, String uuid) {
        super(Index.INDEX);

        set(0, id);
        set(1, version);
        set(2, createdBy);
        set(3, createdAt);
        set(4, updatedBy);
        set(5, updatedAt);
        set(6, name);
        set(7, description);
        set(8, maxDoc);
        set(9, maxShard);
        set(10, partitionBy);
        set(11, partitionSize);
        set(12, retentionDayAge);
        set(13, fields);
        set(14, uuid);
    }
}

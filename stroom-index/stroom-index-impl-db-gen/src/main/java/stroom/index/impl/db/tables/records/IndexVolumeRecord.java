/*
 * This file is generated by jOOQ.
 */
package stroom.index.impl.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;

import stroom.index.impl.db.tables.IndexVolume;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndexVolumeRecord extends UpdatableRecordImpl<IndexVolumeRecord> implements Record16<Integer, Byte, String, Long, String, Long, String, Byte, Byte, Long, Long, Long, Long, Long, String, String> {

    private static final long serialVersionUID = 576447365;

    /**
     * Setter for <code>stroom.index_volume.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.index_volume.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stroom.index_volume.version</code>.
     */
    public void setVersion(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.index_volume.version</code>.
     */
    public Byte getVersion() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>stroom.index_volume.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>stroom.index_volume.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stroom.index_volume.created_at</code>.
     */
    public void setCreatedAt(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>stroom.index_volume.created_at</code>.
     */
    public Long getCreatedAt() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>stroom.index_volume.updated_by</code>.
     */
    public void setUpdatedBy(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>stroom.index_volume.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>stroom.index_volume.updated_at</code>.
     */
    public void setUpdatedAt(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>stroom.index_volume.updated_at</code>.
     */
    public Long getUpdatedAt() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>stroom.index_volume.path</code>.
     */
    public void setPath(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>stroom.index_volume.path</code>.
     */
    public String getPath() {
        return (String) get(6);
    }

    /**
     * Setter for <code>stroom.index_volume.index_status</code>.
     */
    public void setIndexStatus(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>stroom.index_volume.index_status</code>.
     */
    public Byte getIndexStatus() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>stroom.index_volume.volume_type</code>.
     */
    public void setVolumeType(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>stroom.index_volume.volume_type</code>.
     */
    public Byte getVolumeType() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>stroom.index_volume.bytes_limit</code>.
     */
    public void setBytesLimit(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>stroom.index_volume.bytes_limit</code>.
     */
    public Long getBytesLimit() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>stroom.index_volume.bytes_used</code>.
     */
    public void setBytesUsed(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>stroom.index_volume.bytes_used</code>.
     */
    public Long getBytesUsed() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>stroom.index_volume.bytes_free</code>.
     */
    public void setBytesFree(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>stroom.index_volume.bytes_free</code>.
     */
    public Long getBytesFree() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>stroom.index_volume.bytes_total</code>.
     */
    public void setBytesTotal(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>stroom.index_volume.bytes_total</code>.
     */
    public Long getBytesTotal() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>stroom.index_volume.status_ms</code>.
     */
    public void setStatusMs(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>stroom.index_volume.status_ms</code>.
     */
    public Long getStatusMs() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>stroom.index_volume.index_uuid</code>.
     */
    public void setIndexUuid(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>stroom.index_volume.index_uuid</code>.
     */
    public String getIndexUuid() {
        return (String) get(14);
    }

    /**
     * Setter for <code>stroom.index_volume.node_name</code>.
     */
    public void setNodeName(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>stroom.index_volume.node_name</code>.
     */
    public String getNodeName() {
        return (String) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Integer, Byte, String, Long, String, Long, String, Byte, Byte, Long, Long, Long, Long, Long, String, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Integer, Byte, String, Long, String, Long, String, Byte, Byte, Long, Long, Long, Long, Long, String, String> valuesRow() {
        return (Row16) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return IndexVolume.INDEX_VOLUME.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return IndexVolume.INDEX_VOLUME.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return IndexVolume.INDEX_VOLUME.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return IndexVolume.INDEX_VOLUME.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return IndexVolume.INDEX_VOLUME.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return IndexVolume.INDEX_VOLUME.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return IndexVolume.INDEX_VOLUME.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return IndexVolume.INDEX_VOLUME.INDEX_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return IndexVolume.INDEX_VOLUME.VOLUME_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return IndexVolume.INDEX_VOLUME.BYTES_LIMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return IndexVolume.INDEX_VOLUME.BYTES_USED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return IndexVolume.INDEX_VOLUME.BYTES_FREE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field13() {
        return IndexVolume.INDEX_VOLUME.BYTES_TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field14() {
        return IndexVolume.INDEX_VOLUME.STATUS_MS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return IndexVolume.INDEX_VOLUME.INDEX_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return IndexVolume.INDEX_VOLUME.NODE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component8() {
        return getIndexStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component9() {
        return getVolumeType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getBytesLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getBytesUsed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component12() {
        return getBytesFree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component13() {
        return getBytesTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component14() {
        return getStatusMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getIndexUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getNodeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getIndexStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getVolumeType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getBytesLimit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getBytesUsed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getBytesFree();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value13() {
        return getBytesTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value14() {
        return getStatusMs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getIndexUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getNodeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value2(Byte value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value4(Long value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value5(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value6(Long value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value7(String value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value8(Byte value) {
        setIndexStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value9(Byte value) {
        setVolumeType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value10(Long value) {
        setBytesLimit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value11(Long value) {
        setBytesUsed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value12(Long value) {
        setBytesFree(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value13(Long value) {
        setBytesTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value14(Long value) {
        setStatusMs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value15(String value) {
        setIndexUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord value16(String value) {
        setNodeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IndexVolumeRecord values(Integer value1, Byte value2, String value3, Long value4, String value5, Long value6, String value7, Byte value8, Byte value9, Long value10, Long value11, Long value12, Long value13, Long value14, String value15, String value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndexVolumeRecord
     */
    public IndexVolumeRecord() {
        super(IndexVolume.INDEX_VOLUME);
    }

    /**
     * Create a detached, initialised IndexVolumeRecord
     */
    public IndexVolumeRecord(Integer id, Byte version, String createdBy, Long createdAt, String updatedBy, Long updatedAt, String path, Byte indexStatus, Byte volumeType, Long bytesLimit, Long bytesUsed, Long bytesFree, Long bytesTotal, Long statusMs, String indexUuid, String nodeName) {
        super(IndexVolume.INDEX_VOLUME);

        set(0, id);
        set(1, version);
        set(2, createdBy);
        set(3, createdAt);
        set(4, updatedBy);
        set(5, updatedAt);
        set(6, path);
        set(7, indexStatus);
        set(8, volumeType);
        set(9, bytesLimit);
        set(10, bytesUsed);
        set(11, bytesFree);
        set(12, bytesTotal);
        set(13, statusMs);
        set(14, indexUuid);
        set(15, nodeName);
    }
}

/*
 * This file is generated by jOOQ.
 */
package stroom.meta.impl.db.jooq.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import stroom.meta.impl.db.jooq.tables.MetaRetentionTracker;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetaRetentionTrackerRecord extends TableRecordImpl<MetaRetentionTrackerRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1629569085;

    /**
     * Setter for <code>stroom.meta_retention_tracker.last_run_time</code>.
     */
    public void setLastRunTime(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>stroom.meta_retention_tracker.last_run_time</code>.
     */
    public Long getLastRunTime() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>stroom.meta_retention_tracker.retention_rules_version</code>.
     */
    public void setRetentionRulesVersion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>stroom.meta_retention_tracker.retention_rules_version</code>.
     */
    public String getRetentionRulesVersion() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MetaRetentionTracker.META_RETENTION_TRACKER.LAST_RUN_TIME;
    }

    @Override
    public Field<String> field2() {
        return MetaRetentionTracker.META_RETENTION_TRACKER.RETENTION_RULES_VERSION;
    }

    @Override
    public Long component1() {
        return getLastRunTime();
    }

    @Override
    public String component2() {
        return getRetentionRulesVersion();
    }

    @Override
    public Long value1() {
        return getLastRunTime();
    }

    @Override
    public String value2() {
        return getRetentionRulesVersion();
    }

    @Override
    public MetaRetentionTrackerRecord value1(Long value) {
        setLastRunTime(value);
        return this;
    }

    @Override
    public MetaRetentionTrackerRecord value2(String value) {
        setRetentionRulesVersion(value);
        return this;
    }

    @Override
    public MetaRetentionTrackerRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MetaRetentionTrackerRecord
     */
    public MetaRetentionTrackerRecord() {
        super(MetaRetentionTracker.META_RETENTION_TRACKER);
    }

    /**
     * Create a detached, initialised MetaRetentionTrackerRecord
     */
    public MetaRetentionTrackerRecord(Long lastRunTime, String retentionRulesVersion) {
        super(MetaRetentionTracker.META_RETENTION_TRACKER);

        set(0, lastRunTime);
        set(1, retentionRulesVersion);
    }
}
